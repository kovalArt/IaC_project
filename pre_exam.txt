Mon Dec 18 04:17:45 AM EST 2023
+ hostname
parrot
+ ansible-playbook infra.yaml --diff

PLAY [Initial setup] ***********************************************************

TASK [Gathering Facts] *********************************************************
ok: [kovalart-1]
ok: [kovalart-3]
ok: [kovalart-2]

TASK [init : Update APT cache] *************************************************
ok: [kovalart-3]
changed: [kovalart-2]
changed: [kovalart-1]

TASK [init : Install Prometheus nodes] *****************************************
The following additional packages will be installed:
  libio-pty-perl libipc-run-perl libtime-duration-perl libtimedate-perl
  moreutils prometheus-node-exporter-collectors smartmontools
Suggested packages:
  gsmartcontrol smart-notifier mailx | mailutils
The following NEW packages will be installed:
  libio-pty-perl libipc-run-perl libtime-duration-perl libtimedate-perl
  moreutils prometheus-node-exporter prometheus-node-exporter-collectors
  smartmontools
0 upgraded, 8 newly installed, 0 to remove and 265 not upgraded.
changed: [kovalart-2]
The following additional packages will be installed:
  libio-pty-perl libipc-run-perl libtime-duration-perl libtimedate-perl
  moreutils prometheus-node-exporter-collectors smartmontools
Suggested packages:
  gsmartcontrol smart-notifier mailx | mailutils
The following NEW packages will be installed:
  libio-pty-perl libipc-run-perl libtime-duration-perl libtimedate-perl
  moreutils prometheus-node-exporter prometheus-node-exporter-collectors
  smartmontools
0 upgraded, 8 newly installed, 0 to remove and 265 not upgraded.
changed: [kovalart-1]
The following additional packages will be installed:
  libio-pty-perl libipc-run-perl libtime-duration-perl libtimedate-perl
  moreutils prometheus-node-exporter-collectors smartmontools
Suggested packages:
  gsmartcontrol smart-notifier mailx | mailutils
The following NEW packages will be installed:
  libio-pty-perl libipc-run-perl libtime-duration-perl libtimedate-perl
  moreutils prometheus-node-exporter prometheus-node-exporter-collectors
  smartmontools
0 upgraded, 8 newly installed, 0 to remove and 265 not upgraded.
changed: [kovalart-3]

TASK [init : Ensure the Node Exporters are started] ****************************
ok: [kovalart-3]
ok: [kovalart-1]
ok: [kovalart-2]

TASK [init : Ensure ca-certificates is installed with a specific version] ******
The following packages will be upgraded:
  ca-certificates
1 upgraded, 0 newly installed, 0 to remove and 264 not upgraded.
changed: [kovalart-2]
The following packages will be upgraded:
  ca-certificates
Preconfiguring packages ...
1 upgraded, 0 newly installed, 0 to remove and 264 not upgraded.
changed: [kovalart-3]
The following packages will be upgraded:
  ca-certificates
1 upgraded, 0 newly installed, 0 to remove and 264 not upgraded.
changed: [kovalart-1]

TASK [init : Install Rsyslog] **************************************************
ok: [kovalart-3]
ok: [kovalart-2]
ok: [kovalart-1]

TASK [init : Add the Rsyslog configuration for the Telegraf] *******************
--- before
+++ after: /home/parrot/.ansible/tmp/ansible-local-267406kvomjqnj/tmptam0lc0s/rsyslog.conf.j2
@@ -0,0 +1,7 @@
+$ActionQueueType LinkedList # use asynchronous processing
+$ActionQueueFileName srvrfwd # set file name, also enables disk mode
+$ActionResumeRetryCount -1 # infinite retries on insert failure
+$ActionQueueSaveOnShutdown on # save in-memory data if rsyslog shuts down
+
+
+*.* @kovalart-2:6514;RSYSLOG_SyslogProtocol23Format
\ No newline at end of file

changed: [kovalart-1]
--- before
+++ after: /home/parrot/.ansible/tmp/ansible-local-267406kvomjqnj/tmpsgic6lud/rsyslog.conf.j2
@@ -0,0 +1,7 @@
+$ActionQueueType LinkedList # use asynchronous processing
+$ActionQueueFileName srvrfwd # set file name, also enables disk mode
+$ActionResumeRetryCount -1 # infinite retries on insert failure
+$ActionQueueSaveOnShutdown on # save in-memory data if rsyslog shuts down
+
+
+*.* @kovalart-2:6514;RSYSLOG_SyslogProtocol23Format
\ No newline at end of file

changed: [kovalart-2]
--- before
+++ after: /home/parrot/.ansible/tmp/ansible-local-267406kvomjqnj/tmpqsi67htc/rsyslog.conf.j2
@@ -0,0 +1,7 @@
+$ActionQueueType LinkedList # use asynchronous processing
+$ActionQueueFileName srvrfwd # set file name, also enables disk mode
+$ActionResumeRetryCount -1 # infinite retries on insert failure
+$ActionQueueSaveOnShutdown on # save in-memory data if rsyslog shuts down
+
+
+*.* @kovalart-2:6514;RSYSLOG_SyslogProtocol23Format
\ No newline at end of file

changed: [kovalart-3]

TASK [init : Create backup user] ***********************************************
changed: [kovalart-1]
changed: [kovalart-2]
changed: [kovalart-3]

TASK [init : Ensure .ssh directory exists for backup user] *********************
--- before
+++ after
@@ -1,7 +1,7 @@
 {
-    "group": 0,
-    "mode": "0755",
-    "owner": 0,
+    "group": 34,
+    "mode": "0700",
+    "owner": 34,
     "path": "/home/backup/.ssh",
-    "state": "absent"
+    "state": "directory"
 }

changed: [kovalart-2]
--- before
+++ after
@@ -1,7 +1,7 @@
 {
-    "group": 0,
-    "mode": "0755",
-    "owner": 0,
+    "group": 34,
+    "mode": "0700",
+    "owner": 34,
     "path": "/home/backup/.ssh",
-    "state": "absent"
+    "state": "directory"
 }

changed: [kovalart-1]
--- before
+++ after
@@ -1,7 +1,7 @@
 {
-    "group": 0,
-    "mode": "0755",
-    "owner": 0,
+    "group": 34,
+    "mode": "0700",
+    "owner": 34,
     "path": "/home/backup/.ssh",
-    "state": "absent"
+    "state": "directory"
 }

changed: [kovalart-3]

TASK [init : Generate SSH keypair for backup user] *****************************
--- before
+++ after
@@ -1 +1,8 @@
-{}
+{
+    "comment": "",
+    "fingerprint": "SHA256:4RnATTYlYO0pGM2yFzryIuAAvS1kQMLmbstTz0CQZyc",
+    "format": "",
+    "public_key": "AAAAB3NzaC1yc2EAAAADAQABAAABAQC4KNQkdm7M0Czpu8D2Cvv+1IZSB4veTTu/6MScoYvvef8hC0pPzRWPSUGlgJo2owU14d6lfiuxDdyLfcUFGWQf0AMlNClax7aAU/i6GdKWKBCTL6HcVJav0jgZUNTO4Pr+jbAJOu3d3G+zN4w+yh+5pOpYjFOsbnDR4PwDGXvxnmUkftbZ6aEPRDhOgp9cMYEA6+XC+HLVx/waDv2/Y5L3ltXj0iEPCxhd6I+aCm3iyRmBnfkmeFJRACiSupdTTyBHBP9SGzUPd9798dn7RjufTATkES+W9MAgyA59iBOhA4eJStvweLeID6kmQIfHkKraNhkT9bWUf/1kE5kHq2KF",
+    "size": 2048,
+    "type": "rsa"
+}

changed: [kovalart-1]
--- before
+++ after
@@ -1 +1,8 @@
-{}
+{
+    "comment": "",
+    "fingerprint": "SHA256:uwq4/hHRRte4X3iIWrOC+AJXetSJ13aBxPnhtUYQLqA",
+    "format": "",
+    "public_key": "AAAAB3NzaC1yc2EAAAADAQABAAABAQCbEIXrPst3OuiStgFvA5BU88nuRWuqumEm5HSNrqDW3O4+HvHD1JX6fJoOgU4g2k6vZg5rYyBbWDshVuWAfZUawXFdQdLWi2CbDiiycjFI4RFDIyw7IXDdFA5IWcd4QeH6nMtAAXsC0tc+DE7FHC3OSI/XQ4x1liyCHO6FnaZusQ75VlwkTJpm97GB2w2i1dwShq2+xCWYB4qe/0H6DE642KnJLh/oStdEha7YYUnmoDTJDHkTCT1nKSLrqLxjEbinXHPMA+VN8cU6A4IhZxhlnst9u2Gi4m0VFKXaTXjzgwQ4f7QpPkXUsf9mbK9Ouo+l2mO3t68Q+0NpocixA5T1",
+    "size": 2048,
+    "type": "rsa"
+}

changed: [kovalart-2]
--- before
+++ after
@@ -1 +1,8 @@
-{}
+{
+    "comment": "",
+    "fingerprint": "SHA256:wYAYgkPNsUZwqkVp5ZOk5WDOJxDh38s22njx2TSjrc4",
+    "format": "",
+    "public_key": "AAAAB3NzaC1yc2EAAAADAQABAAABAQDcRyF/SZjIZqxo69DSsznJmgGTNrXplaKuaa+qvaUx7mNMQ9QMB5HKdsCt6zYXX+42O0tA3bSko1phXvxkON7pI+xlD75a/37w0x0WV2mmmP+KJtBTdXakww016gmzhqD7Z3f8tt97Iir1r7e50AuHhV4Z2DdYTUgU9dSlJ+YwapVBezNryVEnVPFtXMllpmFFJNWbKF0FSez/jiIby0XwGNGBm61ONcSKlzyPsP+B1Na6Gvt1BiiL88ULAtyLYrATCebOf/XcXxjnE5k+S3RPj7E0Zz4QOmXHexDDhbJSShI0PrB1xe8wGN9Oq85gke9uew5uQV0l3bbT2LS5dmf3",
+    "size": 2048,
+    "type": "rsa"
+}

changed: [kovalart-3]

TASK [init : Add backup server SSH key to known hosts] *************************
--- before
+++ after: /home/parrot/.ansible/tmp/ansible-local-267406kvomjqnj/tmpfjslzb6c/backup_known_hosts.j2
@@ -0,0 +1,3 @@
+192.168.42.132 ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIEu6pFFWyuRrl4WGFPQGElYN9txwTGm2wSntcpVAaN90
+backup ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIEu6pFFWyuRrl4WGFPQGElYN9txwTGm2wSntcpVAaN90
+backup.infocare.io ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIEu6pFFWyuRrl4WGFPQGElYN9txwTGm2wSntcpVAaN90
\ No newline at end of file

changed: [kovalart-2]
--- before
+++ after: /home/parrot/.ansible/tmp/ansible-local-267406kvomjqnj/tmpnxmogkty/backup_known_hosts.j2
@@ -0,0 +1,3 @@
+192.168.42.132 ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIEu6pFFWyuRrl4WGFPQGElYN9txwTGm2wSntcpVAaN90
+backup ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIEu6pFFWyuRrl4WGFPQGElYN9txwTGm2wSntcpVAaN90
+backup.infocare.io ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIEu6pFFWyuRrl4WGFPQGElYN9txwTGm2wSntcpVAaN90
\ No newline at end of file

changed: [kovalart-1]
--- before
+++ after: /home/parrot/.ansible/tmp/ansible-local-267406kvomjqnj/tmp8dws0rlc/backup_known_hosts.j2
@@ -0,0 +1,3 @@
+192.168.42.132 ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIEu6pFFWyuRrl4WGFPQGElYN9txwTGm2wSntcpVAaN90
+backup ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIEu6pFFWyuRrl4WGFPQGElYN9txwTGm2wSntcpVAaN90
+backup.infocare.io ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIEu6pFFWyuRrl4WGFPQGElYN9txwTGm2wSntcpVAaN90
\ No newline at end of file

changed: [kovalart-3]

TASK [init : Ensure /home/backup/restore directory is created] *****************
--- before
+++ after
@@ -1,6 +1,6 @@
 {
-    "group": 0,
-    "owner": 0,
+    "group": 34,
+    "owner": 34,
     "path": "/home/backup/restore",
-    "state": "absent"
+    "state": "directory"
 }

changed: [kovalart-2]
--- before
+++ after
@@ -1,6 +1,6 @@
 {
-    "group": 0,
-    "owner": 0,
+    "group": 34,
+    "owner": 34,
     "path": "/home/backup/restore",
-    "state": "absent"
+    "state": "directory"
 }

changed: [kovalart-1]
--- before
+++ after
@@ -1,6 +1,6 @@
 {
-    "group": 0,
-    "owner": 0,
+    "group": 34,
+    "owner": 34,
     "path": "/home/backup/restore",
-    "state": "absent"
+    "state": "directory"
 }

changed: [kovalart-3]

TASK [init : Ensure Duplicity is installed] ************************************
The following additional packages will be installed:
  librsync2 python3-bcrypt python3-fasteners python3-future python3-lockfile
  python3-monotonic python3-paramiko
Suggested packages:
  python3-boto ncftp lftp tahoe-lafs python3-swiftclient python3-pip par2
  python-future-doc python-lockfile-doc python3-gssapi
The following NEW packages will be installed:
  duplicity librsync2 python3-bcrypt python3-fasteners python3-future
  python3-lockfile python3-monotonic python3-paramiko
0 upgraded, 8 newly installed, 0 to remove and 264 not upgraded.
changed: [kovalart-1]
The following additional packages will be installed:
  librsync2 python3-bcrypt python3-fasteners python3-future python3-lockfile
  python3-monotonic python3-paramiko
Suggested packages:
  python3-boto ncftp lftp tahoe-lafs python3-swiftclient python3-pip par2
  python-future-doc python-lockfile-doc python3-gssapi
The following NEW packages will be installed:
  duplicity librsync2 python3-bcrypt python3-fasteners python3-future
  python3-lockfile python3-monotonic python3-paramiko
0 upgraded, 8 newly installed, 0 to remove and 264 not upgraded.
changed: [kovalart-3]
The following additional packages will be installed:
  librsync2 python3-bcrypt python3-fasteners python3-future python3-lockfile
  python3-monotonic python3-paramiko
Suggested packages:
  python3-boto ncftp lftp tahoe-lafs python3-swiftclient python3-pip par2
  python-future-doc python-lockfile-doc python3-gssapi
The following NEW packages will be installed:
  duplicity librsync2 python3-bcrypt python3-fasteners python3-future
  python3-lockfile python3-monotonic python3-paramiko
0 upgraded, 8 newly installed, 0 to remove and 264 not upgraded.
changed: [kovalart-2]
[WARNING]: Could not match supplied host pattern, ignoring: children

PLAY [DNS server tasks] ********************************************************

TASK [Gathering Facts] *********************************************************
ok: [kovalart-3]
ok: [kovalart-2]
ok: [kovalart-1]

TASK [bind : Install Bind9] ****************************************************
The following additional packages will be installed:
  bind9-dnsutils bind9-libs bind9-utils dns-root-data libdpkg-perl
  libfile-fcntllock-perl libssl1.1 python3-ply
Suggested packages:
  bind-doc resolvconf debian-keyring gcc | c-compiler binutils bzr libssl-doc
  dpkg-dev python-ply-doc
The following NEW packages will be installed:
  bind9 bind9-utils dns-root-data libdpkg-perl libfile-fcntllock-perl
  libssl-dev pkg-config python3-dnspython python3-ply
The following packages will be upgraded:
  bind9-dnsutils bind9-libs libssl1.1
3 upgraded, 9 newly installed, 0 to remove and 261 not upgraded.
changed: [kovalart-2]
The following additional packages will be installed:
  bind9-dnsutils bind9-libs bind9-utils dns-root-data libdpkg-perl
  libfile-fcntllock-perl libssl1.1 python3-ply
Suggested packages:
  bind-doc resolvconf debian-keyring gcc | c-compiler binutils bzr libssl-doc
  dpkg-dev python-ply-doc
The following NEW packages will be installed:
  bind9 bind9-utils dns-root-data libdpkg-perl libfile-fcntllock-perl
  libssl-dev pkg-config python3-dnspython python3-ply
The following packages will be upgraded:
  bind9-dnsutils bind9-libs libssl1.1
3 upgraded, 9 newly installed, 0 to remove and 261 not upgraded.
changed: [kovalart-1]
The following additional packages will be installed:
  bind9-dnsutils bind9-libs bind9-utils dns-root-data libdpkg-perl
  libfile-fcntllock-perl libssl1.1 python3-ply
Suggested packages:
  bind-doc resolvconf debian-keyring gcc | c-compiler binutils bzr libssl-doc
  dpkg-dev python-ply-doc
The following NEW packages will be installed:
  bind9 bind9-utils dns-root-data libdpkg-perl libfile-fcntllock-perl
  libssl-dev pkg-config python3-dnspython python3-ply
The following packages will be upgraded:
  bind9-dnsutils bind9-libs libssl1.1
3 upgraded, 9 newly installed, 0 to remove and 261 not upgraded.
changed: [kovalart-3]

TASK [bind : Configure DNS forwarders] *****************************************
--- before: /etc/bind/named.conf.options
+++ after: /home/parrot/.ansible/tmp/ansible-local-267406kvomjqnj/tmpo2xat870/named.conf.options.j2
@@ -1,24 +1,28 @@
 options {
 	directory "/var/cache/bind";
+	forwarders {
+      	    1.1.1.1;
+      	    8.8.8.5;
+      	    9.9.9.9;
+      	};
+    allow-query { 127.0.0.0/8; 192.168.42.0/23; 172.17.0.0/16; };
+};
 
-	// If there is a firewall between you and nameservers you want
-	// to talk to, you may need to fix the firewall to allow multiple
-	// ports to talk.  See http://www.kb.cert.org/vuls/id/800113
+statistics-channels {
+  inet 127.0.0.1 port 8053 allow { 127.0.0.1; };
+};
 
-	// If your ISP provided one or more IP addresses for stable 
-	// nameservers, you probably want to use them as forwarders.  
-	// Uncomment the following block, and insert the addresses replacing 
-	// the all-0's placeholder.
+key "transfer.key" {
+  algorithm hmac-sha256;
+  secret "xqAsebeSxXmT84BQzBhTXnRzpKGVllUk45HKaWYDwhc=";
+};
 
-	// forwarders {
-	// 	0.0.0.0;
-	// };
+key "nsupdate.key" {
+  algorithm hmac-sha256;
+  secret "a5hO/BHaE8FqhbIOWlUR/q1X7h9esqDtUA8gJ5t532g=";
+};
 
-	//========================================================================
-	// If BIND logs error messages about the root key being expired,
-	// you will need to update your keys.  See https://www.isc.org/bind-keys
-	//========================================================================
-	dnssec-validation auto;
 
-	listen-on-v6 { any; };
-};
+
+
+

changed: [kovalart-3]
--- before: /etc/bind/named.conf.options
+++ after: /home/parrot/.ansible/tmp/ansible-local-267406kvomjqnj/tmp9g1daolr/named.conf.options.j2
@@ -1,24 +1,28 @@
 options {
 	directory "/var/cache/bind";
+	forwarders {
+      	    1.1.1.1;
+      	    8.8.8.5;
+      	    9.9.9.9;
+      	};
+    allow-query { 127.0.0.0/8; 192.168.42.0/23; 172.17.0.0/16; };
+};
 
-	// If there is a firewall between you and nameservers you want
-	// to talk to, you may need to fix the firewall to allow multiple
-	// ports to talk.  See http://www.kb.cert.org/vuls/id/800113
+statistics-channels {
+  inet 127.0.0.1 port 8053 allow { 127.0.0.1; };
+};
 
-	// If your ISP provided one or more IP addresses for stable 
-	// nameservers, you probably want to use them as forwarders.  
-	// Uncomment the following block, and insert the addresses replacing 
-	// the all-0's placeholder.
+key "transfer.key" {
+  algorithm hmac-sha256;
+  secret "xqAsebeSxXmT84BQzBhTXnRzpKGVllUk45HKaWYDwhc=";
+};
 
-	// forwarders {
-	// 	0.0.0.0;
-	// };
+key "nsupdate.key" {
+  algorithm hmac-sha256;
+  secret "a5hO/BHaE8FqhbIOWlUR/q1X7h9esqDtUA8gJ5t532g=";
+};
 
-	//========================================================================
-	// If BIND logs error messages about the root key being expired,
-	// you will need to update your keys.  See https://www.isc.org/bind-keys
-	//========================================================================
-	dnssec-validation auto;
 
-	listen-on-v6 { any; };
-};
+
+
+

changed: [kovalart-2]
--- before: /etc/bind/named.conf.options
+++ after: /home/parrot/.ansible/tmp/ansible-local-267406kvomjqnj/tmphuf9o05t/named.conf.options.j2
@@ -1,24 +1,28 @@
 options {
 	directory "/var/cache/bind";
+	forwarders {
+      	    1.1.1.1;
+      	    8.8.8.5;
+      	    9.9.9.9;
+      	};
+    allow-query { 127.0.0.0/8; 192.168.42.0/23; 172.17.0.0/16; };
+};
 
-	// If there is a firewall between you and nameservers you want
-	// to talk to, you may need to fix the firewall to allow multiple
-	// ports to talk.  See http://www.kb.cert.org/vuls/id/800113
+statistics-channels {
+  inet 127.0.0.1 port 8053 allow { 127.0.0.1; };
+};
 
-	// If your ISP provided one or more IP addresses for stable 
-	// nameservers, you probably want to use them as forwarders.  
-	// Uncomment the following block, and insert the addresses replacing 
-	// the all-0's placeholder.
+key "transfer.key" {
+  algorithm hmac-sha256;
+  secret "xqAsebeSxXmT84BQzBhTXnRzpKGVllUk45HKaWYDwhc=";
+};
 
-	// forwarders {
-	// 	0.0.0.0;
-	// };
+key "nsupdate.key" {
+  algorithm hmac-sha256;
+  secret "a5hO/BHaE8FqhbIOWlUR/q1X7h9esqDtUA8gJ5t532g=";
+};
 
-	//========================================================================
-	// If BIND logs error messages about the root key being expired,
-	// you will need to update your keys.  See https://www.isc.org/bind-keys
-	//========================================================================
-	dnssec-validation auto;
 
-	listen-on-v6 { any; };
-};
+
+
+

changed: [kovalart-1]

TASK [bind : Configure DNS] ****************************************************
--- before: /etc/bind/named.conf.local
+++ after: /home/parrot/.ansible/tmp/ansible-local-267406kvomjqnj/tmp1q4ponmk/named.conf.local.j2
@@ -1,8 +1,51 @@
-//
-// Do any local configuration here
-//
+zone "infocare.io" {
+  
+    
+  type primary;
 
-// Consider adding the 1918 zones here, if they are not used in your
-// organization
-//include "/etc/bind/zones.rfc1918";
+  allow-update { 
+    127.0.0.1;
+    key nsupdate.key; 
+    192.168.43.154;
+    192.168.43.25;
+     
+    };
+  
+  allow-transfer { 
+    127.0.0.1;
+    key transfer.key; 
+    192.168.43.154;
+    192.168.43.25;
+     
+    };
+  
+    
+  file "/var/cache/bind/db.infocare.io";
 
+};
+
+zone "168.192.in-addr.arpa." {
+  
+    
+  type primary;
+
+  allow-update { 
+    127.0.0.1;
+    key nsupdate.key;
+    192.168.43.154;
+    192.168.43.25;
+     
+    };
+  
+  allow-transfer { 
+    127.0.0.1;
+    key transfer.key; 
+    192.168.43.154;
+    192.168.43.25;
+     
+    };
+  
+    
+  file "/var/cache/bind/db.rev";
+
+};
\ No newline at end of file

changed: [kovalart-3]
--- before: /etc/bind/named.conf.local
+++ after: /home/parrot/.ansible/tmp/ansible-local-267406kvomjqnj/tmpw98d22jf/named.conf.local.j2
@@ -1,8 +1,27 @@
-//
-// Do any local configuration here
-//
+zone "infocare.io" {
+  
+    
+  type secondary;
+  
+  masters {
+        192.168.43.56;
+      };
+  
+    
+  file "/var/cache/bind/db.infocare.io";
 
-// Consider adding the 1918 zones here, if they are not used in your
-// organization
-//include "/etc/bind/zones.rfc1918";
+};
 
+zone "168.192.in-addr.arpa." {
+  
+    
+  type secondary;
+  
+  masters {
+        192.168.43.56;
+      };
+  
+    
+  file "/var/cache/bind/db.rev";
+
+};
\ No newline at end of file

changed: [kovalart-2]
--- before: /etc/bind/named.conf.local
+++ after: /home/parrot/.ansible/tmp/ansible-local-267406kvomjqnj/tmpf5rj7agx/named.conf.local.j2
@@ -1,8 +1,27 @@
-//
-// Do any local configuration here
-//
+zone "infocare.io" {
+  
+    
+  type secondary;
+  
+  masters {
+        192.168.43.56;
+      };
+  
+    
+  file "/var/cache/bind/db.infocare.io";
 
-// Consider adding the 1918 zones here, if they are not used in your
-// organization
-//include "/etc/bind/zones.rfc1918";
+};
 
+zone "168.192.in-addr.arpa." {
+  
+    
+  type secondary;
+  
+  masters {
+        192.168.43.56;
+      };
+  
+    
+  file "/var/cache/bind/db.rev";
+
+};
\ No newline at end of file

changed: [kovalart-1]

TASK [bind : Configure Master Zone] ********************************************
skipping: [kovalart-1]
skipping: [kovalart-2]
--- before
+++ after: /home/parrot/.ansible/tmp/ansible-local-267406kvomjqnj/tmpqks3bcym/db.infocare.io.j2
@@ -0,0 +1,18 @@
+$TTL	604800
+infocare.io.	IN	SOA	infocare.io. kovalart-2.infocare.io. (
+			      5		; Serial
+			 604800		; Refresh
+			  86400		; Retry
+			2419200		; Expire
+			 604800 )	; Negative Cache TTL
+;
+
+infocare.io.	IN	NS	kovalart-3.infocare.io.
+infocare.io.	IN	NS	kovalart-1.infocare.io.
+infocare.io.	IN	NS	kovalart-2.infocare.io.
+
+kovalart-1	IN	A	192.168.43.154
+kovalart-2	IN	A	192.168.43.25
+kovalart-3	IN	A	192.168.43.56
+
+backup	IN	A	192.168.42.132
\ No newline at end of file

changed: [kovalart-3]

TASK [bind : Configure Reverse Zone] *******************************************
skipping: [kovalart-1]
skipping: [kovalart-2]
--- before
+++ after: /home/parrot/.ansible/tmp/ansible-local-267406kvomjqnj/tmp0t0aggcy/db.rev.j2
@@ -0,0 +1,18 @@
+$TTL	604800
+168.192.in-addr.arpa.	IN	SOA	infocare.io. kovalart-2.infocare.io. (
+			      2		; Serial
+			 604800		; Refresh
+			  86400		; Retry
+			2419200		; Expire
+			 604800 )	; Negative Cache TTL
+;
+
+168.192.in-addr.arpa.	IN	NS	kovalart-1.infocare.io.
+168.192.in-addr.arpa.	IN	NS	kovalart-2.infocare.io.
+
+
+154.43	IN	PTR	kovalart-1.infocare.io.
+
+
+25.43	IN	PTR	kovalart-2.infocare.io.
+

changed: [kovalart-3]

TASK [bind : Run handlers] *****************************************************

RUNNING HANDLER [bind : restart bind9] *****************************************
changed: [kovalart-3]
changed: [kovalart-1]
changed: [kovalart-2]

RUNNING HANDLER [bind : restart rndc] ******************************************
changed: [kovalart-3]
changed: [kovalart-2]
changed: [kovalart-1]

TASK [bind : Ensure Bind9 service is running and enabled] **********************
ok: [kovalart-3]
ok: [kovalart-1]
ok: [kovalart-2]

TASK [bind : Install Bind exporter] ********************************************
The following NEW packages will be installed:
  prometheus-bind-exporter
0 upgraded, 1 newly installed, 0 to remove and 261 not upgraded.
changed: [kovalart-3]
The following NEW packages will be installed:
  prometheus-bind-exporter
0 upgraded, 1 newly installed, 0 to remove and 261 not upgraded.
changed: [kovalart-2]
The following NEW packages will be installed:
  prometheus-bind-exporter
0 upgraded, 1 newly installed, 0 to remove and 261 not upgraded.
changed: [kovalart-1]

TASK [bind : Create CNAME records for DNS instances] ***************************
changed: [kovalart-3] => (item={'service': 'ns-1', 'target': 'kovalart-1'})
ok: [kovalart-1] => (item={'service': 'ns-1', 'target': 'kovalart-1'})
ok: [kovalart-2] => (item={'service': 'ns-1', 'target': 'kovalart-1'})
changed: [kovalart-3] => (item={'service': 'ns-2', 'target': 'kovalart-2'})
ok: [kovalart-2] => (item={'service': 'ns-2', 'target': 'kovalart-2'})
ok: [kovalart-1] => (item={'service': 'ns-2', 'target': 'kovalart-2'})

PLAY [Resolv.conf task] ********************************************************

TASK [Gathering Facts] *********************************************************
ok: [kovalart-1]
ok: [kovalart-2]
ok: [kovalart-3]

TASK [resolv_dns : Shut down systemd-resolved] *********************************
changed: [kovalart-2]
changed: [kovalart-1]
changed: [kovalart-3]

TASK [resolv_dns : Change resolv.conf on both VMs] *****************************
--- before: /etc/resolv.conf
+++ after: /home/parrot/.ansible/tmp/ansible-local-267406kvomjqnj/tmpmld5gfr7/resolv.conf.j2
@@ -1,19 +1,4 @@
-# This file is managed by man:systemd-resolved(8). Do not edit.
-#
-# This is a dynamic resolv.conf file for connecting local clients to the
-# internal DNS stub resolver of systemd-resolved. This file lists all
-# configured search domains.
-#
-# Run "resolvectl status" to see details about the uplink DNS servers
-# currently in use.
-#
-# Third party programs must not access this file directly, but only through the
-# symlink at /etc/resolv.conf. To manage man:resolv.conf(5) in a different way,
-# replace this symlink by a static file or a different symlink.
-#
-# See man:systemd-resolved.service(8) for details about the supported modes of
-# operation for /etc/resolv.conf.
+search infocare.io
 
-nameserver 127.0.0.53
-options edns0 trust-ad
-search openstacklocal
+nameserver 192.168.43.154
+nameserver 192.168.43.25

changed: [kovalart-3]
--- before: /etc/resolv.conf
+++ after: /home/parrot/.ansible/tmp/ansible-local-267406kvomjqnj/tmp9m2q5xhh/resolv.conf.j2
@@ -1,19 +1,4 @@
-# This file is managed by man:systemd-resolved(8). Do not edit.
-#
-# This is a dynamic resolv.conf file for connecting local clients to the
-# internal DNS stub resolver of systemd-resolved. This file lists all
-# configured search domains.
-#
-# Run "resolvectl status" to see details about the uplink DNS servers
-# currently in use.
-#
-# Third party programs must not access this file directly, but only through the
-# symlink at /etc/resolv.conf. To manage man:resolv.conf(5) in a different way,
-# replace this symlink by a static file or a different symlink.
-#
-# See man:systemd-resolved.service(8) for details about the supported modes of
-# operation for /etc/resolv.conf.
+search infocare.io
 
-nameserver 127.0.0.53
-options edns0 trust-ad
-search openstacklocal
+nameserver 192.168.43.154
+nameserver 192.168.43.25

changed: [kovalart-2]
--- before: /etc/resolv.conf
+++ after: /home/parrot/.ansible/tmp/ansible-local-267406kvomjqnj/tmp8hymxe97/resolv.conf.j2
@@ -1,19 +1,4 @@
-# This file is managed by man:systemd-resolved(8). Do not edit.
-#
-# This is a dynamic resolv.conf file for connecting local clients to the
-# internal DNS stub resolver of systemd-resolved. This file lists all
-# configured search domains.
-#
-# Run "resolvectl status" to see details about the uplink DNS servers
-# currently in use.
-#
-# Third party programs must not access this file directly, but only through the
-# symlink at /etc/resolv.conf. To manage man:resolv.conf(5) in a different way,
-# replace this symlink by a static file or a different symlink.
-#
-# See man:systemd-resolved.service(8) for details about the supported modes of
-# operation for /etc/resolv.conf.
+search infocare.io
 
-nameserver 127.0.0.53
-options edns0 trust-ad
-search openstacklocal
+nameserver 192.168.43.154
+nameserver 192.168.43.25

changed: [kovalart-1]

PLAY [Database server] *********************************************************

TASK [Gathering Facts] *********************************************************
ok: [kovalart-2]
ok: [kovalart-1]

TASK [mysql : Install mysql] ***************************************************
The following additional packages will be installed:
  libcgi-fast-perl libcgi-pm-perl libencode-locale-perl libevent-core-2.1-7
  libevent-pthreads-2.1-7 libfcgi-perl libhtml-parser-perl libhtml-tagset-perl
  libhtml-template-perl libhttp-date-perl libhttp-message-perl libio-html-perl
  liblwp-mediatypes-perl libmecab2 liburi-perl mecab-ipadic mecab-ipadic-utf8
  mecab-utils mysql-client-8.0 mysql-client-core-8.0 mysql-common
  mysql-server-8.0 mysql-server-core-8.0
Suggested packages:
  libdata-dump-perl libipc-sharedcache-perl libwww-perl mailx tinyca
The following NEW packages will be installed:
  libcgi-fast-perl libcgi-pm-perl libencode-locale-perl libevent-core-2.1-7
  libevent-pthreads-2.1-7 libfcgi-perl libhtml-parser-perl libhtml-tagset-perl
  libhtml-template-perl libhttp-date-perl libhttp-message-perl libio-html-perl
  liblwp-mediatypes-perl libmecab2 liburi-perl mecab-ipadic mecab-ipadic-utf8
  mecab-utils mysql-client-8.0 mysql-client-core-8.0 mysql-common mysql-server
  mysql-server-8.0 mysql-server-core-8.0
0 upgraded, 24 newly installed, 0 to remove and 261 not upgraded.
changed: [kovalart-2]
The following additional packages will be installed:
  libcgi-fast-perl libcgi-pm-perl libencode-locale-perl libevent-core-2.1-7
  libevent-pthreads-2.1-7 libfcgi-perl libhtml-parser-perl libhtml-tagset-perl
  libhtml-template-perl libhttp-date-perl libhttp-message-perl libio-html-perl
  liblwp-mediatypes-perl libmecab2 liburi-perl mecab-ipadic mecab-ipadic-utf8
  mecab-utils mysql-client-8.0 mysql-client-core-8.0 mysql-common
  mysql-server-8.0 mysql-server-core-8.0
Suggested packages:
  libdata-dump-perl libipc-sharedcache-perl libwww-perl mailx tinyca
The following NEW packages will be installed:
  libcgi-fast-perl libcgi-pm-perl libencode-locale-perl libevent-core-2.1-7
  libevent-pthreads-2.1-7 libfcgi-perl libhtml-parser-perl libhtml-tagset-perl
  libhtml-template-perl libhttp-date-perl libhttp-message-perl libio-html-perl
  liblwp-mediatypes-perl libmecab2 liburi-perl mecab-ipadic mecab-ipadic-utf8
  mecab-utils mysql-client-8.0 mysql-client-core-8.0 mysql-common mysql-server
  mysql-server-8.0 mysql-server-core-8.0
0 upgraded, 24 newly installed, 0 to remove and 261 not upgraded.
changed: [kovalart-1]

TASK [mysql : copy the mysql config file and restart mysql server] *************
--- before
+++ after: /home/parrot/.ansible/tmp/ansible-local-267406kvomjqnj/tmprf67chdp/override.cnf.j2
@@ -0,0 +1,7 @@
+[mysqld]
+bind-address = 0.0.0.0
+
+log-bin = /var/log/mysql/mysql-bin.log
+relay-log = /var/log/mysql/mysql-relay.log
+replicate-do-db = agama
+server-id = 2812

changed: [kovalart-2]
--- before
+++ after: /home/parrot/.ansible/tmp/ansible-local-267406kvomjqnj/tmpbc8eugc7/override.cnf.j2
@@ -0,0 +1,7 @@
+[mysqld]
+bind-address = 0.0.0.0
+
+log-bin = /var/log/mysql/mysql-bin.log
+relay-log = /var/log/mysql/mysql-relay.log
+replicate-do-db = agama
+server-id = 4102

changed: [kovalart-1]

TASK [mysql : Start mysql] *****************************************************
ok: [kovalart-1]
ok: [kovalart-2]

TASK [mysql : Install required Python Library] *********************************
Suggested packages:
  python-pymysql-doc
The following NEW packages will be installed:
  python3-pymysql
0 upgraded, 1 newly installed, 0 to remove and 261 not upgraded.
changed: [kovalart-1]
Suggested packages:
  python-pymysql-doc
The following NEW packages will be installed:
  python3-pymysql
0 upgraded, 1 newly installed, 0 to remove and 261 not upgraded.
changed: [kovalart-2]

TASK [mysql : MySQL database] **************************************************
changed: [kovalart-1]
changed: [kovalart-2]

TASK [mysql : MySQL user] ******************************************************
changed: [kovalart-2]
changed: [kovalart-1]

TASK [mysql : Create MySQL exporter user] **************************************
changed: [kovalart-1]
changed: [kovalart-2]

TASK [mysql : Install Exporter] ************************************************
The following additional packages will be installed:
  daemon
The following NEW packages will be installed:
  daemon prometheus-mysqld-exporter
0 upgraded, 2 newly installed, 0 to remove and 261 not upgraded.
changed: [kovalart-1]
The following additional packages will be installed:
  daemon
The following NEW packages will be installed:
  daemon prometheus-mysqld-exporter
0 upgraded, 2 newly installed, 0 to remove and 261 not upgraded.
changed: [kovalart-2]

TASK [mysql : Update the MySQL exporter] ***************************************
--- before: /etc/default/prometheus-mysqld-exporter
+++ after: /home/parrot/ica0002/roles/mysql/files/mysql_exporter
@@ -1,120 +1 @@
-# By default the connection string will be read from
-# $HOME/my.cnf or from the file specified with the -config.my-cnf parameter.
-
-# To set a connection string from the environment instead, uncomment one of the
-# following lines.
-
-# Using UNIX domain sockets and authentication:
-# DATA_SOURCE_NAME="prometheus:nopassword@unix(/run/mysqld/mysqld.sock)/"
-
-# Using a TCP connection and password authentication:
-# DATA_SOURCE_NAME="login:password@(hostname:port)/dbname"
-
-# Note the user must be granted enough privileges for the exporter to run.
-# Example to create a user to connect with the UNIX socket:
-#
-#  CREATE USER IF NOT EXISTS 'prometheus'@'localhost' IDENTIFIED VIA unix_socket;
-#  GRANT PROCESS, REPLICATION CLIENT, SELECT ON *.* TO 'prometheus'@'localhost';
-
-# Set the command-line arguments to pass to the exporter.
-# ARGS='-config.my-cnf /etc/mysql/debian.cnf'
-
-# Usage of prometheus-mysqld-exporter:
-#   -collect.auto_increment.columns
-#     	Collect auto_increment columns and max values from information_schema
-#  --exporter.lock_wait_timeout=2
-#       Set a lock_wait_timeout on the connection to avoid long metadata
-#       locking.
-#  --exporter.log_slow_filter
-#       Add a log_slow_filter to avoid slow query logging of scrapes. NOTE: Not
-#       supported by Oracle MySQL.
-#  --collect.heartbeat.database="heartbeat"
-#       Database from where to collect heartbeat data
-#  --collect.heartbeat.table="heartbeat"
-#       Table from where to collect heartbeat data
-#  --collect.info_schema.processlist.min_time=0
-#       Minimum time a thread must be in each state to be counted
-#  --collect.info_schema.tables.databases="*"
-#       The list of databases to collect table stats for, or '*' for all
-#  --collect.perf_schema.eventsstatements.limit=250
-#       Limit the number of events statements digests by response time
-#  --collect.perf_schema.eventsstatements.timelimit=86400
-#       Limit how old the 'last_seen' events statements can be, in seconds
-#  --collect.perf_schema.eventsstatements.digest_text_limit=120
-#       Maximum length of the normalized statement text
-#  --collect.perf_schema.file_instances.filter=".*"
-#       RegEx file_name filter for performance_schema.file_summary_by_instance
-#  --collect.perf_schema.file_instances.remove_prefix="/var/lib/mysql/"
-#       Remove path prefix in performance_schema.file_summary_by_instance
-#  --web.listen-address=":9104"
-#       Address to listen on for web interface and telemetry.
-#  --web.telemetry-path="/metrics"
-#       Path under which to expose metrics.
-#  --config.my-cnf="$HOME/.my.cnf"
-#       Path to .my.cnf file to read MySQL credentials from.
-#  --collect.global_variables
-#       Collect from SHOW GLOBAL VARIABLES
-#  --collect.slave_status
-#       Collect from SHOW SLAVE STATUS
-#  --collect.info_schema.processlist
-#       Collect current thread state counts from the
-#       information_schema.processlist
-#  --collect.info_schema.tables
-#       Collect metrics from information_schema.tables
-#  --collect.info_schema.innodb_tablespaces
-#       Collect metrics from information_schema.innodb_sys_tablespaces
-#  --collect.info_schema.innodb_metrics
-#       Collect metrics from information_schema.innodb_metrics
-#  --collect.auto_increment.columns
-#       Collect auto_increment columns and max values from information_schema
-#  --collect.global_status
-#       Collect from SHOW GLOBAL STATUS
-#  --collect.perf_schema.tableiowaits
-#       Collect metrics from performance_schema.table_io_waits_summary_by_table
-#  --collect.perf_schema.indexiowaits
-#       Collect metrics from
-#       performance_schema.table_io_waits_summary_by_index_usage
-#  --collect.perf_schema.tablelocks
-#       Collect metrics from
-#       performance_schema.table_lock_waits_summary_by_table
-#  --collect.perf_schema.eventsstatements
-#       Collect metrics from
-#       performance_schema.events_statements_summary_by_digest
-#  --collect.perf_schema.eventswaits
-#       Collect metrics from
-#       performance_schema.events_waits_summary_global_by_event_name
-#  --collect.perf_schema.file_events
-#       Collect metrics from performance_schema.file_summary_by_event_name
-#  --collect.perf_schema.file_instances
-#       Collect metrics from performance_schema.file_summary_by_instance
-#  --collect.binlog_size
-#       Collect the current size of all registered binlog files
-#  --collect.info_schema.userstats
-#       If running with userstat=1, set to true to collect user statistics
-#  --collect.info_schema.clientstats
-#       If running with userstat=1, set to true to collect client statistics
-#  --collect.info_schema.tablestats
-#       If running with userstat=1, set to true to collect table statistics
-#  --collect.info_schema.innodb_cmp
-#       Collect metrics from information_schema.innodb_cmp
-#  --collect.info_schema.innodb_cmpmem
-#       Collect metrics from information_schema.innodb_cmpmem
-#  --collect.info_schema.query_response_time
-#       Collect query response time distribution if query_response_time_stats
-#       is ON.
-#  --collect.engine_tokudb_status
-#       Collect from SHOW ENGINE TOKUDB STATUS
-#  --collect.perf_schema.replication_group_member_stats
-#       Collect metrics from performance_schema.replication_group_member_stats
-#  --collect.heartbeat
-#       Collect from heartbeat
-#  --collect.slave_hosts
-#       Scrape information from 'SHOW SLAVE HOSTS'
-#  --collect.engine_innodb_status
-#       Collect from SHOW ENGINE INNODB STATUS
-#  --log.level="info"
-#       Only log messages with the given severity or above. Valid levels:
-#       [debug, info, warn, error, fatal]
-#  --log.format="logger:stderr"
-#       Set the log target and format. Example:
-#       "logger:syslog?appname=bob&local=7" or "logger:stdout?json=true"
+ARGS="--collect.slave_status"
\ No newline at end of file

changed: [kovalart-2]
--- before: /etc/default/prometheus-mysqld-exporter
+++ after: /home/parrot/ica0002/roles/mysql/files/mysql_exporter
@@ -1,120 +1 @@
-# By default the connection string will be read from
-# $HOME/my.cnf or from the file specified with the -config.my-cnf parameter.
-
-# To set a connection string from the environment instead, uncomment one of the
-# following lines.
-
-# Using UNIX domain sockets and authentication:
-# DATA_SOURCE_NAME="prometheus:nopassword@unix(/run/mysqld/mysqld.sock)/"
-
-# Using a TCP connection and password authentication:
-# DATA_SOURCE_NAME="login:password@(hostname:port)/dbname"
-
-# Note the user must be granted enough privileges for the exporter to run.
-# Example to create a user to connect with the UNIX socket:
-#
-#  CREATE USER IF NOT EXISTS 'prometheus'@'localhost' IDENTIFIED VIA unix_socket;
-#  GRANT PROCESS, REPLICATION CLIENT, SELECT ON *.* TO 'prometheus'@'localhost';
-
-# Set the command-line arguments to pass to the exporter.
-# ARGS='-config.my-cnf /etc/mysql/debian.cnf'
-
-# Usage of prometheus-mysqld-exporter:
-#   -collect.auto_increment.columns
-#     	Collect auto_increment columns and max values from information_schema
-#  --exporter.lock_wait_timeout=2
-#       Set a lock_wait_timeout on the connection to avoid long metadata
-#       locking.
-#  --exporter.log_slow_filter
-#       Add a log_slow_filter to avoid slow query logging of scrapes. NOTE: Not
-#       supported by Oracle MySQL.
-#  --collect.heartbeat.database="heartbeat"
-#       Database from where to collect heartbeat data
-#  --collect.heartbeat.table="heartbeat"
-#       Table from where to collect heartbeat data
-#  --collect.info_schema.processlist.min_time=0
-#       Minimum time a thread must be in each state to be counted
-#  --collect.info_schema.tables.databases="*"
-#       The list of databases to collect table stats for, or '*' for all
-#  --collect.perf_schema.eventsstatements.limit=250
-#       Limit the number of events statements digests by response time
-#  --collect.perf_schema.eventsstatements.timelimit=86400
-#       Limit how old the 'last_seen' events statements can be, in seconds
-#  --collect.perf_schema.eventsstatements.digest_text_limit=120
-#       Maximum length of the normalized statement text
-#  --collect.perf_schema.file_instances.filter=".*"
-#       RegEx file_name filter for performance_schema.file_summary_by_instance
-#  --collect.perf_schema.file_instances.remove_prefix="/var/lib/mysql/"
-#       Remove path prefix in performance_schema.file_summary_by_instance
-#  --web.listen-address=":9104"
-#       Address to listen on for web interface and telemetry.
-#  --web.telemetry-path="/metrics"
-#       Path under which to expose metrics.
-#  --config.my-cnf="$HOME/.my.cnf"
-#       Path to .my.cnf file to read MySQL credentials from.
-#  --collect.global_variables
-#       Collect from SHOW GLOBAL VARIABLES
-#  --collect.slave_status
-#       Collect from SHOW SLAVE STATUS
-#  --collect.info_schema.processlist
-#       Collect current thread state counts from the
-#       information_schema.processlist
-#  --collect.info_schema.tables
-#       Collect metrics from information_schema.tables
-#  --collect.info_schema.innodb_tablespaces
-#       Collect metrics from information_schema.innodb_sys_tablespaces
-#  --collect.info_schema.innodb_metrics
-#       Collect metrics from information_schema.innodb_metrics
-#  --collect.auto_increment.columns
-#       Collect auto_increment columns and max values from information_schema
-#  --collect.global_status
-#       Collect from SHOW GLOBAL STATUS
-#  --collect.perf_schema.tableiowaits
-#       Collect metrics from performance_schema.table_io_waits_summary_by_table
-#  --collect.perf_schema.indexiowaits
-#       Collect metrics from
-#       performance_schema.table_io_waits_summary_by_index_usage
-#  --collect.perf_schema.tablelocks
-#       Collect metrics from
-#       performance_schema.table_lock_waits_summary_by_table
-#  --collect.perf_schema.eventsstatements
-#       Collect metrics from
-#       performance_schema.events_statements_summary_by_digest
-#  --collect.perf_schema.eventswaits
-#       Collect metrics from
-#       performance_schema.events_waits_summary_global_by_event_name
-#  --collect.perf_schema.file_events
-#       Collect metrics from performance_schema.file_summary_by_event_name
-#  --collect.perf_schema.file_instances
-#       Collect metrics from performance_schema.file_summary_by_instance
-#  --collect.binlog_size
-#       Collect the current size of all registered binlog files
-#  --collect.info_schema.userstats
-#       If running with userstat=1, set to true to collect user statistics
-#  --collect.info_schema.clientstats
-#       If running with userstat=1, set to true to collect client statistics
-#  --collect.info_schema.tablestats
-#       If running with userstat=1, set to true to collect table statistics
-#  --collect.info_schema.innodb_cmp
-#       Collect metrics from information_schema.innodb_cmp
-#  --collect.info_schema.innodb_cmpmem
-#       Collect metrics from information_schema.innodb_cmpmem
-#  --collect.info_schema.query_response_time
-#       Collect query response time distribution if query_response_time_stats
-#       is ON.
-#  --collect.engine_tokudb_status
-#       Collect from SHOW ENGINE TOKUDB STATUS
-#  --collect.perf_schema.replication_group_member_stats
-#       Collect metrics from performance_schema.replication_group_member_stats
-#  --collect.heartbeat
-#       Collect from heartbeat
-#  --collect.slave_hosts
-#       Scrape information from 'SHOW SLAVE HOSTS'
-#  --collect.engine_innodb_status
-#       Collect from SHOW ENGINE INNODB STATUS
-#  --log.level="info"
-#       Only log messages with the given severity or above. Valid levels:
-#       [debug, info, warn, error, fatal]
-#  --log.format="logger:stderr"
-#       Set the log target and format. Example:
-#       "logger:syslog?appname=bob&local=7" or "logger:stdout?json=true"
+ARGS="--collect.slave_status"
\ No newline at end of file

changed: [kovalart-1]

TASK [mysql : Copy the config file] ********************************************
changed: [kovalart-1]
changed: [kovalart-2]

TASK [mysql : Start Mysql exporter] ********************************************
changed: [kovalart-1]
changed: [kovalart-2]

TASK [mysql : Ensure that mysql directory exists] ******************************
--- before
+++ after
@@ -1,6 +1,6 @@
 {
-    "group": 0,
-    "owner": 0,
+    "group": 34,
+    "owner": 34,
     "path": "/home/backup/mysql",
-    "state": "absent"
+    "state": "directory"
 }

changed: [kovalart-1]
--- before
+++ after
@@ -1,6 +1,6 @@
 {
-    "group": 0,
-    "owner": 0,
+    "group": 34,
+    "owner": 34,
     "path": "/home/backup/mysql",
-    "state": "absent"
+    "state": "directory"
 }

changed: [kovalart-2]

TASK [mysql : Create MySQL user named backup with required privileges] *********
changed: [kovalart-1]
changed: [kovalart-2]

TASK [mysql : Ensure /home/backup/.my.cnf file is created] *********************
--- before
+++ after: /home/parrot/.ansible/tmp/ansible-local-267406kvomjqnj/tmpxta83hi8/backup_my.cnf.j2
@@ -0,0 +1,5 @@
+[client]
+user = backup
+password = "1234"
+[mysqldump]
+no_tablespaces
\ No newline at end of file

changed: [kovalart-1]
--- before
+++ after: /home/parrot/.ansible/tmp/ansible-local-267406kvomjqnj/tmp_jz9f7nb/backup_my.cnf.j2
@@ -0,0 +1,5 @@
+[client]
+user = backup
+password = "1234"
+[mysqldump]
+no_tablespaces
\ No newline at end of file

changed: [kovalart-2]

TASK [mysql : Ensure user backup can create MySQL dumps without errors] ********
ok: [kovalart-1]
ok: [kovalart-2]

TASK [mysql : Fail if the dump command did not execute successfully] ***********
skipping: [kovalart-1]
skipping: [kovalart-2]

TASK [mysql : Schedule MySQL dumps with Cron] **********************************
--- before
+++ after: /home/parrot/.ansible/tmp/ansible-local-267406kvomjqnj/tmpy586au25/mysql_backup_cron.j2
@@ -0,0 +1,5 @@
+
+42 18 * * 0 backup /usr/bin/mysqldump agama > /home/backup/mysql/agama.sql
+43 18 * * 0 backup duplicity --no-encryption full /home/backup/mysql/ rsync://kovalArt@backup.infocare.io:/mysql
+44 18 * * 0 backup duplicity --no-encryption incremental /home/backup/mysql/ rsync://kovalArt@backup.infocare.io:/mysql
+

changed: [kovalart-1]
changed: [kovalart-2]

TASK [mysql : Create MySQL user named backup with required privileges] *********
changed: [kovalart-1]
changed: [kovalart-2]

TASK [mysql : Read only mode for the Replica MySQL host] ***********************
changed: [kovalart-2]
changed: [kovalart-1]

TASK [mysql : Create CNAME records for MySQL instances] ************************
changed: [kovalart-1] => (item={'service': 'mysql-1', 'target': 'kovalart-1'})
changed: [kovalart-2] => (item={'service': 'mysql-1', 'target': 'kovalart-1'})
changed: [kovalart-1] => (item={'service': 'mysql-2', 'target': 'kovalart-2'})
changed: [kovalart-2] => (item={'service': 'mysql-2', 'target': 'kovalart-2'})

RUNNING HANDLER [mysql : restart mysql] ****************************************
changed: [kovalart-1]
changed: [kovalart-2]

RUNNING HANDLER [mysql : restart mysql-exporter] *******************************
changed: [kovalart-2]
changed: [kovalart-1]

RUNNING HANDLER [mysql : Reset MySQL source] ***********************************
skipping: [kovalart-1] => (item=stopreplica) 
skipping: [kovalart-1] => (item=resetprimary) 
ok: [kovalart-2] => (item=stopreplica)
changed: [kovalart-2] => (item=resetprimary)

RUNNING HANDLER [mysql : Reset MySQL replica] **********************************
skipping: [kovalart-2] => (item=stopreplica) 
skipping: [kovalart-2] => (item=changeprimary) 
skipping: [kovalart-2] => (item=resetreplica) 
skipping: [kovalart-2] => (item=startreplica) 
ok: [kovalart-1] => (item=stopreplica)
changed: [kovalart-1] => (item=changeprimary)
changed: [kovalart-1] => (item=resetreplica)
changed: [kovalart-1] => (item=startreplica)

PLAY [Web server tasks] ********************************************************

TASK [Gathering Facts] *********************************************************
ok: [kovalart-3]

TASK [nginx : Ensure nginx is installed and in working state] ******************
The following additional packages will be installed:
  fontconfig-config fonts-dejavu-core libfontconfig1 libgd3 libjbig0
  libjpeg-turbo8 libjpeg8 libnginx-mod-http-image-filter
  libnginx-mod-http-xslt-filter libnginx-mod-mail libnginx-mod-stream libtiff5
  libwebp6 libxpm4 nginx-common nginx-core
Suggested packages:
  libgd-tools fcgiwrap nginx-doc ssl-cert
The following NEW packages will be installed:
  fontconfig-config fonts-dejavu-core libfontconfig1 libgd3 libjbig0
  libjpeg-turbo8 libjpeg8 libnginx-mod-http-image-filter
  libnginx-mod-http-xslt-filter libnginx-mod-mail libnginx-mod-stream libtiff5
  libwebp6 libxpm4 nginx nginx-common nginx-core
0 upgraded, 17 newly installed, 0 to remove and 261 not upgraded.
changed: [kovalart-3]

TASK [nginx : Copy Nginx default config to sites-enabled] **********************
--- before: /etc/nginx/sites-enabled/default
+++ after: /home/parrot/.ansible/tmp/ansible-local-267406kvomjqnj/tmpbykzzd7k/default
@@ -1,91 +1,30 @@
-##
-# You should look at the following URL's in order to grasp a solid understanding
-# of Nginx configuration files in order to fully unleash the power of Nginx.
-# https://www.nginx.com/resources/wiki/start/
-# https://www.nginx.com/resources/wiki/start/topics/tutorials/config_pitfalls/
-# https://wiki.debian.org/Nginx/DirectoryStructure
-#
-# In most cases, administrators will remove this file from sites-enabled/ and
-# leave it as reference inside of sites-available where it will continue to be
-# updated by the nginx packaging team.
-#
-# This file will automatically load configuration files provided by other
-# applications, such as Drupal or Wordpress. These applications will be made
-# available underneath a path with that package name, such as /drupal8.
-#
-# Please see /usr/share/doc/nginx-doc/examples/ for more detailed examples.
-##
-
-# Default server configuration
-#
 server {
 	listen 80 default_server;
-	listen [::]:80 default_server;
-
-	# SSL configuration
-	#
-	# listen 443 ssl default_server;
-	# listen [::]:443 ssl default_server;
-	#
-	# Note: You should disable gzip for SSL traffic.
-	# See: https://bugs.debian.org/773332
-	#
-	# Read up on ssl_ciphers to ensure a secure configuration.
-	# See: https://bugs.debian.org/765782
-	#
-	# Self signed certs generated by the ssl-cert package
-	# Don't use them in a production server!
-	#
-	# include snippets/snakeoil.conf;
-
-	root /var/www/html;
-
-	# Add index.php to the list if you are using PHP
-	index index.html index.htm index.nginx-debian.html;
-
 	server_name _;
 
 	location / {
-		# First attempt to serve request as file, then
-		# as directory, then fall back to displaying a 404.
-		try_files $uri $uri/ =404;
+		proxy_set_header Host $http_host;
+		uwsgi_pass localhost:5000;
+		include uwsgi_params;
+		proxy_pass http://kovalart-2:8001;
 	}
 
-	# pass PHP scripts to FastCGI server
-	#
-	#location ~ \.php$ {
-	#	include snippets/fastcgi-php.conf;
-	#
-	#	# With php-fpm (or other unix sockets):
-	#	fastcgi_pass unix:/var/run/php/php7.4-fpm.sock;
-	#	# With php-cgi (or other tcp sockets):
-	#	fastcgi_pass 127.0.0.1:9000;
-	#}
+	location /prometheus {
+		proxy_pass http://kovalart-3:9090;
+	}
 
-	# deny access to .htaccess files, if Apache's document root
-	# concurs with nginx's one
-	#
-	#location ~ /\.ht {
-	#	deny all;
-	#}
+	location /grafana {
+		proxy_set_header Host $http_host;
+		proxy_pass http://kovalart-3:3001;
+	}
+
 }
 
+server {
+	listen 8080 default_server;
 
-# Virtual Host configuration for example.com
-#
-# You can move that to a different file under sites-available/ and symlink that
-# to sites-enabled/ to enable it.
-#
-#server {
-#	listen 80;
-#	listen [::]:80;
-#
-#	server_name example.com;
-#
-#	root /var/www/example.com;
-#	index index.html;
-#
-#	location / {
-#		try_files $uri $uri/ =404;
-#	}
-#}
+	location = /stub_status {
+		stub_status;
+	}
+
+}
\ No newline at end of file

changed: [kovalart-3]

TASK [nginx : start nginx] *****************************************************
ok: [kovalart-3]

TASK [nginx : Install exporter] ************************************************
The following NEW packages will be installed:
  prometheus-nginx-exporter
0 upgraded, 1 newly installed, 0 to remove and 261 not upgraded.
changed: [kovalart-3]

TASK [nginx : Pause for 10 seconds to start nginx exporter] ********************
Pausing for 10 seconds
(ctrl+C then 'C' = continue early, ctrl+C then 'A' = abort)
ok: [kovalart-3]

TASK [nginx : Run the nginx exporter] ******************************************
changed: [kovalart-3]

RUNNING HANDLER [nginx : restart nginx] ****************************************
changed: [kovalart-3]

PLAY [Prometheus tasks] ********************************************************

TASK [Gathering Facts] *********************************************************
ok: [kovalart-3]

TASK [prometheus : Install Prometheus on Second VM] ****************************
The following additional packages will be installed:
  fonts-glyphicons-halflings javascript-common libc-ares2 libjs-bootstrap
  libjs-bootstrap4 libjs-d3 libjs-eonasdan-bootstrap-datetimepicker
  libjs-jquery libjs-jquery-hotkeys libjs-moment libjs-moment-timezone
  libjs-mustache libjs-popper.js libjs-rickshaw libnode64 node-jquery nodejs
  nodejs-doc
Suggested packages:
  npm
The following NEW packages will be installed:
  fonts-glyphicons-halflings javascript-common libc-ares2 libjs-bootstrap
  libjs-bootstrap4 libjs-d3 libjs-eonasdan-bootstrap-datetimepicker
  libjs-jquery libjs-jquery-hotkeys libjs-moment libjs-moment-timezone
  libjs-mustache libjs-popper.js libjs-rickshaw libnode64 node-jquery nodejs
  nodejs-doc prometheus
0 upgraded, 19 newly installed, 0 to remove and 261 not upgraded.
changed: [kovalart-3]

TASK [prometheus : Copy Prometheus Configuration] ******************************
--- before: /etc/prometheus/prometheus.yml
+++ after: /home/parrot/.ansible/tmp/ansible-local-267406kvomjqnj/tmpjjlrlmhc/prometheus_config.yaml.j2
@@ -1,44 +1,53 @@
-# Sample config for Prometheus.
+global:
+  scrape_interval: 15s
 
-global:
-  scrape_interval:     15s # Set the scrape interval to every 15 seconds. Default is every 1 minute.
-  evaluation_interval: 15s # Evaluate rules every 15 seconds. The default is every 1 minute.
-  # scrape_timeout is set to the global default (10s).
-
-  # Attach these labels to any time series or alerts when communicating with
-  # external systems (federation, remote storage, Alertmanager).
-  external_labels:
-      monitor: 'example'
-
-# Alertmanager configuration
-alerting:
-  alertmanagers:
-  - static_configs:
-    - targets: ['localhost:9093']
-
-# Load rules once and periodically evaluate them according to the global 'evaluation_interval'.
-rule_files:
-  # - "first_rules.yml"
-  # - "second_rules.yml"
-
-# A scrape configuration containing exactly one endpoint to scrape:
-# Here it's Prometheus itself.
 scrape_configs:
-  # The job name is added as a label `job=<job_name>` to any timeseries scraped from this config.
   - job_name: 'prometheus'
-
-    # Override the global default and scrape targets from this job every 5 seconds.
-    scrape_interval: 5s
-    scrape_timeout: 5s
-
-    # metrics_path defaults to '/metrics'
-    # scheme defaults to 'http'.
-
     static_configs:
       - targets: ['localhost:9090']
+    metrics_path: /prometheus/metrics
 
-  - job_name: node
-    # If prometheus-node-exporter is installed, grab stats about the local
-    # machine by default.
+  - job_name: 'linux'
     static_configs:
-      - targets: ['localhost:9100']
+      - targets:
+                - 'kovalart-1:9100'
+                - 'kovalart-2:9100'
+                - 'kovalart-3:9100'
+          
+  - job_name: 'mysql'
+    static_configs:
+      - targets:
+                     - kovalart-1:9104
+                     - kovalart-2:9104
+            
+  - job_name: 'DNS - bind9'
+    static_configs:
+      - targets:
+                     - kovalart-3:9119
+                     - kovalart-1:9119
+                     - kovalart-2:9119
+          
+  - job_name: 'Web server - 1'
+    static_configs:
+      - targets:
+                     - kovalart-1:9113
+                     - kovalart-2:9113
+                     - kovalart-3:9113
+          
+  - job_name: 'influxdb'
+    static_configs:
+      - targets:
+                     - kovalart-3:9424
+          
+  - job_name: 'haproxy'
+    static_configs:
+      - targets:
+                      - kovalart-1:9101
+                      - kovalart-2:9101
+                    
+  - job_name: 'keepalived'
+    static_configs:
+      - targets:
+                      - kovalart-1:9165
+                      - kovalart-2:9165
+          

changed: [kovalart-3]

TASK [prometheus : Copy Prometheus service configuration] **********************
--- before: /etc/default/prometheus
+++ after: /home/parrot/.ansible/tmp/ansible-local-267406kvomjqnj/tmpl1nwntjs/prom.service.j2
@@ -1,57 +1 @@
-# Set the command-line arguments to pass to the server.
-ARGS=""
-
-# Prometheus supports the following options:
-#  --config.file="/etc/prometheus/prometheus.yml"
-#                             Prometheus configuration file path.
-#  --web.listen-address="0.0.0.0:9090"
-#                             Address to listen on for UI, API, and telemetry.
-#  --web.read-timeout=5m      Maximum duration before timing out read of the
-#                             request, and closing idle connections.
-#  --web.max-connections=512  Maximum number of simultaneous connections.
-#  --web.external-url=<URL>   The URL under which Prometheus is externally
-#                             reachable (for example, if Prometheus is served
-#                             via a reverse proxy). Used for generating
-#                             relative and absolute links back to Prometheus
-#                             itself. If the URL has a path portion, it will
-#                             be used to prefix all HTTP endpoints served by
-#                             Prometheus. If omitted, relevant URL components
-#                             will be derived automatically.
-#  --web.route-prefix=<path>  Prefix for the internal routes of web endpoints.
-#                             Defaults to path of --web.external-url.
-#  --web.local-assets="/usr/share/prometheus/web/"
-#                             Path to static asset/templates directory.
-#  --web.user-assets=<path>   Path to static asset directory, available at
-#                             /user.
-#  --web.enable-lifecycle     Enable shutdown and reload via HTTP request.
-#  --web.enable-admin-api     Enables API endpoints for admin control actions.
-#  --web.console.templates="/etc/prometheus/consoles"
-#                             Path to the console template directory,
-#                             available at /consoles.
-#  --web.console.libraries="/etc/prometheus/console_libraries"
-#                             Path to the console library directory.
-#  --storage.tsdb.path="/var/lib/prometheus/metrics2/"
-#                             Base path for metrics storage.
-#  --storage.tsdb.min-block-duration=2h
-#                             Minimum duration of a data block before being
-#                             persisted.
-#  --storage.tsdb.max-block-duration=<duration>
-#                             Maximum duration compacted blocks may span.
-#                             (Defaults to 10% of the retention period)
-#  --storage.tsdb.retention=15d
-#                             How long to retain samples in the storage.
-#  --storage.tsdb.use-lockfile
-#                             Create a lockfile in data directory.
-#  --alertmanager.notification-queue-capacity=10000
-#                             The capacity of the queue for pending alert
-#                             manager notifications.
-#  --alertmanager.timeout=10s
-#                             Timeout for sending alerts to Alertmanager.
-#  --query.lookback-delta=5m  The delta difference allowed for retrieving
-#                             metrics during expression evaluations.
-#  --query.timeout=2m         Maximum time a query may take before being
-#                             aborted.
-#  --query.max-concurrency=20
-#                             Maximum number of queries executed concurrently.
-#  --log.level=info           Only log messages with the given severity or
-#                             above. One of: [debug, info, warn, error]
+ARGS="--web.external-url=http://kovalart-2/prometheus"
\ No newline at end of file

changed: [kovalart-3]

TASK [prometheus : Create CNAME record for prometheus] *************************
changed: [kovalart-3]

RUNNING HANDLER [prometheus : restart prometheus] ******************************
changed: [kovalart-3]

PLAY [Docker tasks] ************************************************************

TASK [Gathering Facts] *********************************************************
ok: [kovalart-3]
ok: [kovalart-1]
ok: [kovalart-2]

TASK [docker : Install Docker.io package] **************************************
The following additional packages will be installed:
  bridge-utils containerd dnsmasq-base libidn11 pigz runc ubuntu-fan
Suggested packages:
  ifupdown aufs-tools cgroupfs-mount | cgroup-lite debootstrap docker-doc
  rinse zfs-fuse | zfsutils
The following NEW packages will be installed:
  bridge-utils containerd dnsmasq-base docker.io libidn11 pigz runc ubuntu-fan
0 upgraded, 8 newly installed, 0 to remove and 261 not upgraded.
changed: [kovalart-3]
The following additional packages will be installed:
  bridge-utils containerd dnsmasq-base libidn11 pigz runc ubuntu-fan
Suggested packages:
  ifupdown aufs-tools cgroupfs-mount | cgroup-lite debootstrap docker-doc
  rinse zfs-fuse | zfsutils
The following NEW packages will be installed:
  bridge-utils containerd dnsmasq-base docker.io libidn11 pigz runc ubuntu-fan
0 upgraded, 8 newly installed, 0 to remove and 261 not upgraded.
changed: [kovalart-2]
The following additional packages will be installed:
  bridge-utils containerd dnsmasq-base libidn11 pigz runc ubuntu-fan
Suggested packages:
  ifupdown aufs-tools cgroupfs-mount | cgroup-lite debootstrap docker-doc
  rinse zfs-fuse | zfsutils
The following NEW packages will be installed:
  bridge-utils containerd dnsmasq-base docker.io libidn11 pigz runc ubuntu-fan
0 upgraded, 8 newly installed, 0 to remove and 261 not upgraded.
changed: [kovalart-1]

TASK [docker : Install python3-docker package] *********************************
The following additional packages will be installed:
  python3-websocket
The following NEW packages will be installed:
  python3-docker python3-websocket
0 upgraded, 2 newly installed, 0 to remove and 261 not upgraded.
changed: [kovalart-2]
The following additional packages will be installed:
  python3-websocket
The following NEW packages will be installed:
  python3-docker python3-websocket
0 upgraded, 2 newly installed, 0 to remove and 261 not upgraded.
changed: [kovalart-3]
The following additional packages will be installed:
  python3-websocket
The following NEW packages will be installed:
  python3-docker python3-websocket
0 upgraded, 2 newly installed, 0 to remove and 261 not upgraded.
changed: [kovalart-1]

TASK [docker : Ensure Docker daemon is running and enabled] ********************
ok: [kovalart-2]
ok: [kovalart-1]
ok: [kovalart-3]

PLAY [Grafana Tasks] ***********************************************************

TASK [Gathering Facts] *********************************************************
ok: [kovalart-3]

TASK [grafana : Create Grafana directories] ************************************
--- before
+++ after
@@ -1,4 +1,4 @@
 {
     "path": "/opt/grafana/provisioning/dashboards",
-    "state": "absent"
+    "state": "directory"
 }

changed: [kovalart-3] => (item=provisioning/dashboards)
--- before
+++ after
@@ -1,4 +1,4 @@
 {
     "path": "/opt/grafana/provisioning/datasources",
-    "state": "absent"
+    "state": "directory"
 }

changed: [kovalart-3] => (item=provisioning/datasources)

TASK [grafana : Copy the config] ***********************************************
changed: [kovalart-3]

TASK [grafana : Copy Grafana datasource] ***************************************
--- before
+++ after: /home/parrot/.ansible/tmp/ansible-local-267406kvomjqnj/tmpeqidy28q/datasource.yaml.j2
@@ -0,0 +1,20 @@
+apiVersion: 1
+
+datasources:
+  - name: Prometheus
+    type: prometheus
+    access: proxy
+    # Access mode - proxy (server in the UI) or direct (browser in the UI).
+    url: 	http://kovalart-3:9090/prometheus
+
+  - name: InfluxDB
+    type: influxdb
+    access: proxy
+    database: pinger
+    url: http://influxdb.infocare.io:8086
+
+  - name: InfluxDB-telegraf
+    type: influxdb
+    access: proxy
+    database: telegraf
+    url: http://influxdb.infocare.io:8086
\ No newline at end of file

changed: [kovalart-3]

TASK [grafana : Copy Grafana dashboard configuration] **************************
--- before
+++ after: /home/parrot/.ansible/tmp/ansible-local-267406kvomjqnj/tmpg12g66wz/default.yaml.j2
@@ -0,0 +1,10 @@
+apiVersion: 1
+
+providers:
+- name: 'dashboards'
+  orgId: 1
+  folder: ''
+  folderUid: ''
+  type: file
+  options:
+    path: /etc/grafana/provisioning/dashboards/
\ No newline at end of file

changed: [kovalart-3]

TASK [grafana : Copy Grafana main dashboard] ***********************************
--- before
+++ after: /home/parrot/ica0002/roles/grafana/files/main.json
@@ -0,0 +1,2273 @@
+{
+  "annotations": {
+    "list": [
+      {
+        "builtIn": 1,
+        "datasource": {
+          "type": "grafana",
+          "uid": "-- Grafana --"
+        },
+        "enable": true,
+        "hide": true,
+        "iconColor": "rgba(0, 211, 255, 1)",
+        "name": "Annotations & Alerts",
+        "type": "dashboard"
+      }
+    ]
+  },
+  "editable": true,
+  "fiscalYearStartMonth": 0,
+  "graphTooltip": 0,
+  "id": 1,
+  "links": [],
+  "liveNow": false,
+  "panels": [
+    {
+      "datasource": {
+        "type": "prometheus",
+        "uid": "PBFA97CFB590B2093"
+      },
+      "fieldConfig": {
+        "defaults": {
+          "color": {
+            "mode": "thresholds"
+          },
+          "fieldMinMax": false,
+          "mappings": [
+            {
+              "options": {
+                "0": {
+                  "color": "red",
+                  "index": 1,
+                  "text": "DOWN"
+                },
+                "1": {
+                  "color": "green",
+                  "index": 0,
+                  "text": "UP"
+                }
+              },
+              "type": "value"
+            }
+          ],
+          "thresholds": {
+            "mode": "absolute",
+            "steps": [
+              {
+                "color": "green",
+                "value": null
+              },
+              {
+                "color": "red",
+                "value": ""
+              },
+              {
+                "color": "green",
+                "value": ""
+              }
+            ]
+          }
+        },
+        "overrides": []
+      },
+      "gridPos": {
+        "h": 4,
+        "w": 2,
+        "x": 0,
+        "y": 0
+      },
+      "id": 3,
+      "options": {
+        "colorMode": "value",
+        "graphMode": "none",
+        "justifyMode": "center",
+        "orientation": "auto",
+        "reduceOptions": {
+          "calcs": [
+            "lastNotNull"
+          ],
+          "fields": "",
+          "values": false
+        },
+        "textMode": "value",
+        "wideLayout": true
+      },
+      "pluginVersion": "10.2.2",
+      "targets": [
+        {
+          "datasource": {
+            "type": "prometheus",
+            "uid": "PBFA97CFB590B2093"
+          },
+          "editorMode": "code",
+          "expr": "bind_up{instance=\"kovalart-1:9119\"}",
+          "instant": false,
+          "legendFormat": "__auto",
+          "range": true,
+          "refId": "A"
+        }
+      ],
+      "title": "DNS kovalart-1",
+      "transparent": true,
+      "type": "stat"
+    },
+    {
+      "datasource": {
+        "type": "prometheus",
+        "uid": "PBFA97CFB590B2093"
+      },
+      "fieldConfig": {
+        "defaults": {
+          "color": {
+            "mode": "thresholds"
+          },
+          "mappings": [
+            {
+              "options": {
+                "0": {
+                  "color": "red",
+                  "index": 1,
+                  "text": "DOWN"
+                },
+                "1": {
+                  "color": "green",
+                  "index": 0,
+                  "text": "UP"
+                }
+              },
+              "type": "value"
+            }
+          ],
+          "thresholds": {
+            "mode": "absolute",
+            "steps": [
+              {
+                "color": "green",
+                "value": null
+              },
+              {
+                "color": "red",
+                "value": ""
+              },
+              {
+                "color": "green",
+                "value": ""
+              }
+            ]
+          }
+        },
+        "overrides": []
+      },
+      "gridPos": {
+        "h": 4,
+        "w": 2,
+        "x": 2,
+        "y": 0
+      },
+      "id": 4,
+      "options": {
+        "colorMode": "value",
+        "graphMode": "none",
+        "justifyMode": "center",
+        "orientation": "auto",
+        "reduceOptions": {
+          "calcs": [
+            "lastNotNull"
+          ],
+          "fields": "",
+          "values": false
+        },
+        "textMode": "value",
+        "wideLayout": true
+      },
+      "pluginVersion": "10.2.2",
+      "targets": [
+        {
+          "datasource": {
+            "type": "prometheus",
+            "uid": "PBFA97CFB590B2093"
+          },
+          "editorMode": "code",
+          "expr": "bind_up{instance=\"kovalart-2:9119\"}",
+          "instant": false,
+          "legendFormat": "__auto",
+          "range": true,
+          "refId": "A"
+        }
+      ],
+      "title": "DNS kovalart-2",
+      "transparent": true,
+      "type": "stat"
+    },
+    {
+      "datasource": {
+        "type": "prometheus",
+        "uid": "PBFA97CFB590B2093"
+      },
+      "fieldConfig": {
+        "defaults": {
+          "color": {
+            "mode": "thresholds"
+          },
+          "mappings": [
+            {
+              "options": {
+                "0": {
+                  "color": "red",
+                  "index": 1,
+                  "text": "DOWN"
+                },
+                "1": {
+                  "color": "green",
+                  "index": 0,
+                  "text": "UP"
+                }
+              },
+              "type": "value"
+            }
+          ],
+          "thresholds": {
+            "mode": "absolute",
+            "steps": [
+              {
+                "color": "green",
+                "value": null
+              },
+              {
+                "color": "red",
+                "value": ""
+              },
+              {
+                "color": "green",
+                "value": ""
+              }
+            ]
+          }
+        },
+        "overrides": []
+      },
+      "gridPos": {
+        "h": 4,
+        "w": 2,
+        "x": 4,
+        "y": 0
+      },
+      "id": 27,
+      "options": {
+        "colorMode": "value",
+        "graphMode": "none",
+        "justifyMode": "center",
+        "orientation": "auto",
+        "reduceOptions": {
+          "calcs": [
+            "lastNotNull"
+          ],
+          "fields": "",
+          "values": false
+        },
+        "textMode": "value",
+        "wideLayout": true
+      },
+      "pluginVersion": "10.2.2",
+      "targets": [
+        {
+          "datasource": {
+            "type": "prometheus",
+            "uid": "PBFA97CFB590B2093"
+          },
+          "editorMode": "code",
+          "expr": "bind_up{instance=\"kovalart-3:9119\"}",
+          "instant": false,
+          "legendFormat": "__auto",
+          "range": true,
+          "refId": "A"
+        }
+      ],
+      "title": "DNS kovalart-3",
+      "transparent": true,
+      "type": "stat"
+    },
+    {
+      "datasource": {
+        "type": "prometheus",
+        "uid": "PBFA97CFB590B2093"
+      },
+      "fieldConfig": {
+        "defaults": {
+          "color": {
+            "mode": "thresholds"
+          },
+          "mappings": [
+            {
+              "options": {
+                "0": {
+                  "color": "red",
+                  "index": 1,
+                  "text": "DOWN"
+                },
+                "1": {
+                  "color": "green",
+                  "index": 0,
+                  "text": "UP"
+                }
+              },
+              "type": "value"
+            }
+          ],
+          "thresholds": {
+            "mode": "absolute",
+            "steps": [
+              {
+                "color": "green",
+                "value": null
+              },
+              {
+                "color": "red",
+                "value": ""
+              },
+              {
+                "color": "green",
+                "value": ""
+              }
+            ]
+          }
+        },
+        "overrides": []
+      },
+      "gridPos": {
+        "h": 4,
+        "w": 2,
+        "x": 6,
+        "y": 0
+      },
+      "id": 5,
+      "options": {
+        "colorMode": "value",
+        "graphMode": "none",
+        "justifyMode": "center",
+        "orientation": "auto",
+        "reduceOptions": {
+          "calcs": [
+            "lastNotNull"
+          ],
+          "fields": "",
+          "values": false
+        },
+        "textMode": "value",
+        "wideLayout": true
+      },
+      "pluginVersion": "10.2.2",
+      "targets": [
+        {
+          "datasource": {
+            "type": "prometheus",
+            "uid": "PBFA97CFB590B2093"
+          },
+          "editorMode": "code",
+          "expr": "nginx_up{instance=\"kovalart-3:9113\"}",
+          "instant": false,
+          "legendFormat": "__auto",
+          "range": true,
+          "refId": "A"
+        }
+      ],
+      "title": "NGINX kovalart-3",
+      "transparent": true,
+      "type": "stat"
+    },
+    {
+      "datasource": {
+        "type": "prometheus",
+        "uid": "PBFA97CFB590B2093"
+      },
+      "fieldConfig": {
+        "defaults": {
+          "color": {
+            "mode": "thresholds"
+          },
+          "mappings": [
+            {
+              "options": {
+                "0": {
+                  "color": "red",
+                  "index": 1,
+                  "text": "DOWN"
+                },
+                "1": {
+                  "color": "green",
+                  "index": 0,
+                  "text": "UP"
+                }
+              },
+              "type": "value"
+            }
+          ],
+          "thresholds": {
+            "mode": "absolute",
+            "steps": [
+              {
+                "color": "green",
+                "value": null
+              },
+              {
+                "color": "red",
+                "value": ""
+              },
+              {
+                "color": "green",
+                "value": ""
+              }
+            ]
+          }
+        },
+        "overrides": []
+      },
+      "gridPos": {
+        "h": 4,
+        "w": 2,
+        "x": 8,
+        "y": 0
+      },
+      "id": 8,
+      "options": {
+        "colorMode": "value",
+        "graphMode": "none",
+        "justifyMode": "center",
+        "orientation": "auto",
+        "reduceOptions": {
+          "calcs": [
+            "lastNotNull"
+          ],
+          "fields": "",
+          "values": false
+        },
+        "textMode": "value",
+        "wideLayout": true
+      },
+      "pluginVersion": "10.2.2",
+      "targets": [
+        {
+          "datasource": {
+            "type": "prometheus",
+            "uid": "PBFA97CFB590B2093"
+          },
+          "editorMode": "code",
+          "expr": "mysql_up{instance=\"kovalart-1:9104\"}",
+          "instant": false,
+          "legendFormat": "__auto",
+          "range": true,
+          "refId": "A"
+        }
+      ],
+      "title": "MYSQL kovalart-1",
+      "transparent": true,
+      "type": "stat"
+    },
+    {
+      "datasource": {
+        "type": "prometheus",
+        "uid": "PBFA97CFB590B2093"
+      },
+      "fieldConfig": {
+        "defaults": {
+          "color": {
+            "mode": "thresholds"
+          },
+          "mappings": [
+            {
+              "options": {
+                "0": {
+                  "color": "red",
+                  "index": 1,
+                  "text": "DOWN"
+                },
+                "1": {
+                  "color": "green",
+                  "index": 0,
+                  "text": "UP"
+                }
+              },
+              "type": "value"
+            }
+          ],
+          "thresholds": {
+            "mode": "absolute",
+            "steps": [
+              {
+                "color": "green",
+                "value": null
+              },
+              {
+                "color": "red",
+                "value": ""
+              },
+              {
+                "color": "green",
+                "value": ""
+              }
+            ]
+          }
+        },
+        "overrides": []
+      },
+      "gridPos": {
+        "h": 4,
+        "w": 2,
+        "x": 10,
+        "y": 0
+      },
+      "id": 7,
+      "options": {
+        "colorMode": "value",
+        "graphMode": "none",
+        "justifyMode": "center",
+        "orientation": "auto",
+        "reduceOptions": {
+          "calcs": [
+            "lastNotNull"
+          ],
+          "fields": "",
+          "values": false
+        },
+        "textMode": "value",
+        "wideLayout": true
+      },
+      "pluginVersion": "10.2.2",
+      "targets": [
+        {
+          "datasource": {
+            "type": "prometheus",
+            "uid": "PBFA97CFB590B2093"
+          },
+          "editorMode": "code",
+          "expr": "mysql_up{instance=\"kovalart-2:9104\"}",
+          "instant": false,
+          "legendFormat": "__auto",
+          "range": true,
+          "refId": "A"
+        }
+      ],
+      "title": "MYSQL kovalart-2",
+      "transparent": true,
+      "type": "stat"
+    },
+    {
+      "datasource": {
+        "type": "prometheus",
+        "uid": "PBFA97CFB590B2093"
+      },
+      "fieldConfig": {
+        "defaults": {
+          "color": {
+            "mode": "thresholds"
+          },
+          "mappings": [
+            {
+              "options": {
+                "0": {
+                  "color": "red",
+                  "index": 1,
+                  "text": "DOWN"
+                },
+                "1": {
+                  "color": "green",
+                  "index": 0,
+                  "text": "UP"
+                }
+              },
+              "type": "value"
+            }
+          ],
+          "thresholds": {
+            "mode": "absolute",
+            "steps": [
+              {
+                "color": "transparent",
+                "value": null
+              },
+              {
+                "color": "red",
+                "value": 0
+              },
+              {
+                "color": "green",
+                "value": 1
+              }
+            ]
+          }
+        },
+        "overrides": []
+      },
+      "gridPos": {
+        "h": 4,
+        "w": 2,
+        "x": 12,
+        "y": 0
+      },
+      "id": 13,
+      "options": {
+        "colorMode": "value",
+        "graphMode": "none",
+        "justifyMode": "center",
+        "orientation": "auto",
+        "reduceOptions": {
+          "calcs": [
+            "lastNotNull"
+          ],
+          "fields": "",
+          "values": false
+        },
+        "textMode": "auto",
+        "wideLayout": true
+      },
+      "pluginVersion": "10.2.2",
+      "targets": [
+        {
+          "datasource": {
+            "type": "prometheus",
+            "uid": "PBFA97CFB590B2093"
+          },
+          "editorMode": "code",
+          "expr": "influxdb_exporter_stats_query_success",
+          "instant": false,
+          "legendFormat": "__auto",
+          "range": true,
+          "refId": "A"
+        }
+      ],
+      "title": "Influxdb UP",
+      "transparent": true,
+      "type": "stat"
+    },
+    {
+      "datasource": {
+        "type": "prometheus",
+        "uid": "PBFA97CFB590B2093"
+      },
+      "fieldConfig": {
+        "defaults": {
+          "color": {
+            "mode": "thresholds"
+          },
+          "mappings": [
+            {
+              "options": {
+                "0": {
+                  "color": "red",
+                  "index": 1,
+                  "text": "DOWN"
+                },
+                "1": {
+                  "color": "green",
+                  "index": 0,
+                  "text": "UP"
+                }
+              },
+              "type": "value"
+            }
+          ],
+          "thresholds": {
+            "mode": "absolute",
+            "steps": [
+              {
+                "color": "dark-red",
+                "value": null
+              },
+              {
+                "color": "green",
+                "value": 1
+              }
+            ]
+          }
+        },
+        "overrides": []
+      },
+      "gridPos": {
+        "h": 4,
+        "w": 2,
+        "x": 14,
+        "y": 0
+      },
+      "id": 18,
+      "options": {
+        "colorMode": "value",
+        "graphMode": "none",
+        "justifyMode": "center",
+        "orientation": "auto",
+        "reduceOptions": {
+          "calcs": [
+            "last"
+          ],
+          "fields": "",
+          "values": false
+        },
+        "textMode": "auto",
+        "wideLayout": true
+      },
+      "pluginVersion": "10.2.2",
+      "targets": [
+        {
+          "datasource": {
+            "type": "prometheus",
+            "uid": "PBFA97CFB590B2093"
+          },
+          "editorMode": "code",
+          "expr": "haproxy_up{instance=\"kovalart-1:9101\"}\r\n",
+          "instant": false,
+          "legendFormat": "__auto",
+          "range": true,
+          "refId": "A"
+        }
+      ],
+      "title": "Haproxy UP kovalart-1",
+      "transparent": true,
+      "type": "stat"
+    },
+    {
+      "datasource": {
+        "type": "prometheus",
+        "uid": "PBFA97CFB590B2093"
+      },
+      "fieldConfig": {
+        "defaults": {
+          "color": {
+            "mode": "thresholds"
+          },
+          "mappings": [
+            {
+              "options": {
+                "0": {
+                  "color": "red",
+                  "index": 1,
+                  "text": "DOWN"
+                },
+                "1": {
+                  "color": "green",
+                  "index": 0,
+                  "text": "UP"
+                }
+              },
+              "type": "value"
+            }
+          ],
+          "thresholds": {
+            "mode": "absolute",
+            "steps": [
+              {
+                "color": "dark-red",
+                "value": null
+              },
+              {
+                "color": "green",
+                "value": 1
+              }
+            ]
+          }
+        },
+        "overrides": []
+      },
+      "gridPos": {
+        "h": 4,
+        "w": 2,
+        "x": 16,
+        "y": 0
+      },
+      "id": 19,
+      "options": {
+        "colorMode": "value",
+        "graphMode": "none",
+        "justifyMode": "center",
+        "orientation": "auto",
+        "reduceOptions": {
+          "calcs": [
+            "last"
+          ],
+          "fields": "",
+          "values": false
+        },
+        "textMode": "auto",
+        "wideLayout": true
+      },
+      "pluginVersion": "10.2.2",
+      "targets": [
+        {
+          "datasource": {
+            "type": "prometheus",
+            "uid": "PBFA97CFB590B2093"
+          },
+          "editorMode": "code",
+          "expr": "haproxy_up{instance=\"kovalart-2:9101\"}\r\n",
+          "instant": false,
+          "legendFormat": "__auto",
+          "range": true,
+          "refId": "A"
+        }
+      ],
+      "title": "Haproxy UP kovalart-2",
+      "transparent": true,
+      "type": "stat"
+    },
+    {
+      "datasource": {
+        "type": "prometheus",
+        "uid": "PBFA97CFB590B2093"
+      },
+      "fieldConfig": {
+        "defaults": {
+          "color": {
+            "mode": "palette-classic"
+          },
+          "custom": {
+            "axisBorderShow": false,
+            "axisCenteredZero": false,
+            "axisColorMode": "text",
+            "axisLabel": "",
+            "axisPlacement": "auto",
+            "barAlignment": 0,
+            "drawStyle": "line",
+            "fillOpacity": 25,
+            "gradientMode": "none",
+            "hideFrom": {
+              "legend": false,
+              "tooltip": false,
+              "viz": false
+            },
+            "insertNulls": false,
+            "lineInterpolation": "linear",
+            "lineWidth": 1,
+            "pointSize": 5,
+            "scaleDistribution": {
+              "type": "linear"
+            },
+            "showPoints": "auto",
+            "spanNulls": false,
+            "stacking": {
+              "group": "A",
+              "mode": "normal"
+            },
+            "thresholdsStyle": {
+              "mode": "off"
+            }
+          },
+          "mappings": [],
+          "thresholds": {
+            "mode": "absolute",
+            "steps": [
+              {
+                "color": "green",
+                "value": null
+              },
+              {
+                "color": "red",
+                "value": 80
+              }
+            ]
+          }
+        },
+        "overrides": []
+      },
+      "gridPos": {
+        "h": 7,
+        "w": 3,
+        "x": 0,
+        "y": 4
+      },
+      "id": 2,
+      "options": {
+        "legend": {
+          "calcs": [],
+          "displayMode": "hidden",
+          "placement": "right",
+          "showLegend": false
+        },
+        "tooltip": {
+          "mode": "single",
+          "sort": "none"
+        }
+      },
+      "pluginVersion": "10.2.2",
+      "targets": [
+        {
+          "datasource": {
+            "type": "prometheus",
+            "uid": "PBFA97CFB590B2093"
+          },
+          "editorMode": "code",
+          "expr": "sum(node_memory_MemTotal_bytes - node_memory_MemFree_bytes - node_memory_Cached_bytes - node_memory_Buffers_bytes) by (instance)",
+          "instant": false,
+          "legendFormat": "__auto",
+          "range": true,
+          "refId": "A"
+        }
+      ],
+      "title": "Memory usage",
+      "type": "timeseries"
+    },
+    {
+      "datasource": {
+        "type": "prometheus",
+        "uid": "PBFA97CFB590B2093"
+      },
+      "fieldConfig": {
+        "defaults": {
+          "color": {
+            "mode": "palette-classic"
+          },
+          "custom": {
+            "axisBorderShow": false,
+            "axisCenteredZero": false,
+            "axisColorMode": "text",
+            "axisLabel": "",
+            "axisPlacement": "auto",
+            "barAlignment": 0,
+            "drawStyle": "line",
+            "fillOpacity": 25,
+            "gradientMode": "none",
+            "hideFrom": {
+              "legend": false,
+              "tooltip": false,
+              "viz": false
+            },
+            "insertNulls": false,
+            "lineInterpolation": "stepBefore",
+            "lineWidth": 3,
+            "pointSize": 5,
+            "scaleDistribution": {
+              "type": "linear"
+            },
+            "showPoints": "auto",
+            "spanNulls": false,
+            "stacking": {
+              "group": "A",
+              "mode": "none"
+            },
+            "thresholdsStyle": {
+              "mode": "line"
+            }
+          },
+          "mappings": [],
+          "thresholds": {
+            "mode": "absolute",
+            "steps": [
+              {
+                "color": "red",
+                "value": null
+              },
+              {
+                "color": "#EAB839",
+                "value": 0.5
+              },
+              {
+                "color": "green",
+                "value": 1
+              }
+            ]
+          }
+        },
+        "overrides": []
+      },
+      "gridPos": {
+        "h": 5,
+        "w": 5,
+        "x": 3,
+        "y": 4
+      },
+      "id": 14,
+      "options": {
+        "legend": {
+          "calcs": [],
+          "displayMode": "list",
+          "placement": "bottom",
+          "showLegend": true
+        },
+        "tooltip": {
+          "mode": "single",
+          "sort": "none"
+        }
+      },
+      "pluginVersion": "10.2.2",
+      "targets": [
+        {
+          "datasource": {
+            "type": "prometheus",
+            "uid": "PBFA97CFB590B2093"
+          },
+          "editorMode": "code",
+          "expr": "rate(influxdb_write_write_ok[1m])",
+          "instant": false,
+          "legendFormat": "__auto",
+          "range": true,
+          "refId": "A"
+        }
+      ],
+      "title": "Influxdb write",
+      "type": "timeseries"
+    },
+    {
+      "datasource": {
+        "type": "prometheus",
+        "uid": "PBFA97CFB590B2093"
+      },
+      "fieldConfig": {
+        "defaults": {
+          "color": {
+            "mode": "palette-classic"
+          },
+          "custom": {
+            "axisBorderShow": false,
+            "axisCenteredZero": false,
+            "axisColorMode": "text",
+            "axisLabel": "",
+            "axisPlacement": "auto",
+            "barAlignment": 0,
+            "drawStyle": "line",
+            "fillOpacity": 0,
+            "gradientMode": "none",
+            "hideFrom": {
+              "legend": false,
+              "tooltip": false,
+              "viz": false
+            },
+            "insertNulls": false,
+            "lineInterpolation": "smooth",
+            "lineWidth": 1,
+            "pointSize": 3,
+            "scaleDistribution": {
+              "type": "linear"
+            },
+            "showPoints": "auto",
+            "spanNulls": false,
+            "stacking": {
+              "group": "A",
+              "mode": "none"
+            },
+            "thresholdsStyle": {
+              "mode": "off"
+            }
+          },
+          "mappings": [],
+          "thresholds": {
+            "mode": "absolute",
+            "steps": [
+              {
+                "color": "green",
+                "value": null
+              },
+              {
+                "color": "blue",
+                "value": 1
+              }
+            ]
+          }
+        },
+        "overrides": []
+      },
+      "gridPos": {
+        "h": 8,
+        "w": 12,
+        "x": 12,
+        "y": 4
+      },
+      "id": 17,
+      "options": {
+        "legend": {
+          "calcs": [],
+          "displayMode": "table",
+          "placement": "right",
+          "showLegend": true
+        },
+        "tooltip": {
+          "mode": "single",
+          "sort": "none"
+        }
+      },
+      "pluginVersion": "10.2.2",
+      "targets": [
+        {
+          "datasource": {
+            "type": "prometheus",
+            "uid": "PBFA97CFB590B2093"
+          },
+          "editorMode": "code",
+          "expr": "mysql_slave_status_slave_io_running",
+          "instant": false,
+          "legendFormat": "__auto",
+          "range": true,
+          "refId": "A"
+        },
+        {
+          "datasource": {
+            "type": "prometheus",
+            "uid": "PBFA97CFB590B2093"
+          },
+          "editorMode": "code",
+          "expr": "mysql_slave_status_slave_sql_running",
+          "hide": false,
+          "instant": false,
+          "legendFormat": "__auto",
+          "range": true,
+          "refId": "B"
+        }
+      ],
+      "title": "MySQL replication Thread",
+      "type": "timeseries"
+    },
+    {
+      "datasource": {
+        "type": "prometheus",
+        "uid": "PBFA97CFB590B2093"
+      },
+      "fieldConfig": {
+        "defaults": {
+          "color": {
+            "mode": "thresholds"
+          },
+          "mappings": [],
+          "thresholds": {
+            "mode": "absolute",
+            "steps": [
+              {
+                "color": "green",
+                "value": null
+              },
+              {
+                "color": "semi-dark-yellow",
+                "value": 1
+              }
+            ]
+          }
+        },
+        "overrides": []
+      },
+      "gridPos": {
+        "h": 3,
+        "w": 2,
+        "x": 3,
+        "y": 9
+      },
+      "id": 15,
+      "options": {
+        "colorMode": "value",
+        "graphMode": "none",
+        "justifyMode": "center",
+        "orientation": "auto",
+        "reduceOptions": {
+          "calcs": [
+            "lastNotNull"
+          ],
+          "fields": "",
+          "values": false
+        },
+        "text": {},
+        "textMode": "value",
+        "wideLayout": false
+      },
+      "pluginVersion": "10.2.2",
+      "targets": [
+        {
+          "datasource": {
+            "type": "prometheus",
+            "uid": "PBFA97CFB590B2093"
+          },
+          "editorMode": "code",
+          "expr": "mysql_global_variables_server_id{instance=\"kovalart-1:9104\"}",
+          "instant": false,
+          "legendFormat": "__auto",
+          "range": true,
+          "refId": "A"
+        }
+      ],
+      "title": "MYSQL ID kovalart-1",
+      "type": "stat"
+    },
+    {
+      "datasource": {
+        "type": "prometheus",
+        "uid": "PBFA97CFB590B2093"
+      },
+      "fieldConfig": {
+        "defaults": {
+          "color": {
+            "mode": "thresholds"
+          },
+          "mappings": [
+            {
+              "options": {
+                "1": {
+                  "color": "yellow",
+                  "index": 0,
+                  "text": "Read Only"
+                }
+              },
+              "type": "value"
+            }
+          ],
+          "thresholds": {
+            "mode": "absolute",
+            "steps": [
+              {
+                "color": "red",
+                "value": null
+              },
+              {
+                "color": "semi-dark-yellow",
+                "value": 1
+              }
+            ]
+          }
+        },
+        "overrides": []
+      },
+      "gridPos": {
+        "h": 3,
+        "w": 3,
+        "x": 5,
+        "y": 9
+      },
+      "id": 16,
+      "options": {
+        "colorMode": "value",
+        "graphMode": "none",
+        "justifyMode": "center",
+        "orientation": "auto",
+        "reduceOptions": {
+          "calcs": [
+            "lastNotNull"
+          ],
+          "fields": "",
+          "values": false
+        },
+        "textMode": "auto",
+        "wideLayout": true
+      },
+      "pluginVersion": "10.2.2",
+      "targets": [
+        {
+          "datasource": {
+            "type": "prometheus",
+            "uid": "PBFA97CFB590B2093"
+          },
+          "editorMode": "code",
+          "expr": "mysql_global_variables_read_only{instance=\"kovalart-1:9104\"}\r\n",
+          "instant": false,
+          "legendFormat": "__auto",
+          "range": true,
+          "refId": "A"
+        }
+      ],
+      "title": "MYSQL Read Only kovalart-1",
+      "type": "stat"
+    },
+    {
+      "datasource": {
+        "type": "prometheus",
+        "uid": "PBFA97CFB590B2093"
+      },
+      "fieldConfig": {
+        "defaults": {
+          "color": {
+            "mode": "palette-classic"
+          },
+          "custom": {
+            "axisBorderShow": false,
+            "axisCenteredZero": false,
+            "axisColorMode": "text",
+            "axisLabel": "",
+            "axisPlacement": "auto",
+            "barAlignment": 0,
+            "drawStyle": "line",
+            "fillOpacity": 25,
+            "gradientMode": "none",
+            "hideFrom": {
+              "legend": false,
+              "tooltip": false,
+              "viz": false
+            },
+            "insertNulls": false,
+            "lineInterpolation": "linear",
+            "lineWidth": 1,
+            "pointSize": 5,
+            "scaleDistribution": {
+              "type": "linear"
+            },
+            "showPoints": "auto",
+            "spanNulls": false,
+            "stacking": {
+              "group": "A",
+              "mode": "normal"
+            },
+            "thresholdsStyle": {
+              "mode": "off"
+            }
+          },
+          "mappings": [],
+          "thresholds": {
+            "mode": "absolute",
+            "steps": [
+              {
+                "color": "green",
+                "value": null
+              },
+              {
+                "color": "red",
+                "value": 80
+              }
+            ]
+          }
+        },
+        "overrides": []
+      },
+      "gridPos": {
+        "h": 5,
+        "w": 3,
+        "x": 0,
+        "y": 11
+      },
+      "id": 1,
+      "options": {
+        "legend": {
+          "calcs": [],
+          "displayMode": "hidden",
+          "placement": "right",
+          "showLegend": false
+        },
+        "tooltip": {
+          "mode": "single",
+          "sort": "none"
+        }
+      },
+      "targets": [
+        {
+          "datasource": {
+            "type": "prometheus",
+            "uid": "PBFA97CFB590B2093"
+          },
+          "editorMode": "code",
+          "expr": "1 - avg(irate(node_cpu_seconds_total{mode=\"idle\"}[1m])) by (instance)",
+          "instant": false,
+          "legendFormat": "__auto",
+          "range": true,
+          "refId": "A"
+        }
+      ],
+      "title": "CPU load",
+      "type": "timeseries"
+    },
+    {
+      "datasource": {
+        "type": "prometheus",
+        "uid": "PBFA97CFB590B2093"
+      },
+      "fieldConfig": {
+        "defaults": {
+          "color": {
+            "mode": "thresholds"
+          },
+          "mappings": [],
+          "thresholds": {
+            "mode": "absolute",
+            "steps": [
+              {
+                "color": "green",
+                "value": null
+              },
+              {
+                "color": "semi-dark-yellow",
+                "value": 1
+              }
+            ]
+          }
+        },
+        "overrides": []
+      },
+      "gridPos": {
+        "h": 3,
+        "w": 2,
+        "x": 3,
+        "y": 12
+      },
+      "id": 21,
+      "options": {
+        "colorMode": "value",
+        "graphMode": "none",
+        "justifyMode": "center",
+        "orientation": "auto",
+        "reduceOptions": {
+          "calcs": [
+            "lastNotNull"
+          ],
+          "fields": "",
+          "values": false
+        },
+        "text": {},
+        "textMode": "value",
+        "wideLayout": false
+      },
+      "pluginVersion": "10.2.2",
+      "targets": [
+        {
+          "datasource": {
+            "type": "prometheus",
+            "uid": "PBFA97CFB590B2093"
+          },
+          "editorMode": "code",
+          "expr": "mysql_global_variables_server_id{instance=\"kovalart-2:9104\"}",
+          "instant": false,
+          "legendFormat": "__auto",
+          "range": true,
+          "refId": "A"
+        }
+      ],
+      "title": "MYSQL ID kovalart-2",
+      "type": "stat"
+    },
+    {
+      "datasource": {
+        "type": "prometheus",
+        "uid": "PBFA97CFB590B2093"
+      },
+      "fieldConfig": {
+        "defaults": {
+          "color": {
+            "mode": "thresholds"
+          },
+          "mappings": [
+            {
+              "options": {
+                "0": {
+                  "color": "red",
+                  "index": 0,
+                  "text": "Read/Write"
+                }
+              },
+              "type": "value"
+            }
+          ],
+          "thresholds": {
+            "mode": "absolute",
+            "steps": [
+              {
+                "color": "red",
+                "value": null
+              },
+              {
+                "color": "semi-dark-yellow",
+                "value": 1
+              }
+            ]
+          }
+        },
+        "overrides": []
+      },
+      "gridPos": {
+        "h": 3,
+        "w": 3,
+        "x": 5,
+        "y": 12
+      },
+      "id": 20,
+      "options": {
+        "colorMode": "value",
+        "graphMode": "none",
+        "justifyMode": "center",
+        "orientation": "auto",
+        "reduceOptions": {
+          "calcs": [
+            "lastNotNull"
+          ],
+          "fields": "",
+          "values": false
+        },
+        "textMode": "auto",
+        "wideLayout": true
+      },
+      "pluginVersion": "10.2.2",
+      "targets": [
+        {
+          "datasource": {
+            "type": "prometheus",
+            "uid": "PBFA97CFB590B2093"
+          },
+          "editorMode": "code",
+          "expr": "mysql_global_variables_read_only{instance=\"kovalart-2:9104\"}\r\n",
+          "instant": false,
+          "legendFormat": "__auto",
+          "range": true,
+          "refId": "A"
+        }
+      ],
+      "title": "MYSQL Read Only kovalart-2",
+      "type": "stat"
+    },
+    {
+      "datasource": {
+        "type": "prometheus",
+        "uid": "PBFA97CFB590B2093"
+      },
+      "fieldConfig": {
+        "defaults": {
+          "color": {
+            "mode": "thresholds"
+          },
+          "mappings": [
+            {
+              "options": {
+                "1": {
+                  "color": "blue",
+                  "index": 1,
+                  "text": "Main "
+                },
+                "2": {
+                  "color": "yellow",
+                  "index": 0,
+                  "text": "Secondary"
+                }
+              },
+              "type": "value"
+            }
+          ],
+          "thresholds": {
+            "mode": "absolute",
+            "steps": [
+              {
+                "color": "dark-red",
+                "value": null
+              },
+              {
+                "color": "green",
+                "value": 1
+              }
+            ]
+          }
+        },
+        "overrides": []
+      },
+      "gridPos": {
+        "h": 3,
+        "w": 2,
+        "x": 3,
+        "y": 15
+      },
+      "id": 25,
+      "options": {
+        "colorMode": "value",
+        "graphMode": "none",
+        "justifyMode": "center",
+        "orientation": "auto",
+        "reduceOptions": {
+          "calcs": [
+            "last"
+          ],
+          "fields": "",
+          "values": false
+        },
+        "textMode": "auto",
+        "wideLayout": true
+      },
+      "pluginVersion": "10.2.2",
+      "targets": [
+        {
+          "datasource": {
+            "type": "prometheus",
+            "uid": "PBFA97CFB590B2093"
+          },
+          "editorMode": "code",
+          "expr": "keepalived_vrrp_state{instance=\"kovalart-1:9165\"}\r\n",
+          "instant": false,
+          "legendFormat": "__auto",
+          "range": true,
+          "refId": "A"
+        }
+      ],
+      "title": "keepalived kovalart-1",
+      "transparent": true,
+      "type": "stat"
+    },
+    {
+      "datasource": {
+        "type": "prometheus",
+        "uid": "PBFA97CFB590B2093"
+      },
+      "fieldConfig": {
+        "defaults": {
+          "color": {
+            "mode": "thresholds"
+          },
+          "mappings": [
+            {
+              "options": {
+                "0": {
+                  "color": "red",
+                  "index": 1,
+                  "text": "DOWN"
+                },
+                "1": {
+                  "color": "green",
+                  "index": 0,
+                  "text": "UP"
+                }
+              },
+              "type": "value"
+            }
+          ],
+          "thresholds": {
+            "mode": "absolute",
+            "steps": [
+              {
+                "color": "dark-red",
+                "value": null
+              },
+              {
+                "color": "green",
+                "value": 1
+              }
+            ]
+          }
+        },
+        "overrides": []
+      },
+      "gridPos": {
+        "h": 3,
+        "w": 6,
+        "x": 5,
+        "y": 15
+      },
+      "id": 22,
+      "options": {
+        "colorMode": "value",
+        "graphMode": "none",
+        "justifyMode": "center",
+        "orientation": "auto",
+        "reduceOptions": {
+          "calcs": [
+            "last"
+          ],
+          "fields": "",
+          "values": false
+        },
+        "textMode": "value",
+        "wideLayout": true
+      },
+      "pluginVersion": "10.2.2",
+      "targets": [
+        {
+          "datasource": {
+            "type": "prometheus",
+            "uid": "PBFA97CFB590B2093"
+          },
+          "editorMode": "code",
+          "expr": "haproxy_server_up{instance=\"kovalart-1:9101\"}",
+          "instant": false,
+          "legendFormat": "__auto",
+          "range": true,
+          "refId": "A"
+        }
+      ],
+      "title": "Haproxy Server Status kovalart-1",
+      "transparent": true,
+      "type": "stat"
+    },
+    {
+      "datasource": {
+        "type": "prometheus",
+        "uid": "PBFA97CFB590B2093"
+      },
+      "fieldConfig": {
+        "defaults": {
+          "color": {
+            "mode": "palette-classic"
+          },
+          "custom": {
+            "axisBorderShow": false,
+            "axisCenteredZero": false,
+            "axisColorMode": "text",
+            "axisLabel": "",
+            "axisPlacement": "auto",
+            "barAlignment": 0,
+            "drawStyle": "line",
+            "fillOpacity": 0,
+            "gradientMode": "none",
+            "hideFrom": {
+              "legend": false,
+              "tooltip": false,
+              "viz": false
+            },
+            "insertNulls": false,
+            "lineInterpolation": "linear",
+            "lineWidth": 1,
+            "pointSize": 5,
+            "scaleDistribution": {
+              "type": "linear"
+            },
+            "showPoints": "auto",
+            "spanNulls": false,
+            "stacking": {
+              "group": "A",
+              "mode": "none"
+            },
+            "thresholdsStyle": {
+              "mode": "off"
+            }
+          },
+          "mappings": [],
+          "thresholds": {
+            "mode": "absolute",
+            "steps": [
+              {
+                "color": "green",
+                "value": null
+              },
+              {
+                "color": "red",
+                "value": 80
+              }
+            ]
+          }
+        },
+        "overrides": []
+      },
+      "gridPos": {
+        "h": 5,
+        "w": 3,
+        "x": 0,
+        "y": 16
+      },
+      "id": 9,
+      "options": {
+        "legend": {
+          "calcs": [],
+          "displayMode": "list",
+          "placement": "bottom",
+          "showLegend": true
+        },
+        "tooltip": {
+          "mode": "single",
+          "sort": "none"
+        }
+      },
+      "pluginVersion": "10.2.2",
+      "targets": [
+        {
+          "datasource": {
+            "type": "prometheus",
+            "uid": "PBFA97CFB590B2093"
+          },
+          "editorMode": "code",
+          "expr": "rate(bind_resolver_queries_total{type=\"A\"}[1m])\r\n",
+          "instant": false,
+          "legendFormat": "__auto",
+          "range": true,
+          "refId": "A"
+        }
+      ],
+      "title": "A records per 1m",
+      "type": "timeseries"
+    },
+    {
+      "datasource": {
+        "type": "prometheus",
+        "uid": "PBFA97CFB590B2093"
+      },
+      "fieldConfig": {
+        "defaults": {
+          "color": {
+            "mode": "thresholds"
+          },
+          "mappings": [
+            {
+              "options": {
+                "1": {
+                  "color": "blue",
+                  "index": 1,
+                  "text": "Main "
+                },
+                "2": {
+                  "color": "yellow",
+                  "index": 0,
+                  "text": "Secondary"
+                }
+              },
+              "type": "value"
+            }
+          ],
+          "thresholds": {
+            "mode": "absolute",
+            "steps": [
+              {
+                "color": "dark-red",
+                "value": null
+              },
+              {
+                "color": "green",
+                "value": 1
+              }
+            ]
+          }
+        },
+        "overrides": []
+      },
+      "gridPos": {
+        "h": 3,
+        "w": 2,
+        "x": 3,
+        "y": 18
+      },
+      "id": 26,
+      "options": {
+        "colorMode": "value",
+        "graphMode": "none",
+        "justifyMode": "center",
+        "orientation": "auto",
+        "reduceOptions": {
+          "calcs": [
+            "last"
+          ],
+          "fields": "",
+          "values": false
+        },
+        "textMode": "auto",
+        "wideLayout": true
+      },
+      "pluginVersion": "10.2.2",
+      "targets": [
+        {
+          "datasource": {
+            "type": "prometheus",
+            "uid": "PBFA97CFB590B2093"
+          },
+          "editorMode": "code",
+          "expr": "keepalived_vrrp_state{instance=\"kovalart-2:9165\"}\r\n",
+          "instant": false,
+          "legendFormat": "__auto",
+          "range": true,
+          "refId": "A"
+        }
+      ],
+      "title": "keepalived kovalart-2",
+      "transparent": true,
+      "type": "stat"
+    },
+    {
+      "datasource": {
+        "type": "prometheus",
+        "uid": "PBFA97CFB590B2093"
+      },
+      "fieldConfig": {
+        "defaults": {
+          "color": {
+            "mode": "thresholds"
+          },
+          "mappings": [
+            {
+              "options": {
+                "0": {
+                  "color": "red",
+                  "index": 1,
+                  "text": "DOWN"
+                },
+                "1": {
+                  "color": "green",
+                  "index": 0,
+                  "text": "UP"
+                }
+              },
+              "type": "value"
+            }
+          ],
+          "thresholds": {
+            "mode": "absolute",
+            "steps": [
+              {
+                "color": "dark-red",
+                "value": null
+              },
+              {
+                "color": "green",
+                "value": 1
+              }
+            ]
+          }
+        },
+        "overrides": []
+      },
+      "gridPos": {
+        "h": 3,
+        "w": 6,
+        "x": 5,
+        "y": 18
+      },
+      "id": 23,
+      "options": {
+        "colorMode": "value",
+        "graphMode": "none",
+        "justifyMode": "center",
+        "orientation": "auto",
+        "reduceOptions": {
+          "calcs": [
+            "last"
+          ],
+          "fields": "",
+          "values": false
+        },
+        "textMode": "value",
+        "wideLayout": true
+      },
+      "pluginVersion": "10.2.2",
+      "targets": [
+        {
+          "datasource": {
+            "type": "prometheus",
+            "uid": "PBFA97CFB590B2093"
+          },
+          "editorMode": "code",
+          "expr": "haproxy_server_up{instance=\"kovalart-2:9101\"}",
+          "instant": false,
+          "legendFormat": "__auto",
+          "range": true,
+          "refId": "A"
+        }
+      ],
+      "title": "Haproxy Server Status kovalart-2",
+      "transparent": true,
+      "type": "stat"
+    },
+    {
+      "datasource": {
+        "type": "prometheus",
+        "uid": "PBFA97CFB590B2093"
+      },
+      "fieldConfig": {
+        "defaults": {
+          "color": {
+            "mode": "palette-classic"
+          },
+          "custom": {
+            "axisBorderShow": false,
+            "axisCenteredZero": false,
+            "axisColorMode": "text",
+            "axisLabel": "",
+            "axisPlacement": "auto",
+            "barAlignment": 0,
+            "drawStyle": "line",
+            "fillOpacity": 0,
+            "gradientMode": "none",
+            "hideFrom": {
+              "legend": false,
+              "tooltip": false,
+              "viz": false
+            },
+            "insertNulls": false,
+            "lineInterpolation": "linear",
+            "lineWidth": 1,
+            "pointSize": 5,
+            "scaleDistribution": {
+              "type": "linear"
+            },
+            "showPoints": "auto",
+            "spanNulls": false,
+            "stacking": {
+              "group": "A",
+              "mode": "none"
+            },
+            "thresholdsStyle": {
+              "mode": "off"
+            }
+          },
+          "mappings": [],
+          "thresholds": {
+            "mode": "absolute",
+            "steps": [
+              {
+                "color": "green",
+                "value": null
+              },
+              {
+                "color": "red",
+                "value": 80
+              }
+            ]
+          }
+        },
+        "overrides": []
+      },
+      "gridPos": {
+        "h": 5,
+        "w": 3,
+        "x": 0,
+        "y": 21
+      },
+      "id": 10,
+      "options": {
+        "legend": {
+          "calcs": [],
+          "displayMode": "list",
+          "placement": "bottom",
+          "showLegend": true
+        },
+        "tooltip": {
+          "mode": "single",
+          "sort": "none"
+        }
+      },
+      "pluginVersion": "10.2.2",
+      "targets": [
+        {
+          "datasource": {
+            "type": "prometheus",
+            "uid": "PBFA97CFB590B2093"
+          },
+          "editorMode": "code",
+          "expr": "rate(nginx_http_requests_total[1m])",
+          "instant": false,
+          "legendFormat": "__auto",
+          "range": true,
+          "refId": "A"
+        }
+      ],
+      "title": "Web Requests per 1m",
+      "type": "timeseries"
+    },
+    {
+      "datasource": {
+        "type": "prometheus",
+        "uid": "PBFA97CFB590B2093"
+      },
+      "fieldConfig": {
+        "defaults": {
+          "color": {
+            "mode": "palette-classic"
+          },
+          "custom": {
+            "axisBorderShow": false,
+            "axisCenteredZero": false,
+            "axisColorMode": "text",
+            "axisLabel": "",
+            "axisPlacement": "auto",
+            "barAlignment": 0,
+            "drawStyle": "line",
+            "fillOpacity": 0,
+            "gradientMode": "none",
+            "hideFrom": {
+              "legend": false,
+              "tooltip": false,
+              "viz": false
+            },
+            "insertNulls": false,
+            "lineInterpolation": "linear",
+            "lineWidth": 1,
+            "pointSize": 5,
+            "scaleDistribution": {
+              "type": "linear"
+            },
+            "showPoints": "auto",
+            "spanNulls": false,
+            "stacking": {
+              "group": "A",
+              "mode": "none"
+            },
+            "thresholdsStyle": {
+              "mode": "off"
+            }
+          },
+          "mappings": [],
+          "thresholds": {
+            "mode": "absolute",
+            "steps": [
+              {
+                "color": "green",
+                "value": null
+              },
+              {
+                "color": "red",
+                "value": 80
+              }
+            ]
+          }
+        },
+        "overrides": []
+      },
+      "gridPos": {
+        "h": 5,
+        "w": 3,
+        "x": 0,
+        "y": 26
+      },
+      "id": 11,
+      "options": {
+        "legend": {
+          "calcs": [],
+          "displayMode": "list",
+          "placement": "bottom",
+          "showLegend": true
+        },
+        "tooltip": {
+          "mode": "single",
+          "sort": "none"
+        }
+      },
+      "pluginVersion": "10.2.2",
+      "targets": [
+        {
+          "datasource": {
+            "type": "prometheus",
+            "uid": "PBFA97CFB590B2093"
+          },
+          "editorMode": "code",
+          "expr": "rate(mysql_global_status_commands_total{command=\"SELECT\"}[1m])",
+          "instant": false,
+          "legendFormat": "__auto",
+          "range": true,
+          "refId": "A"
+        }
+      ],
+      "title": "MYSQL Select Requests per 1m",
+      "type": "timeseries"
+    },
+    {
+      "datasource": {
+        "type": "influxdb",
+        "uid": "P951FEA4DE68E13C5"
+      },
+      "fieldConfig": {
+        "defaults": {
+          "color": {
+            "mode": "palette-classic"
+          },
+          "custom": {
+            "axisBorderShow": false,
+            "axisCenteredZero": false,
+            "axisColorMode": "text",
+            "axisLabel": "",
+            "axisPlacement": "auto",
+            "barAlignment": 0,
+            "drawStyle": "line",
+            "fillOpacity": 0,
+            "gradientMode": "none",
+            "hideFrom": {
+              "legend": false,
+              "tooltip": false,
+              "viz": false
+            },
+            "insertNulls": false,
+            "lineInterpolation": "linear",
+            "lineWidth": 1,
+            "pointSize": 5,
+            "scaleDistribution": {
+              "type": "linear"
+            },
+            "showPoints": "auto",
+            "spanNulls": false,
+            "stacking": {
+              "group": "A",
+              "mode": "none"
+            },
+            "thresholdsStyle": {
+              "mode": "off"
+            }
+          },
+          "mappings": [],
+          "thresholds": {
+            "mode": "absolute",
+            "steps": [
+              {
+                "color": "green",
+                "value": null
+              },
+              {
+                "color": "red",
+                "value": 80
+              }
+            ]
+          }
+        },
+        "overrides": []
+      },
+      "gridPos": {
+        "h": 5,
+        "w": 3,
+        "x": 0,
+        "y": 31
+      },
+      "id": 12,
+      "options": {
+        "legend": {
+          "calcs": [],
+          "displayMode": "list",
+          "placement": "bottom",
+          "showLegend": true
+        },
+        "tooltip": {
+          "mode": "single",
+          "sort": "none"
+        }
+      },
+      "pluginVersion": "10.2.2",
+      "targets": [
+        {
+          "datasource": {
+            "type": "influxdb",
+            "uid": "P951FEA4DE68E13C5"
+          },
+          "groupBy": [
+            {
+              "params": [
+                "$__interval"
+              ],
+              "type": "time"
+            },
+            {
+              "params": [
+                "null"
+              ],
+              "type": "fill"
+            }
+          ],
+          "measurement": "rtt",
+          "orderByTime": "ASC",
+          "policy": "default",
+          "refId": "A",
+          "resultFormat": "time_series",
+          "select": [
+            [
+              {
+                "params": [
+                  "rtt"
+                ],
+                "type": "field"
+              },
+              {
+                "params": [],
+                "type": "mean"
+              }
+            ]
+          ],
+          "tags": [
+            {
+              "key": "dst::tag",
+              "operator": "=",
+              "value": "google.com"
+            }
+          ]
+        }
+      ],
+      "title": "Influxdb pinger",
+      "type": "timeseries"
+    }
+  ],
+  "refresh": "",
+  "schemaVersion": 38,
+  "tags": [],
+  "templating": {
+    "list": []
+  },
+  "time": {
+    "from": "now-5m",
+    "to": "now"
+  },
+  "timepicker": {},
+  "timezone": "",
+  "title": "Main",
+  "uid": "f7e0d7c7-cc44-43ea-8b59-a97b11d222f3",
+  "version": 2,
+  "weekStart": ""
+}
\ No newline at end of file

changed: [kovalart-3]

TASK [grafana : Syslog dashboard provisioning] *********************************
--- before
+++ after: /home/parrot/ica0002/roles/grafana/files/syslog-dashboard.json
@@ -0,0 +1,1043 @@
+{
+  "annotations": {
+    "list": [
+      {
+        "builtIn": 1,
+        "datasource": {
+          "type": "datasource",
+          "uid": "grafana"
+        },
+        "enable": true,
+        "hide": true,
+        "iconColor": "rgba(0, 211, 255, 1)",
+        "name": "Annotations & Alerts",
+        "type": "dashboard"
+      }
+    ]
+  },
+  "description": "Telegraf / InfluxDB / Grafana as syslog receiver",
+  "editable": true,
+  "fiscalYearStartMonth": 0,
+  "gnetId": 12433,
+  "graphTooltip": 0,
+  "id": 3,
+  "links": [],
+  "liveNow": false,
+  "panels": [
+    {
+      "aliasColors": {},
+      "bars": true,
+      "dashLength": 10,
+      "dashes": false,
+      "datasource": {
+        "type": "influxdb",
+        "uid": "PC61D9CAFA4D33E15"
+      },
+      "decimals": 0,
+      "fill": 1,
+      "fillGradient": 0,
+      "gridPos": {
+        "h": 7,
+        "w": 24,
+        "x": 0,
+        "y": 0
+      },
+      "hiddenSeries": false,
+      "id": 10,
+      "interval": "",
+      "legend": {
+        "alignAsTable": true,
+        "avg": true,
+        "current": false,
+        "max": true,
+        "min": false,
+        "rightSide": true,
+        "show": true,
+        "total": true,
+        "values": true
+      },
+      "lines": false,
+      "linewidth": 1,
+      "links": [],
+      "nullPointMode": "connected",
+      "options": {
+        "alertThreshold": true
+      },
+      "percentage": false,
+      "pluginVersion": "10.2.2",
+      "pointradius": 2,
+      "points": false,
+      "renderer": "flot",
+      "seriesOverrides": [
+        {
+          "alias": "Info",
+          "color": "rgb(80, 80, 80)",
+          "stack": "A"
+        },
+        {
+          "alias": "Notice",
+          "color": "rgb(182, 182, 182)",
+          "stack": "A"
+        },
+        {
+          "alias": "Warning",
+          "color": "#E0B400",
+          "stack": "A"
+        },
+        {
+          "alias": "Error",
+          "color": "#FF780A",
+          "stack": "A"
+        },
+        {
+          "alias": "Critical",
+          "color": "#E02F44",
+          "stack": "A"
+        },
+        {
+          "alias": "Alert",
+          "color": "#8F3BB8",
+          "stack": "A"
+        },
+        {
+          "alias": "Emergency",
+          "color": "#8F3BB8",
+          "stack": "A"
+        }
+      ],
+      "spaceLength": 10,
+      "stack": false,
+      "steppedLine": false,
+      "targets": [
+        {
+          "alias": "Info",
+          "datasource": {
+            "type": "influxdb",
+            "uid": "PC61D9CAFA4D33E15"
+          },
+          "groupBy": [
+            {
+              "params": [
+                "1m"
+              ],
+              "type": "time"
+            },
+            {
+              "params": [
+                "null"
+              ],
+              "type": "fill"
+            }
+          ],
+          "measurement": "syslog",
+          "orderByTime": "ASC",
+          "policy": "default",
+          "refId": "A",
+          "resultFormat": "time_series",
+          "select": [
+            [
+              {
+                "params": [
+                  "severity_code"
+                ],
+                "type": "field"
+              },
+              {
+                "params": [],
+                "type": "count"
+              }
+            ]
+          ],
+          "tags": [
+            {
+              "key": "severity",
+              "operator": "=",
+              "value": "info"
+            },
+            {
+              "condition": "AND",
+              "key": "hostname",
+              "operator": "=~",
+              "value": "/^$hostname$/"
+            },
+            {
+              "condition": "AND",
+              "key": "severity",
+              "operator": "=~",
+              "value": "/^$severity$/"
+            },
+            {
+              "condition": "AND",
+              "key": "appname",
+              "operator": "=~",
+              "value": "/^$appname$/"
+            },
+            {
+              "condition": "AND",
+              "key": "message",
+              "operator": "=~",
+              "value": "/$Query/"
+            }
+          ]
+        },
+        {
+          "alias": "Notice",
+          "datasource": {
+            "type": "influxdb",
+            "uid": "PC61D9CAFA4D33E15"
+          },
+          "groupBy": [
+            {
+              "params": [
+                "1m"
+              ],
+              "type": "time"
+            },
+            {
+              "params": [
+                "null"
+              ],
+              "type": "fill"
+            }
+          ],
+          "measurement": "syslog",
+          "orderByTime": "ASC",
+          "policy": "default",
+          "refId": "B",
+          "resultFormat": "time_series",
+          "select": [
+            [
+              {
+                "params": [
+                  "severity_code"
+                ],
+                "type": "field"
+              },
+              {
+                "params": [],
+                "type": "count"
+              }
+            ]
+          ],
+          "tags": [
+            {
+              "key": "severity",
+              "operator": "=",
+              "value": "notice"
+            },
+            {
+              "condition": "AND",
+              "key": "hostname",
+              "operator": "=~",
+              "value": "/^$hostname$/"
+            },
+            {
+              "condition": "AND",
+              "key": "severity",
+              "operator": "=~",
+              "value": "/^$severity$/"
+            },
+            {
+              "condition": "AND",
+              "key": "appname",
+              "operator": "=~",
+              "value": "/^$appname$/"
+            },
+            {
+              "condition": "AND",
+              "key": "message",
+              "operator": "=~",
+              "value": "/$Query/"
+            }
+          ]
+        },
+        {
+          "alias": "Warning",
+          "datasource": {
+            "type": "influxdb",
+            "uid": "PC61D9CAFA4D33E15"
+          },
+          "groupBy": [
+            {
+              "params": [
+                "1m"
+              ],
+              "type": "time"
+            },
+            {
+              "params": [
+                "null"
+              ],
+              "type": "fill"
+            }
+          ],
+          "measurement": "syslog",
+          "orderByTime": "ASC",
+          "policy": "default",
+          "refId": "D",
+          "resultFormat": "time_series",
+          "select": [
+            [
+              {
+                "params": [
+                  "severity_code"
+                ],
+                "type": "field"
+              },
+              {
+                "params": [],
+                "type": "count"
+              }
+            ]
+          ],
+          "tags": [
+            {
+              "key": "severity",
+              "operator": "=",
+              "value": "warning"
+            },
+            {
+              "condition": "AND",
+              "key": "hostname",
+              "operator": "=~",
+              "value": "/^$hostname$/"
+            },
+            {
+              "condition": "AND",
+              "key": "severity",
+              "operator": "=~",
+              "value": "/^$severity$/"
+            },
+            {
+              "condition": "AND",
+              "key": "appname",
+              "operator": "=~",
+              "value": "/^$appname$/"
+            },
+            {
+              "condition": "AND",
+              "key": "message",
+              "operator": "=~",
+              "value": "/$Query/"
+            }
+          ]
+        },
+        {
+          "alias": "Error",
+          "datasource": {
+            "type": "influxdb",
+            "uid": "PC61D9CAFA4D33E15"
+          },
+          "groupBy": [
+            {
+              "params": [
+                "1m"
+              ],
+              "type": "time"
+            },
+            {
+              "params": [
+                "null"
+              ],
+              "type": "fill"
+            }
+          ],
+          "measurement": "syslog",
+          "orderByTime": "ASC",
+          "policy": "default",
+          "refId": "C",
+          "resultFormat": "time_series",
+          "select": [
+            [
+              {
+                "params": [
+                  "severity_code"
+                ],
+                "type": "field"
+              },
+              {
+                "params": [],
+                "type": "count"
+              }
+            ]
+          ],
+          "tags": [
+            {
+              "key": "severity",
+              "operator": "=",
+              "value": "err"
+            },
+            {
+              "condition": "AND",
+              "key": "hostname",
+              "operator": "=~",
+              "value": "/^$hostname$/"
+            },
+            {
+              "condition": "AND",
+              "key": "severity",
+              "operator": "=~",
+              "value": "/^$severity$/"
+            },
+            {
+              "condition": "AND",
+              "key": "appname",
+              "operator": "=~",
+              "value": "/^$appname$/"
+            },
+            {
+              "condition": "AND",
+              "key": "message",
+              "operator": "=~",
+              "value": "/$Query/"
+            }
+          ]
+        },
+        {
+          "alias": "Critical",
+          "datasource": {
+            "type": "influxdb",
+            "uid": "PC61D9CAFA4D33E15"
+          },
+          "groupBy": [
+            {
+              "params": [
+                "1m"
+              ],
+              "type": "time"
+            },
+            {
+              "params": [
+                "null"
+              ],
+              "type": "fill"
+            }
+          ],
+          "measurement": "syslog",
+          "orderByTime": "ASC",
+          "policy": "default",
+          "refId": "E",
+          "resultFormat": "time_series",
+          "select": [
+            [
+              {
+                "params": [
+                  "severity_code"
+                ],
+                "type": "field"
+              },
+              {
+                "params": [],
+                "type": "count"
+              }
+            ]
+          ],
+          "tags": [
+            {
+              "key": "severity",
+              "operator": "=",
+              "value": "crit"
+            },
+            {
+              "condition": "AND",
+              "key": "hostname",
+              "operator": "=~",
+              "value": "/^$hostname$/"
+            },
+            {
+              "condition": "AND",
+              "key": "severity",
+              "operator": "=~",
+              "value": "/^$severity$/"
+            },
+            {
+              "condition": "AND",
+              "key": "appname",
+              "operator": "=~",
+              "value": "/^$appname$/"
+            },
+            {
+              "condition": "AND",
+              "key": "message",
+              "operator": "=~",
+              "value": "/$Query/"
+            }
+          ]
+        },
+        {
+          "alias": "Alert",
+          "datasource": {
+            "type": "influxdb",
+            "uid": "PC61D9CAFA4D33E15"
+          },
+          "groupBy": [
+            {
+              "params": [
+                "1m"
+              ],
+              "type": "time"
+            },
+            {
+              "params": [
+                "null"
+              ],
+              "type": "fill"
+            }
+          ],
+          "measurement": "syslog",
+          "orderByTime": "ASC",
+          "policy": "default",
+          "refId": "F",
+          "resultFormat": "time_series",
+          "select": [
+            [
+              {
+                "params": [
+                  "severity_code"
+                ],
+                "type": "field"
+              },
+              {
+                "params": [],
+                "type": "count"
+              }
+            ]
+          ],
+          "tags": [
+            {
+              "key": "severity",
+              "operator": "=",
+              "value": "alert"
+            },
+            {
+              "condition": "AND",
+              "key": "hostname",
+              "operator": "=~",
+              "value": "/^$hostname$/"
+            },
+            {
+              "condition": "AND",
+              "key": "severity",
+              "operator": "=~",
+              "value": "/^$severity$/"
+            },
+            {
+              "condition": "AND",
+              "key": "appname",
+              "operator": "=~",
+              "value": "/^$appname$/"
+            },
+            {
+              "condition": "AND",
+              "key": "message",
+              "operator": "=~",
+              "value": "/$Query/"
+            }
+          ]
+        },
+        {
+          "alias": "Emergency",
+          "datasource": {
+            "type": "influxdb",
+            "uid": "PC61D9CAFA4D33E15"
+          },
+          "groupBy": [
+            {
+              "params": [
+                "1m"
+              ],
+              "type": "time"
+            },
+            {
+              "params": [
+                "null"
+              ],
+              "type": "fill"
+            }
+          ],
+          "measurement": "syslog",
+          "orderByTime": "ASC",
+          "policy": "default",
+          "refId": "G",
+          "resultFormat": "time_series",
+          "select": [
+            [
+              {
+                "params": [
+                  "severity_code"
+                ],
+                "type": "field"
+              },
+              {
+                "params": [],
+                "type": "count"
+              }
+            ]
+          ],
+          "tags": [
+            {
+              "key": "severity",
+              "operator": "=",
+              "value": "emerg"
+            },
+            {
+              "condition": "AND",
+              "key": "hostname",
+              "operator": "=~",
+              "value": "/^$hostname$/"
+            },
+            {
+              "condition": "AND",
+              "key": "severity",
+              "operator": "=~",
+              "value": "/^$severity$/"
+            },
+            {
+              "condition": "AND",
+              "key": "appname",
+              "operator": "=~",
+              "value": "/^$appname$/"
+            },
+            {
+              "condition": "AND",
+              "key": "message",
+              "operator": "=~",
+              "value": "/$Query/"
+            }
+          ]
+        }
+      ],
+      "thresholds": [],
+      "timeRegions": [],
+      "title": "syslog count",
+      "tooltip": {
+        "shared": true,
+        "sort": 0,
+        "value_type": "individual"
+      },
+      "type": "graph",
+      "xaxis": {
+        "mode": "time",
+        "show": true,
+        "values": []
+      },
+      "yaxes": [
+        {
+          "decimals": 0,
+          "format": "none",
+          "label": "Messages / min",
+          "logBase": 1,
+          "show": true
+        },
+        {
+          "format": "short",
+          "logBase": 1,
+          "show": false
+        }
+      ],
+      "yaxis": {
+        "align": false
+      }
+    },
+    {
+      "datasource": {
+        "type": "influxdb",
+        "uid": "PC61D9CAFA4D33E15"
+      },
+      "description": "",
+      "fieldConfig": {
+        "defaults": {
+          "color": {
+            "mode": "thresholds"
+          },
+          "custom": {
+            "align": "left",
+            "cellOptions": {
+              "type": "auto"
+            },
+            "filterable": false,
+            "inspect": false
+          },
+          "mappings": [],
+          "thresholds": {
+            "mode": "absolute",
+            "steps": [
+              {
+                "color": "dark-purple",
+                "value": null
+              },
+              {
+                "color": "dark-red",
+                "value": 2
+              },
+              {
+                "color": "dark-orange",
+                "value": 3
+              },
+              {
+                "color": "dark-yellow",
+                "value": 4
+              },
+              {
+                "color": "rgb(150, 150, 150)",
+                "value": 5
+              },
+              {
+                "color": "rgb(51, 51, 51)",
+                "value": 6
+              },
+              {
+                "color": "rgb(5, 5, 5)",
+                "value": 7
+              }
+            ]
+          }
+        },
+        "overrides": [
+          {
+            "matcher": {
+              "id": "byName",
+              "options": "severity_code"
+            },
+            "properties": [
+              {
+                "id": "mappings",
+                "value": [
+                  {
+                    "options": {
+                      "0": {
+                        "text": "Emergency"
+                      },
+                      "1": {
+                        "text": "Alert"
+                      },
+                      "2": {
+                        "text": "Critical"
+                      },
+                      "3": {
+                        "text": "Error"
+                      },
+                      "4": {
+                        "text": "Warning"
+                      },
+                      "5": {
+                        "text": "Notice"
+                      },
+                      "6": {
+                        "text": "Info"
+                      },
+                      "7": {
+                        "text": "Debug"
+                      }
+                    },
+                    "type": "value"
+                  }
+                ]
+              },
+              {
+                "id": "custom.cellOptions",
+                "value": {
+                  "mode": "gradient",
+                  "type": "color-background"
+                }
+              },
+              {
+                "id": "custom.width",
+                "value": 119
+              }
+            ]
+          },
+          {
+            "matcher": {
+              "id": "byName",
+              "options": "Time"
+            },
+            "properties": [
+              {
+                "id": "custom.width",
+                "value": 163
+              }
+            ]
+          },
+          {
+            "matcher": {
+              "id": "byName",
+              "options": "hostname"
+            },
+            "properties": [
+              {
+                "id": "custom.width",
+                "value": 194
+              }
+            ]
+          },
+          {
+            "matcher": {
+              "id": "byName",
+              "options": "appname"
+            },
+            "properties": [
+              {
+                "id": "custom.width",
+                "value": 264
+              }
+            ]
+          }
+        ]
+      },
+      "gridPos": {
+        "h": 24,
+        "w": 24,
+        "x": 0,
+        "y": 7
+      },
+      "id": 12,
+      "options": {
+        "cellHeight": "sm",
+        "footer": {
+          "countRows": false,
+          "fields": "",
+          "reducer": [
+            "sum"
+          ],
+          "show": false
+        },
+        "showHeader": true,
+        "sortBy": [
+          {
+            "desc": true,
+            "displayName": "Time"
+          }
+        ]
+      },
+      "pluginVersion": "10.2.2",
+      "targets": [
+        {
+          "datasource": {
+            "type": "influxdb",
+            "uid": "PC61D9CAFA4D33E15"
+          },
+          "groupBy": [
+            {
+              "params": [
+                "hostname"
+              ],
+              "type": "tag"
+            },
+            {
+              "params": [
+                "appname"
+              ],
+              "type": "tag"
+            }
+          ],
+          "measurement": "syslog",
+          "orderByTime": "ASC",
+          "policy": "default",
+          "refId": "A",
+          "resultFormat": "table",
+          "select": [
+            [
+              {
+                "params": [
+                  "severity_code"
+                ],
+                "type": "field"
+              }
+            ],
+            [
+              {
+                "params": [
+                  "message"
+                ],
+                "type": "field"
+              }
+            ]
+          ],
+          "tags": [
+            {
+              "key": "hostname",
+              "operator": "=~",
+              "value": "/^$hostname$/"
+            },
+            {
+              "condition": "AND",
+              "key": "appname",
+              "operator": "=~",
+              "value": "/^$appname$/"
+            },
+            {
+              "condition": "AND",
+              "key": "severity",
+              "operator": "=~",
+              "value": "/^$severity$/"
+            },
+            {
+              "condition": "AND",
+              "key": "message",
+              "operator": "=~",
+              "value": "/$Query/"
+            }
+          ]
+        }
+      ],
+      "title": "Syslog Messages",
+      "type": "table"
+    }
+  ],
+  "refresh": "5s",
+  "schemaVersion": 38,
+  "tags": [],
+  "templating": {
+    "list": [
+      {
+        "allValue": "",
+        "current": {
+          "selected": true,
+          "text": [
+            "All"
+          ],
+          "value": [
+            "$__all"
+          ]
+        },
+        "datasource": {
+          "type": "influxdb",
+          "uid": "PC61D9CAFA4D33E15"
+        },
+        "definition": "SHOW TAG VALUES FROM syslog WITH KEY=appname",
+        "hide": 0,
+        "includeAll": true,
+        "label": "Appname",
+        "multi": true,
+        "name": "appname",
+        "options": [],
+        "query": "SHOW TAG VALUES FROM syslog WITH KEY=appname",
+        "refresh": 2,
+        "regex": "",
+        "skipUrlSync": false,
+        "sort": 1,
+        "tagValuesQuery": "",
+        "tagsQuery": "",
+        "type": "query",
+        "useTags": false
+      },
+      {
+        "allValue": "",
+        "current": {
+          "selected": true,
+          "text": [
+            "All"
+          ],
+          "value": [
+            "$__all"
+          ]
+        },
+        "datasource": {
+          "type": "influxdb",
+          "uid": "PC61D9CAFA4D33E15"
+        },
+        "definition": "SHOW TAG VALUES FROM syslog WITH KEY=hostname",
+        "hide": 0,
+        "includeAll": true,
+        "label": "Hostname",
+        "multi": true,
+        "name": "hostname",
+        "options": [],
+        "query": "SHOW TAG VALUES FROM syslog WITH KEY=hostname",
+        "refresh": 2,
+        "regex": "",
+        "skipUrlSync": false,
+        "sort": 1,
+        "tagValuesQuery": "",
+        "tagsQuery": "",
+        "type": "query",
+        "useTags": false
+      },
+      {
+        "allValue": "",
+        "current": {
+          "selected": true,
+          "text": [
+            "notice",
+            "warning"
+          ],
+          "value": [
+            "notice",
+            "warning"
+          ]
+        },
+        "datasource": {
+          "type": "influxdb",
+          "uid": "PC61D9CAFA4D33E15"
+        },
+        "definition": "SHOW TAG VALUES FROM syslog WITH KEY=severity",
+        "hide": 0,
+        "includeAll": true,
+        "label": "Severity",
+        "multi": true,
+        "name": "severity",
+        "options": [],
+        "query": "SHOW TAG VALUES FROM syslog WITH KEY=severity",
+        "refresh": 2,
+        "regex": "",
+        "skipUrlSync": false,
+        "sort": 0,
+        "tagValuesQuery": "",
+        "tagsQuery": "",
+        "type": "query",
+        "useTags": false
+      },
+      {
+        "current": {
+          "selected": false,
+          "text": "",
+          "value": ""
+        },
+        "description": "Querystring",
+        "hide": 0,
+        "label": "MessageQuery",
+        "name": "Query",
+        "options": [
+          {
+            "selected": true,
+            "text": "",
+            "value": ""
+          }
+        ],
+        "query": "",
+        "skipUrlSync": false,
+        "type": "textbox"
+      }
+    ]
+  },
+  "time": {
+    "from": "now-1h",
+    "to": "now"
+  },
+  "timepicker": {
+    "refresh_intervals": [
+      "5s",
+      " 10s",
+      " 30s",
+      " 1m",
+      " 5m"
+    ],
+    "time_options": [
+      "5m",
+      "15m",
+      "1h",
+      "6h",
+      "12h",
+      "24h",
+      "2d",
+      "7d",
+      "30d"
+    ]
+  },
+  "timezone": "",
+  "title": "Syslog",
+  "uid": "TIYeHqRgZ",
+  "version": 1,
+  "weekStart": ""
+}
\ No newline at end of file

changed: [kovalart-3]

TASK [grafana : MySQL dashboard provisioning] **********************************
--- before
+++ after: /home/parrot/ica0002/roles/grafana/files/mysql.json
@@ -0,0 +1,474 @@
+{
+  "annotations": {
+    "list": [
+      {
+        "builtIn": 1,
+        "datasource": {
+          "type": "grafana",
+          "uid": "-- Grafana --"
+        },
+        "enable": true,
+        "hide": true,
+        "iconColor": "rgba(0, 211, 255, 1)",
+        "name": "Annotations & Alerts",
+        "type": "dashboard"
+      }
+    ]
+  },
+  "editable": true,
+  "fiscalYearStartMonth": 0,
+  "graphTooltip": 0,
+  "id": 2,
+  "links": [],
+  "liveNow": false,
+  "panels": [
+    {
+      "datasource": {
+        "type": "prometheus",
+        "uid": "PBFA97CFB590B2093"
+      },
+      "fieldConfig": {
+        "defaults": {
+          "color": {
+            "mode": "palette-classic"
+          },
+          "custom": {
+            "axisBorderShow": false,
+            "axisCenteredZero": false,
+            "axisColorMode": "text",
+            "axisLabel": "",
+            "axisPlacement": "auto",
+            "barAlignment": 0,
+            "drawStyle": "line",
+            "fillOpacity": 0,
+            "gradientMode": "none",
+            "hideFrom": {
+              "legend": false,
+              "tooltip": false,
+              "viz": false
+            },
+            "insertNulls": false,
+            "lineInterpolation": "linear",
+            "lineWidth": 1,
+            "pointSize": 5,
+            "scaleDistribution": {
+              "type": "linear"
+            },
+            "showPoints": "auto",
+            "spanNulls": false,
+            "stacking": {
+              "group": "A",
+              "mode": "none"
+            },
+            "thresholdsStyle": {
+              "mode": "off"
+            }
+          },
+          "mappings": [],
+          "thresholds": {
+            "mode": "absolute",
+            "steps": [
+              {
+                "color": "green",
+                "value": null
+              },
+              {
+                "color": "red",
+                "value": 80
+              }
+            ]
+          }
+        },
+        "overrides": []
+      },
+      "gridPos": {
+        "h": 8,
+        "w": 8,
+        "x": 0,
+        "y": 0
+      },
+      "id": 5,
+      "options": {
+        "legend": {
+          "calcs": [],
+          "displayMode": "list",
+          "placement": "bottom",
+          "showLegend": true
+        },
+        "tooltip": {
+          "mode": "single",
+          "sort": "none"
+        }
+      },
+      "targets": [
+        {
+          "datasource": {
+            "type": "prometheus",
+            "uid": "PBFA97CFB590B2093"
+          },
+          "editorMode": "code",
+          "expr": "mysql_slave_status_slave_sql_running",
+          "instant": false,
+          "legendFormat": "__auto",
+          "range": true,
+          "refId": "A"
+        }
+      ],
+      "title": "Slave Running",
+      "type": "timeseries"
+    },
+    {
+      "datasource": {
+        "type": "prometheus",
+        "uid": "PBFA97CFB590B2093"
+      },
+      "fieldConfig": {
+        "defaults": {
+          "color": {
+            "mode": "palette-classic"
+          },
+          "custom": {
+            "axisBorderShow": false,
+            "axisCenteredZero": false,
+            "axisColorMode": "text",
+            "axisLabel": "",
+            "axisPlacement": "auto",
+            "barAlignment": 0,
+            "drawStyle": "line",
+            "fillOpacity": 0,
+            "gradientMode": "none",
+            "hideFrom": {
+              "legend": false,
+              "tooltip": false,
+              "viz": false
+            },
+            "insertNulls": false,
+            "lineInterpolation": "linear",
+            "lineWidth": 1,
+            "pointSize": 5,
+            "scaleDistribution": {
+              "type": "linear"
+            },
+            "showPoints": "auto",
+            "spanNulls": false,
+            "stacking": {
+              "group": "A",
+              "mode": "none"
+            },
+            "thresholdsStyle": {
+              "mode": "off"
+            }
+          },
+          "mappings": [],
+          "thresholds": {
+            "mode": "absolute",
+            "steps": [
+              {
+                "color": "green",
+                "value": null
+              },
+              {
+                "color": "red",
+                "value": 80
+              }
+            ]
+          }
+        },
+        "overrides": []
+      },
+      "gridPos": {
+        "h": 8,
+        "w": 8,
+        "x": 8,
+        "y": 0
+      },
+      "id": 4,
+      "options": {
+        "legend": {
+          "calcs": [],
+          "displayMode": "list",
+          "placement": "bottom",
+          "showLegend": true
+        },
+        "tooltip": {
+          "mode": "single",
+          "sort": "none"
+        }
+      },
+      "targets": [
+        {
+          "datasource": {
+            "type": "prometheus",
+            "uid": "PBFA97CFB590B2093"
+          },
+          "editorMode": "code",
+          "expr": "mysql_slave_status_slave_io_running",
+          "instant": false,
+          "legendFormat": "__auto",
+          "range": true,
+          "refId": "A"
+        }
+      ],
+      "title": "IO Threads",
+      "type": "timeseries"
+    },
+    {
+      "datasource": {
+        "type": "prometheus",
+        "uid": "PBFA97CFB590B2093"
+      },
+      "fieldConfig": {
+        "defaults": {
+          "color": {
+            "mode": "palette-classic"
+          },
+          "custom": {
+            "axisBorderShow": false,
+            "axisCenteredZero": false,
+            "axisColorMode": "text",
+            "axisLabel": "",
+            "axisPlacement": "auto",
+            "barAlignment": 0,
+            "drawStyle": "line",
+            "fillOpacity": 0,
+            "gradientMode": "none",
+            "hideFrom": {
+              "legend": false,
+              "tooltip": false,
+              "viz": false
+            },
+            "insertNulls": false,
+            "lineInterpolation": "linear",
+            "lineWidth": 1,
+            "pointSize": 5,
+            "scaleDistribution": {
+              "type": "linear"
+            },
+            "showPoints": "auto",
+            "spanNulls": false,
+            "stacking": {
+              "group": "A",
+              "mode": "none"
+            },
+            "thresholdsStyle": {
+              "mode": "off"
+            }
+          },
+          "mappings": [],
+          "thresholds": {
+            "mode": "absolute",
+            "steps": [
+              {
+                "color": "green",
+                "value": null
+              },
+              {
+                "color": "red",
+                "value": 80
+              }
+            ]
+          }
+        },
+        "overrides": []
+      },
+      "gridPos": {
+        "h": 8,
+        "w": 8,
+        "x": 0,
+        "y": 8
+      },
+      "id": 3,
+      "options": {
+        "legend": {
+          "calcs": [],
+          "displayMode": "list",
+          "placement": "bottom",
+          "showLegend": true
+        },
+        "tooltip": {
+          "mode": "single",
+          "sort": "none"
+        }
+      },
+      "targets": [
+        {
+          "datasource": {
+            "type": "prometheus",
+            "uid": "PBFA97CFB590B2093"
+          },
+          "editorMode": "code",
+          "expr": "mysql_slave_status_slave_io_running",
+          "instant": false,
+          "legendFormat": "__auto",
+          "range": true,
+          "refId": "A"
+        },
+        {
+          "datasource": {
+            "type": "prometheus",
+            "uid": "PBFA97CFB590B2093"
+          },
+          "editorMode": "code",
+          "expr": "mysql_slave_status_slave_sql_running",
+          "hide": false,
+          "instant": false,
+          "legendFormat": "__auto",
+          "range": true,
+          "refId": "B"
+        }
+      ],
+      "title": "MySQL Replication Threads",
+      "type": "timeseries"
+    },
+    {
+      "datasource": {
+        "type": "prometheus",
+        "uid": "PBFA97CFB590B2093"
+      },
+      "fieldConfig": {
+        "defaults": {
+          "color": {
+            "mode": "thresholds"
+          },
+          "mappings": [],
+          "thresholds": {
+            "mode": "absolute",
+            "steps": [
+              {
+                "color": "orange",
+                "value": null
+              },
+              {
+                "color": "green",
+                "value": 1
+              }
+            ]
+          }
+        },
+        "overrides": []
+      },
+      "gridPos": {
+        "h": 8,
+        "w": 8,
+        "x": 0,
+        "y": 16
+      },
+      "id": 2,
+      "options": {
+        "colorMode": "value",
+        "graphMode": "area",
+        "justifyMode": "auto",
+        "orientation": "auto",
+        "reduceOptions": {
+          "calcs": [
+            "lastNotNull"
+          ],
+          "fields": "",
+          "values": false
+        },
+        "textMode": "auto",
+        "wideLayout": true
+      },
+      "pluginVersion": "10.2.2",
+      "targets": [
+        {
+          "datasource": {
+            "type": "prometheus",
+            "uid": "PBFA97CFB590B2093"
+          },
+          "editorMode": "code",
+          "expr": "mysql_global_variables_read_only",
+          "instant": false,
+          "legendFormat": "__auto",
+          "range": true,
+          "refId": "A"
+        }
+      ],
+      "title": "MySQL Read Only",
+      "type": "stat"
+    },
+    {
+      "datasource": {
+        "type": "prometheus",
+        "uid": "PBFA97CFB590B2093"
+      },
+      "fieldConfig": {
+        "defaults": {
+          "color": {
+            "mode": "thresholds"
+          },
+          "mappings": [],
+          "thresholds": {
+            "mode": "absolute",
+            "steps": [
+              {
+                "color": "green",
+                "value": null
+              },
+              {
+                "color": "red",
+                "value": 80
+              }
+            ]
+          }
+        },
+        "overrides": []
+      },
+      "gridPos": {
+        "h": 7,
+        "w": 8,
+        "x": 0,
+        "y": 24
+      },
+      "id": 1,
+      "options": {
+        "colorMode": "value",
+        "graphMode": "area",
+        "justifyMode": "auto",
+        "orientation": "auto",
+        "reduceOptions": {
+          "calcs": [
+            "lastNotNull"
+          ],
+          "fields": "",
+          "values": false
+        },
+        "textMode": "auto",
+        "wideLayout": true
+      },
+      "pluginVersion": "10.2.2",
+      "targets": [
+        {
+          "datasource": {
+            "type": "prometheus",
+            "uid": "PBFA97CFB590B2093"
+          },
+          "editorMode": "code",
+          "expr": "mysql_global_variables_server_id",
+          "instant": false,
+          "legendFormat": "__auto",
+          "range": true,
+          "refId": "A"
+        }
+      ],
+      "title": "MySQL ID",
+      "type": "stat"
+    }
+  ],
+  "refresh": false,
+  "schemaVersion": 38,
+  "tags": [],
+  "templating": {
+    "list": []
+  },
+  "time": {
+    "from": "2023-12-17T11:05:47.926Z",
+    "to": "2023-12-17T11:35:58.922Z"
+  },
+  "timepicker": {},
+  "timezone": "",
+  "title": "MySQL dashboard",
+  "uid": "bbde778b-b93f-4b3d-af3e-bf5e6557f4aa",
+  "version": 1,
+  "weekStart": ""
+}
\ No newline at end of file

changed: [kovalart-3]

TASK [grafana : Pull Grafana Docker image] *************************************
changed: [kovalart-3]

TASK [grafana : Start Grafana container] ***************************************
--- before
+++ after
@@ -1,4 +1,4 @@
 {
-    "exists": false,
-    "running": false
+    "exists": true,
+    "running": true
 }

changed: [kovalart-3]

TASK [grafana : Create CNAME record for Grafana] *******************************
changed: [kovalart-3]

RUNNING HANDLER [grafana : restart grafana] ************************************
--- before
+++ after
@@ -1,4 +1,4 @@
 {
-    "restarted": false,
+    "restarted": true,
     "running": true
 }

changed: [kovalart-3]

PLAY [Agama tasks] *************************************************************

TASK [Gathering Facts] *********************************************************
ok: [kovalart-2]
ok: [kovalart-1]

TASK [agama : Agama directory] *************************************************
--- before
+++ after
@@ -1,4 +1,4 @@
 {
     "path": "/opt/agama",
-    "state": "absent"
+    "state": "directory"
 }

changed: [kovalart-1]
--- before
+++ after
@@ -1,4 +1,4 @@
 {
     "path": "/opt/agama",
-    "state": "absent"
+    "state": "directory"
 }

changed: [kovalart-2]

TASK [agama : Configure AGAMA application] *************************************
changed: [kovalart-1]
changed: [kovalart-2]

TASK [agama : Download agama.py] ***********************************************
changed: [kovalart-2]
changed: [kovalart-1]

TASK [agama : Download Dockerfile] *********************************************
changed: [kovalart-2]
changed: [kovalart-1]

TASK [agama : Build agama image] ***********************************************
changed: [kovalart-2]
changed: [kovalart-1]

TASK [agama : Create Agama Containers] *****************************************
--- before
+++ after
@@ -1,4 +1,4 @@
 {
-    "exists": false,
-    "running": false
+    "exists": true,
+    "running": true
 }

changed: [kovalart-2] => (item=1)
--- before
+++ after
@@ -1,4 +1,4 @@
 {
-    "exists": false,
-    "running": false
+    "exists": true,
+    "running": true
 }

changed: [kovalart-1] => (item=1)

TASK [agama : Gather information about all running containers] *****************
ok: [kovalart-2]
ok: [kovalart-1]

TASK [agama : Remove extra Agama Containers] ***********************************
skipping: [kovalart-1] => (item=agama1) 
skipping: [kovalart-2] => (item=agama1) 

TASK [agama : Create CNAME records for Agama instances] ************************
changed: [kovalart-2] => (item={'service': 'www-1', 'target': 'kovalart-1'})
ok: [kovalart-1] => (item={'service': 'www-1', 'target': 'kovalart-1'})
ok: [kovalart-2] => (item={'service': 'www-2', 'target': 'kovalart-2'})
changed: [kovalart-1] => (item={'service': 'www-2', 'target': 'kovalart-2'})

PLAY [Influxdb tasks] **********************************************************

TASK [Gathering Facts] *********************************************************
ok: [kovalart-3]

TASK [influxdb : Install influxdb] *********************************************
changed: [kovalart-3]

TASK [influxdb : Dpkg InfluxDB] ************************************************
Selecting previously unselected package influxdb.
(Reading database ... 66686 files and directories currently installed.)
Preparing to unpack /tmp/influxdb_1.8.10_amd64.deb ...
Unpacking influxdb (1.8.10-1) ...
Setting up influxdb (1.8.10-1) ...
Processing triggers for man-db (2.9.1-1) ...
changed: [kovalart-3]

TASK [influxdb : Change the config for Influxdb] *******************************
--- before: /etc/influxdb/influxdb.conf
+++ after: /home/parrot/ica0002/roles/influxdb/files/influx.conf
@@ -65,7 +65,7 @@
 
   # Whether queries should be logged before execution. Very useful for troubleshooting, but will
   # log any sensitive data contained within a query.
-  # query-log-enabled = true
+  query-log-enabled = false
 
   # Provides more error checking. For example, SELECT INTO will err out inserting an +/-Inf value
   # rather than silently failing.
@@ -266,7 +266,7 @@
   # realm = "InfluxDB"
 
   # Determines whether HTTP request logging is enabled.
-  # log-enabled = true
+  log-enabled = false
 
   # Determines whether the HTTP write request logs should be suppressed when the log is enabled.
   # suppress-write-log = false
@@ -286,7 +286,7 @@
   # access-log-status-filters = []
 
   # Determines whether detailed write logging is enabled.
-  # write-tracing = false
+  write-tracing = false
 
   # Determines whether the pprof endpoint is enabled.  This endpoint is used for
   # troubleshooting and monitoring.

changed: [kovalart-3]

TASK [influxdb : Ensure InfluxDB is enabled and running] ***********************
changed: [kovalart-3]

TASK [influxdb : Download and install Telegraf] ********************************
changed: [kovalart-3]

TASK [influxdb : Install Telegraf] *********************************************
Selecting previously unselected package telegraf.
(Reading database ... 66711 files and directories currently installed.)
Preparing to unpack /tmp/telegraf.deb ...
Unpacking telegraf (1.28.2-1) ...
Setting up telegraf (1.28.2-1) ...
changed: [kovalart-3]

TASK [influxdb : Configure Telegraf for syslog input and InfluxDB output] ******
diff skipped: destination file size is greater than 104448
changed: [kovalart-3]

TASK [influxdb : Restart Telegraf service] *************************************
changed: [kovalart-3]

TASK [influxdb : Download InfluxDB Stats Exporter binary] **********************
changed: [kovalart-3]

TASK [influxdb : Create systemd service for InfluxDB Stats Exporter] ***********
--- before
+++ after: /home/parrot/ica0002/roles/influxdb/files/influxdb.service.conf
@@ -0,0 +1,11 @@
+[Unit]
+Description=InfluxDB Stats Exporter
+After=network.target
+
+[Service]
+User=prometheus
+ExecStart=/usr/local/bin/influxdb_stats_exporter
+Restart=always
+
+[Install]
+WantedBy=default.target
\ No newline at end of file

changed: [kovalart-3]

TASK [influxdb : Ensure that influxdb directory exists] ************************
--- before
+++ after
@@ -1,6 +1,6 @@
 {
-    "group": 0,
-    "owner": 0,
+    "group": 34,
+    "owner": 34,
     "path": "/home/backup/influxdb",
-    "state": "absent"
+    "state": "directory"
 }

changed: [kovalart-3]

TASK [influxdb : Ensure user backup can create InfluxDB dumps without errors] ***
ok: [kovalart-3]

TASK [influxdb : Fail if the dump command did not execute successfully] ********
skipping: [kovalart-3]

TASK [influxdb : InfluxDB backup cron job] *************************************
--- before
+++ after: /home/parrot/.ansible/tmp/ansible-local-267406kvomjqnj/tmp73rltxqo/influxdb_cron.j2
@@ -0,0 +1,5 @@
+
+19 19 * * 0-6 backup rm -rf /home/backup/influxdb/*
+20 19 * * 0-6 backup influxd backup -portable -database telegraf /home/backup/influxdb
+21 19 * * 0-6 backup duplicity --no-encryption full /home/backup/influxdb/ rsync://kovalArt@backup.infocare.io:/influxdb
+22 19 * * 0-6 backup  duplicity --no-encryption incremental /home/backup/influxdb rsync://kovalArt@backup.infocare.io:/influxdb

changed: [kovalart-3]

TASK [influxdb : Create CNAME record for Influxdb] *****************************
changed: [kovalart-3]

TASK [pinger : Create "pinger" user] *******************************************
changed: [kovalart-3]

TASK [pinger : Install fping] **************************************************
The following NEW packages will be installed:
  fping
0 upgraded, 1 newly installed, 0 to remove and 261 not upgraded.
changed: [kovalart-3]

TASK [pinger : Create a directory /etc/pinger] *********************************
--- before
+++ after
@@ -1,4 +1,4 @@
 {
     "path": "/etc/pinger",
-    "state": "absent"
+    "state": "directory"
 }

changed: [kovalart-3]

TASK [pinger : Copy service to destination] ************************************
--- before
+++ after: /home/parrot/ica0002/roles/pinger/files/pinger.sh
@@ -0,0 +1,29 @@
+#!/bin/bash
+
+# Script contains several (more than 1) security issues.
+# Find them and fix them to get bonus on exam.
+# Problem example: SQL injection.
+
+for t in database_url database_name targets; do
+  if ! grep -q "^${t}=" /etc/pinger/pinger.conf; then
+    logger "$0 Failed to get $t from config"
+    exit 1
+  fi
+done
+
+which fping > /dev/null || (logger "fping not found"; exit 1)
+
+db_url=$(grep "^database_url=" /etc/pinger/pinger.conf | sed 's/^.*=//')
+db_name=$(grep "^database_name=" /etc/pinger/pinger.conf | sed 's/^.*=//')
+targets=$(grep "^targets=" /etc/pinger/pinger.conf | sed 's/^.*=//' | sed 's/\(,\|;\)/ /g')
+
+curl -i -XPOST "${db_url}/query" --data-urlencode "q=CREATE DATABASE $db_name" 1>/dev/null 2>/dev/null
+
+while true; do
+  result=$(fping -C1 -q "$targets" 2>&1 | awk '{print "rtt,dst="$1" rtt="$3}')
+  curl -i -XPOST "${db_url}/write?db=$db_name" --data-binary "$result" 1>/dev/null 2>/dev/null
+ sleep 1
+done
+
+#1 security issue - fping did not use user input sanitization and got $targets without quotes (""). This could lead to command injection;
+#2 security issue - 
\ No newline at end of file

changed: [kovalart-3]

TASK [pinger : Copy Pinger service file] ***************************************
--- before
+++ after: /home/parrot/ica0002/roles/pinger/files/pinger.service
@@ -0,0 +1,10 @@
+[Unit]
+Description=Pinger service
+After=network-online.target
+
+[Service]
+User=pinger
+ExecStart=/usr/local/bin/pinger
+
+[Install]
+WantedBy=multi-user.target

changed: [kovalart-3]

TASK [pinger : Copy Pinger.conf file] ******************************************
--- before
+++ after: /home/parrot/ica0002/roles/pinger/files/pinger.conf
@@ -0,0 +1,3 @@
+database_url=http://influxdb.infocare.io:8086
+database_name=pinger
+targets=google.com, fd.com, 8.8.8.8

changed: [kovalart-3]

TASK [pinger : Restart daemon] *************************************************
ok: [kovalart-3]

TASK [pinger : Start pinger] ***************************************************
changed: [kovalart-3]

RUNNING HANDLER [influxdb : restart influxdb-stats-exporter] *******************
changed: [kovalart-3]

RUNNING HANDLER [influxdb : restart influxdb] **********************************
changed: [kovalart-3]

RUNNING HANDLER [influxdb : restart telegraf] **********************************
changed: [kovalart-3]

RUNNING HANDLER [pinger : restart pinger] **************************************
changed: [kovalart-3]

PLAY [Haproxy tasks] ***********************************************************

TASK [Gathering Facts] *********************************************************
ok: [kovalart-2]
ok: [kovalart-1]

TASK [haproxy : Install haproxy] ***********************************************
The following additional packages will be installed:
  liblua5.3-0
Suggested packages:
  vim-haproxy haproxy-doc
The following NEW packages will be installed:
  haproxy liblua5.3-0
0 upgraded, 2 newly installed, 0 to remove and 261 not upgraded.
changed: [kovalart-1]
The following additional packages will be installed:
  liblua5.3-0
Suggested packages:
  vim-haproxy haproxy-doc
The following NEW packages will be installed:
  haproxy liblua5.3-0
0 upgraded, 2 newly installed, 0 to remove and 261 not upgraded.
changed: [kovalart-2]

TASK [haproxy : Copy the Haproxy config] ***************************************
--- before: /etc/haproxy/haproxy.cfg
+++ after: /home/parrot/.ansible/tmp/ansible-local-267406kvomjqnj/tmpe6b3cw_9/haproxy.cnf.j2
@@ -7,15 +7,6 @@
 	user haproxy
 	group haproxy
 	daemon
-
-	# Default SSL material locations
-	ca-base /etc/ssl/certs
-	crt-base /etc/ssl/private
-
-	# See: https://ssl-config.mozilla.org/#server=haproxy&server-version=2.0.3&config=intermediate
-        ssl-default-bind-ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384
-        ssl-default-bind-ciphersuites TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256
-        ssl-default-bind-options ssl-min-ver TLSv1.2 no-tls-tickets
 
 defaults
 	log	global
@@ -32,3 +23,18 @@
 	errorfile 502 /etc/haproxy/errors/502.http
 	errorfile 503 /etc/haproxy/errors/503.http
 	errorfile 504 /etc/haproxy/errors/504.http
+
+listen my_ha_frontend
+    bind :88
+    
+            server docker1 kovalart-1:8001 check
+                server docker2 kovalart-2:8001 check
+    
+
+listen stats
+    bind :9188
+    mode http
+    stats enable
+    stats uri /metrics
+    stats realm HAProxy\ Statistics
+

changed: [kovalart-2]
--- before: /etc/haproxy/haproxy.cfg
+++ after: /home/parrot/.ansible/tmp/ansible-local-267406kvomjqnj/tmptlu21ezl/haproxy.cnf.j2
@@ -7,15 +7,6 @@
 	user haproxy
 	group haproxy
 	daemon
-
-	# Default SSL material locations
-	ca-base /etc/ssl/certs
-	crt-base /etc/ssl/private
-
-	# See: https://ssl-config.mozilla.org/#server=haproxy&server-version=2.0.3&config=intermediate
-        ssl-default-bind-ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384
-        ssl-default-bind-ciphersuites TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256
-        ssl-default-bind-options ssl-min-ver TLSv1.2 no-tls-tickets
 
 defaults
 	log	global
@@ -32,3 +23,18 @@
 	errorfile 502 /etc/haproxy/errors/502.http
 	errorfile 503 /etc/haproxy/errors/503.http
 	errorfile 504 /etc/haproxy/errors/504.http
+
+listen my_ha_frontend
+    bind :88
+    
+            server docker1 kovalart-1:8001 check
+                server docker2 kovalart-2:8001 check
+    
+
+listen stats
+    bind :9188
+    mode http
+    stats enable
+    stats uri /metrics
+    stats realm HAProxy\ Statistics
+

changed: [kovalart-1]

TASK [haproxy : Start the service] *********************************************
ok: [kovalart-1] => (item=haproxy)
ok: [kovalart-2] => (item=haproxy)

TASK [haproxy : Install prometheus-haproxy-exporter using APT] *****************
The following NEW packages will be installed:
  prometheus-haproxy-exporter
0 upgraded, 1 newly installed, 0 to remove and 261 not upgraded.
changed: [kovalart-2]
The following NEW packages will be installed:
  prometheus-haproxy-exporter
0 upgraded, 1 newly installed, 0 to remove and 261 not upgraded.
changed: [kovalart-1]

TASK [haproxy : Configure haproxy.scrape-uri in /etc/default/prometheus-haproxy-exporter] ***
--- before: /etc/default/prometheus-haproxy-exporter
+++ after: /home/parrot/.ansible/tmp/ansible-local-267406kvomjqnj/tmpq2tmg0t5/prometheus_haproxy
@@ -1,35 +1 @@
-# Set the command-line arguments to pass to the server.
-# Due to shell scaping, to pass backslashes for regexes, you need to double
-# them (\\d for \d). If running under systemd, you need to double them again
-# (\\\\d to mean \d), and escape newlines too.
-ARGS=""
-
-# Prometheus-haproxy-exporter supports the following options:
-#
-#  --web.listen-address=":9101"
-#    Address to listen on for web interface and telemetry.
-#  --web.telemetry-path="/metrics"
-#    Path under which to expose metrics.
-#  --haproxy.scrape-uri="http://localhost/;csv"
-#    URI on which to scrape HAProxy.
-#  --haproxy.ssl-verify
-#    Flag that enables SSL certificate verification for the scrape URI
-#  --haproxy.server-metric-fields="2,3,4,5,6,7,8,9,13,14,15,16,17,18,21,24,33,35,38,39,40,41,42,43,44"
-#    Comma-separated list of exported server metrics. See
-#    http://cbonte.github.io/haproxy-dconv/configuration-1.5.html#9.1
-#  --haproxy.timeout=5s
-#    Timeout for trying to get stats from HAProxy.
-#  --haproxy.pid-file=""
-#    Path to HAProxy pid file.
-#
-#    If provided, the standard process metrics get exported for the HAProxy
-#    process, prefixed with 'haproxy_process_...'. The haproxy_process exporter
-#    needs to have read access to files owned by the HAProxy process. Depends
-#    on the availability of /proc.
-#    https://prometheus.io/docs/instrumenting/writing_clientlibs/#process-metrics.
-#  --log.level="info"
-#    Only log messages with the given severity or above.
-#    Valid levels: [debug, info, warn, error, fatal]
-#  --log.format="logger:stderr"
-#    Set the log target and format. Example:
-#    "logger:syslog?appname=bob&local=7" or "logger:stdout?json=true"
+ARGS="--haproxy.scrape-uri=http://localhost:9188/metrics;csv"
\ No newline at end of file

changed: [kovalart-2]
--- before: /etc/default/prometheus-haproxy-exporter
+++ after: /home/parrot/.ansible/tmp/ansible-local-267406kvomjqnj/tmp24us6dp6/prometheus_haproxy
@@ -1,35 +1 @@
-# Set the command-line arguments to pass to the server.
-# Due to shell scaping, to pass backslashes for regexes, you need to double
-# them (\\d for \d). If running under systemd, you need to double them again
-# (\\\\d to mean \d), and escape newlines too.
-ARGS=""
-
-# Prometheus-haproxy-exporter supports the following options:
-#
-#  --web.listen-address=":9101"
-#    Address to listen on for web interface and telemetry.
-#  --web.telemetry-path="/metrics"
-#    Path under which to expose metrics.
-#  --haproxy.scrape-uri="http://localhost/;csv"
-#    URI on which to scrape HAProxy.
-#  --haproxy.ssl-verify
-#    Flag that enables SSL certificate verification for the scrape URI
-#  --haproxy.server-metric-fields="2,3,4,5,6,7,8,9,13,14,15,16,17,18,21,24,33,35,38,39,40,41,42,43,44"
-#    Comma-separated list of exported server metrics. See
-#    http://cbonte.github.io/haproxy-dconv/configuration-1.5.html#9.1
-#  --haproxy.timeout=5s
-#    Timeout for trying to get stats from HAProxy.
-#  --haproxy.pid-file=""
-#    Path to HAProxy pid file.
-#
-#    If provided, the standard process metrics get exported for the HAProxy
-#    process, prefixed with 'haproxy_process_...'. The haproxy_process exporter
-#    needs to have read access to files owned by the HAProxy process. Depends
-#    on the availability of /proc.
-#    https://prometheus.io/docs/instrumenting/writing_clientlibs/#process-metrics.
-#  --log.level="info"
-#    Only log messages with the given severity or above.
-#    Valid levels: [debug, info, warn, error, fatal]
-#  --log.format="logger:stderr"
-#    Set the log target and format. Example:
-#    "logger:syslog?appname=bob&local=7" or "logger:stdout?json=true"
+ARGS="--haproxy.scrape-uri=http://localhost:9188/metrics;csv"
\ No newline at end of file

changed: [kovalart-1]

TASK [haproxy : Start haproxy exporter] ****************************************
ok: [kovalart-2]
ok: [kovalart-1]

TASK [haproxy : Create CNAME records for HAproxy instances] ********************
changed: [kovalart-1] => (item={'service': 'lb-1', 'target': 'kovalart-1'})
ok: [kovalart-2] => (item={'service': 'lb-1', 'target': 'kovalart-1'})
changed: [kovalart-2] => (item={'service': 'lb-2', 'target': 'kovalart-2'})
ok: [kovalart-1] => (item={'service': 'lb-2', 'target': 'kovalart-2'})

RUNNING HANDLER [haproxy : Restart Haproxy] ************************************
changed: [kovalart-1]
changed: [kovalart-2]

RUNNING HANDLER [haproxy : restart prometheus-haproxy-exporter] ****************
changed: [kovalart-2]
changed: [kovalart-1]

PLAY [Keepalived tasks] ********************************************************

TASK [Gathering Facts] *********************************************************
ok: [kovalart-2]
ok: [kovalart-1]

TASK [keepalived : Install keepalived] *****************************************
The following additional packages will be installed:
  ipvsadm libmysqlclient21 libnl-3-200 libnl-genl-3-200 libsensors-config
  libsensors5 libsnmp-base libsnmp35
Suggested packages:
  heartbeat ldirectord lm-sensors snmp-mibs-downloader
The following NEW packages will be installed:
  ipvsadm keepalived libmysqlclient21 libnl-3-200 libnl-genl-3-200
  libsensors-config libsensors5 libsnmp-base libsnmp35
0 upgraded, 9 newly installed, 0 to remove and 261 not upgraded.
changed: [kovalart-2]
The following additional packages will be installed:
  ipvsadm libmysqlclient21 libnl-3-200 libnl-genl-3-200 libsensors-config
  libsensors5 libsnmp-base libsnmp35
Suggested packages:
  heartbeat ldirectord lm-sensors snmp-mibs-downloader
The following NEW packages will be installed:
  ipvsadm keepalived libmysqlclient21 libnl-3-200 libnl-genl-3-200
  libsensors-config libsensors5 libsnmp-base libsnmp35
0 upgraded, 9 newly installed, 0 to remove and 261 not upgraded.
changed: [kovalart-1]

TASK [keepalived : Create keepalived_script user] ******************************
changed: [kovalart-2]
changed: [kovalart-1]

TASK [keepalived : Copy check script to keepalived_script user's home folder] ***
--- before
+++ after: /home/parrot/ica0002/roles/keepalived/templates/script.sh
@@ -0,0 +1,2 @@
+#!/bin/bash
+ss -ntl | grep -q ':88 '
\ No newline at end of file

changed: [kovalart-2]
--- before
+++ after: /home/parrot/ica0002/roles/keepalived/templates/script.sh
@@ -0,0 +1,2 @@
+#!/bin/bash
+ss -ntl | grep -q ':88 '
\ No newline at end of file

changed: [kovalart-1]

TASK [keepalived : Copy the Keepalived config] *********************************
changed: [kovalart-1]
changed: [kovalart-2]

TASK [keepalived : Start the service] ******************************************
changed: [kovalart-2] => (item=keepalived)
changed: [kovalart-1] => (item=keepalived)

TASK [keepalived : Download Keepalived Exporter] *******************************
changed: [kovalart-1]
changed: [kovalart-2]

TASK [keepalived : Extract Keepalived Exporter] ********************************
changed: [kovalart-2]
changed: [kovalart-1]

TASK [keepalived : Create systemd unit file] ***********************************
--- before
+++ after: /home/parrot/.ansible/tmp/ansible-local-267406kvomjqnj/tmp54j_s11e/keepalived_systemd.conf
@@ -0,0 +1,10 @@
+[Unit]
+Description=Keepalived Exporter
+After=network.target
+
+[Service]
+User=root
+ExecStart=/usr/local/bin/keepalived-exporter-1.2.0.linux-amd64/keepalived-exporter
+
+[Install]
+WantedBy=default.target
\ No newline at end of file

changed: [kovalart-1]
--- before
+++ after: /home/parrot/.ansible/tmp/ansible-local-267406kvomjqnj/tmprwmtz1t4/keepalived_systemd.conf
@@ -0,0 +1,10 @@
+[Unit]
+Description=Keepalived Exporter
+After=network.target
+
+[Service]
+User=root
+ExecStart=/usr/local/bin/keepalived-exporter-1.2.0.linux-amd64/keepalived-exporter
+
+[Install]
+WantedBy=default.target
\ No newline at end of file

changed: [kovalart-2]

TASK [keepalived : Reload systemd] *********************************************
ok: [kovalart-2]
ok: [kovalart-1]

TASK [keepalived : Start and enable Keepalived Exporter service] ***************
changed: [kovalart-1]
changed: [kovalart-2]

RUNNING HANDLER [keepalived : Restart keepalived] ******************************
changed: [kovalart-2]
changed: [kovalart-1]

PLAY RECAP *********************************************************************
kovalart-1                 : ok=83   changed=64   unreachable=0    failed=0    skipped=5    rescued=0    ignored=0   
kovalart-2                 : ok=83   changed=64   unreachable=0    failed=0    skipped=5    rescued=0    ignored=0   
kovalart-3                 : ok=84   changed=67   unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   

+ ansible-playbook infra.yaml --diff

PLAY [Initial setup] ***********************************************************

TASK [Gathering Facts] *********************************************************
ok: [kovalart-2]
ok: [kovalart-1]
ok: [kovalart-3]

TASK [init : Update APT cache] *************************************************
ok: [kovalart-2]
ok: [kovalart-1]
ok: [kovalart-3]

TASK [init : Install Prometheus nodes] *****************************************
ok: [kovalart-1]
ok: [kovalart-3]
ok: [kovalart-2]

TASK [init : Ensure the Node Exporters are started] ****************************
ok: [kovalart-2]
ok: [kovalart-1]
ok: [kovalart-3]

TASK [init : Ensure ca-certificates is installed with a specific version] ******
ok: [kovalart-2]
ok: [kovalart-1]
ok: [kovalart-3]

TASK [init : Install Rsyslog] **************************************************
ok: [kovalart-2]
ok: [kovalart-3]
ok: [kovalart-1]

TASK [init : Add the Rsyslog configuration for the Telegraf] *******************
ok: [kovalart-3]
ok: [kovalart-1]
ok: [kovalart-2]

TASK [init : Create backup user] ***********************************************
ok: [kovalart-2]
ok: [kovalart-1]
ok: [kovalart-3]

TASK [init : Ensure .ssh directory exists for backup user] *********************
ok: [kovalart-1]
ok: [kovalart-2]
ok: [kovalart-3]

TASK [init : Generate SSH keypair for backup user] *****************************
ok: [kovalart-2]
ok: [kovalart-3]
ok: [kovalart-1]

TASK [init : Add backup server SSH key to known hosts] *************************
ok: [kovalart-2]
ok: [kovalart-3]
ok: [kovalart-1]

TASK [init : Ensure /home/backup/restore directory is created] *****************
ok: [kovalart-2]
ok: [kovalart-3]
ok: [kovalart-1]

TASK [init : Ensure Duplicity is installed] ************************************
ok: [kovalart-1]
ok: [kovalart-2]
ok: [kovalart-3]
[WARNING]: Could not match supplied host pattern, ignoring: children

PLAY [DNS server tasks] ********************************************************

TASK [Gathering Facts] *********************************************************
ok: [kovalart-1]
ok: [kovalart-3]
ok: [kovalart-2]

TASK [bind : Install Bind9] ****************************************************
ok: [kovalart-3]
ok: [kovalart-2]
ok: [kovalart-1]

TASK [bind : Configure DNS forwarders] *****************************************
ok: [kovalart-1]
ok: [kovalart-2]
ok: [kovalart-3]

TASK [bind : Configure DNS] ****************************************************
ok: [kovalart-1]
ok: [kovalart-3]
ok: [kovalart-2]

TASK [bind : Configure Master Zone] ********************************************
skipping: [kovalart-1]
skipping: [kovalart-2]
ok: [kovalart-3]

TASK [bind : Configure Reverse Zone] *******************************************
skipping: [kovalart-1]
skipping: [kovalart-2]
ok: [kovalart-3]

TASK [bind : Run handlers] *****************************************************

TASK [bind : Ensure Bind9 service is running and enabled] **********************
ok: [kovalart-1]
ok: [kovalart-3]
ok: [kovalart-2]

TASK [bind : Install Bind exporter] ********************************************
ok: [kovalart-2]
ok: [kovalart-1]
ok: [kovalart-3]

TASK [bind : Create CNAME records for DNS instances] ***************************
ok: [kovalart-2] => (item={'service': 'ns-1', 'target': 'kovalart-1'})
ok: [kovalart-1] => (item={'service': 'ns-1', 'target': 'kovalart-1'})
ok: [kovalart-3] => (item={'service': 'ns-1', 'target': 'kovalart-1'})
ok: [kovalart-1] => (item={'service': 'ns-2', 'target': 'kovalart-2'})
ok: [kovalart-2] => (item={'service': 'ns-2', 'target': 'kovalart-2'})
ok: [kovalart-3] => (item={'service': 'ns-2', 'target': 'kovalart-2'})

PLAY [Resolv.conf task] ********************************************************

TASK [Gathering Facts] *********************************************************
ok: [kovalart-1]
ok: [kovalart-2]
ok: [kovalart-3]

TASK [resolv_dns : Shut down systemd-resolved] *********************************
ok: [kovalart-1]
ok: [kovalart-2]
ok: [kovalart-3]

TASK [resolv_dns : Change resolv.conf on both VMs] *****************************
ok: [kovalart-1]
ok: [kovalart-2]
ok: [kovalart-3]

PLAY [Database server] *********************************************************

TASK [Gathering Facts] *********************************************************
ok: [kovalart-1]
ok: [kovalart-2]

TASK [mysql : Install mysql] ***************************************************
ok: [kovalart-2]
ok: [kovalart-1]

TASK [mysql : copy the mysql config file and restart mysql server] *************
ok: [kovalart-1]
ok: [kovalart-2]

TASK [mysql : Start mysql] *****************************************************
ok: [kovalart-1]
ok: [kovalart-2]

TASK [mysql : Install required Python Library] *********************************
ok: [kovalart-1]
ok: [kovalart-2]

TASK [mysql : MySQL database] **************************************************
ok: [kovalart-2]
ok: [kovalart-1]

TASK [mysql : MySQL user] ******************************************************
ok: [kovalart-2]
ok: [kovalart-1]

TASK [mysql : Create MySQL exporter user] **************************************
ok: [kovalart-1]
ok: [kovalart-2]

TASK [mysql : Install Exporter] ************************************************
ok: [kovalart-2]
ok: [kovalart-1]

TASK [mysql : Update the MySQL exporter] ***************************************
ok: [kovalart-1]
ok: [kovalart-2]

TASK [mysql : Copy the config file] ********************************************
ok: [kovalart-1]
ok: [kovalart-2]

TASK [mysql : Start Mysql exporter] ********************************************
ok: [kovalart-2]
ok: [kovalart-1]

TASK [mysql : Ensure that mysql directory exists] ******************************
ok: [kovalart-2]
ok: [kovalart-1]

TASK [mysql : Create MySQL user named backup with required privileges] *********
ok: [kovalart-1]
ok: [kovalart-2]

TASK [mysql : Ensure /home/backup/.my.cnf file is created] *********************
ok: [kovalart-1]
ok: [kovalart-2]

TASK [mysql : Ensure user backup can create MySQL dumps without errors] ********
ok: [kovalart-2]
ok: [kovalart-1]

TASK [mysql : Fail if the dump command did not execute successfully] ***********
skipping: [kovalart-1]
skipping: [kovalart-2]

TASK [mysql : Schedule MySQL dumps with Cron] **********************************
ok: [kovalart-1]
ok: [kovalart-2]

TASK [mysql : Create MySQL user named backup with required privileges] *********
ok: [kovalart-2]
ok: [kovalart-1]

TASK [mysql : Read only mode for the Replica MySQL host] ***********************
ok: [kovalart-2]
ok: [kovalart-1]

TASK [mysql : Create CNAME records for MySQL instances] ************************
ok: [kovalart-1] => (item={'service': 'mysql-1', 'target': 'kovalart-1'})
ok: [kovalart-2] => (item={'service': 'mysql-1', 'target': 'kovalart-1'})
ok: [kovalart-1] => (item={'service': 'mysql-2', 'target': 'kovalart-2'})
ok: [kovalart-2] => (item={'service': 'mysql-2', 'target': 'kovalart-2'})

PLAY [Web server tasks] ********************************************************

TASK [Gathering Facts] *********************************************************
ok: [kovalart-3]

TASK [nginx : Ensure nginx is installed and in working state] ******************
ok: [kovalart-3]

TASK [nginx : Copy Nginx default config to sites-enabled] **********************
ok: [kovalart-3]

TASK [nginx : start nginx] *****************************************************
ok: [kovalart-3]

TASK [nginx : Install exporter] ************************************************
ok: [kovalart-3]

TASK [nginx : Pause for 10 seconds to start nginx exporter] ********************
Pausing for 10 seconds
(ctrl+C then 'C' = continue early, ctrl+C then 'A' = abort)
ok: [kovalart-3]

TASK [nginx : Run the nginx exporter] ******************************************
changed: [kovalart-3]

PLAY [Prometheus tasks] ********************************************************

TASK [Gathering Facts] *********************************************************
ok: [kovalart-3]

TASK [prometheus : Install Prometheus on Second VM] ****************************
ok: [kovalart-3]

TASK [prometheus : Copy Prometheus Configuration] ******************************
ok: [kovalart-3]

TASK [prometheus : Copy Prometheus service configuration] **********************
ok: [kovalart-3]

TASK [prometheus : Create CNAME record for prometheus] *************************
ok: [kovalart-3]

PLAY [Docker tasks] ************************************************************

TASK [Gathering Facts] *********************************************************
ok: [kovalart-2]
ok: [kovalart-1]
ok: [kovalart-3]

TASK [docker : Install Docker.io package] **************************************
ok: [kovalart-2]
ok: [kovalart-1]
ok: [kovalart-3]

TASK [docker : Install python3-docker package] *********************************
ok: [kovalart-2]
ok: [kovalart-1]
ok: [kovalart-3]

TASK [docker : Ensure Docker daemon is running and enabled] ********************
ok: [kovalart-2]
ok: [kovalart-1]
ok: [kovalart-3]

PLAY [Grafana Tasks] ***********************************************************

TASK [Gathering Facts] *********************************************************
ok: [kovalart-3]

TASK [grafana : Create Grafana directories] ************************************
ok: [kovalart-3] => (item=provisioning/dashboards)
ok: [kovalart-3] => (item=provisioning/datasources)

TASK [grafana : Copy the config] ***********************************************
ok: [kovalart-3]

TASK [grafana : Copy Grafana datasource] ***************************************
ok: [kovalart-3]

TASK [grafana : Copy Grafana dashboard configuration] **************************
ok: [kovalart-3]

TASK [grafana : Copy Grafana main dashboard] ***********************************
ok: [kovalart-3]

TASK [grafana : Syslog dashboard provisioning] *********************************
ok: [kovalart-3]

TASK [grafana : MySQL dashboard provisioning] **********************************
ok: [kovalart-3]

TASK [grafana : Pull Grafana Docker image] *************************************
ok: [kovalart-3]

TASK [grafana : Start Grafana container] ***************************************
ok: [kovalart-3]

TASK [grafana : Create CNAME record for Grafana] *******************************
ok: [kovalart-3]

PLAY [Agama tasks] *************************************************************

TASK [Gathering Facts] *********************************************************
ok: [kovalart-1]
ok: [kovalart-2]

TASK [agama : Agama directory] *************************************************
ok: [kovalart-2]
ok: [kovalart-1]

TASK [agama : Configure AGAMA application] *************************************
ok: [kovalart-1]
ok: [kovalart-2]

TASK [agama : Download agama.py] ***********************************************
ok: [kovalart-1]
ok: [kovalart-2]

TASK [agama : Download Dockerfile] *********************************************
ok: [kovalart-2]
ok: [kovalart-1]

TASK [agama : Build agama image] ***********************************************
ok: [kovalart-2]
ok: [kovalart-1]

TASK [agama : Create Agama Containers] *****************************************
ok: [kovalart-1] => (item=1)
ok: [kovalart-2] => (item=1)

TASK [agama : Gather information about all running containers] *****************
ok: [kovalart-1]
ok: [kovalart-2]

TASK [agama : Remove extra Agama Containers] ***********************************
skipping: [kovalart-2] => (item=agama1) 
skipping: [kovalart-1] => (item=agama1) 

TASK [agama : Create CNAME records for Agama instances] ************************
ok: [kovalart-2] => (item={'service': 'www-1', 'target': 'kovalart-1'})
ok: [kovalart-1] => (item={'service': 'www-1', 'target': 'kovalart-1'})
ok: [kovalart-1] => (item={'service': 'www-2', 'target': 'kovalart-2'})
ok: [kovalart-2] => (item={'service': 'www-2', 'target': 'kovalart-2'})

PLAY [Influxdb tasks] **********************************************************

TASK [Gathering Facts] *********************************************************
ok: [kovalart-3]

TASK [influxdb : Install influxdb] *********************************************
ok: [kovalart-3]

TASK [influxdb : Dpkg InfluxDB] ************************************************
ok: [kovalart-3]

TASK [influxdb : Change the config for Influxdb] *******************************
ok: [kovalart-3]

TASK [influxdb : Ensure InfluxDB is enabled and running] ***********************
ok: [kovalart-3]

TASK [influxdb : Download and install Telegraf] ********************************
ok: [kovalart-3]

TASK [influxdb : Install Telegraf] *********************************************
ok: [kovalart-3]

TASK [influxdb : Configure Telegraf for syslog input and InfluxDB output] ******
ok: [kovalart-3]

TASK [influxdb : Restart Telegraf service] *************************************
ok: [kovalart-3]

TASK [influxdb : Download InfluxDB Stats Exporter binary] **********************
ok: [kovalart-3]

TASK [influxdb : Create systemd service for InfluxDB Stats Exporter] ***********
ok: [kovalart-3]

TASK [influxdb : Ensure that influxdb directory exists] ************************
ok: [kovalart-3]

TASK [influxdb : Ensure user backup can create InfluxDB dumps without errors] ***
ok: [kovalart-3]

TASK [influxdb : Fail if the dump command did not execute successfully] ********
skipping: [kovalart-3]

TASK [influxdb : InfluxDB backup cron job] *************************************
ok: [kovalart-3]

TASK [influxdb : Create CNAME record for Influxdb] *****************************
ok: [kovalart-3]

TASK [pinger : Create "pinger" user] *******************************************
ok: [kovalart-3]

TASK [pinger : Install fping] **************************************************
ok: [kovalart-3]

TASK [pinger : Create a directory /etc/pinger] *********************************
ok: [kovalart-3]

TASK [pinger : Copy service to destination] ************************************
ok: [kovalart-3]

TASK [pinger : Copy Pinger service file] ***************************************
ok: [kovalart-3]

TASK [pinger : Copy Pinger.conf file] ******************************************
ok: [kovalart-3]

TASK [pinger : Restart daemon] *************************************************
ok: [kovalart-3]

TASK [pinger : Start pinger] ***************************************************
ok: [kovalart-3]

PLAY [Haproxy tasks] ***********************************************************

TASK [Gathering Facts] *********************************************************
ok: [kovalart-2]
ok: [kovalart-1]

TASK [haproxy : Install haproxy] ***********************************************
ok: [kovalart-1]
ok: [kovalart-2]

TASK [haproxy : Copy the Haproxy config] ***************************************
ok: [kovalart-1]
ok: [kovalart-2]

TASK [haproxy : Start the service] *********************************************
ok: [kovalart-2] => (item=haproxy)
ok: [kovalart-1] => (item=haproxy)

TASK [haproxy : Install prometheus-haproxy-exporter using APT] *****************
ok: [kovalart-2]
ok: [kovalart-1]

TASK [haproxy : Configure haproxy.scrape-uri in /etc/default/prometheus-haproxy-exporter] ***
ok: [kovalart-1]
ok: [kovalart-2]

TASK [haproxy : Start haproxy exporter] ****************************************
ok: [kovalart-2]
ok: [kovalart-1]

TASK [haproxy : Create CNAME records for HAproxy instances] ********************
ok: [kovalart-2] => (item={'service': 'lb-1', 'target': 'kovalart-1'})
ok: [kovalart-1] => (item={'service': 'lb-1', 'target': 'kovalart-1'})
ok: [kovalart-2] => (item={'service': 'lb-2', 'target': 'kovalart-2'})
ok: [kovalart-1] => (item={'service': 'lb-2', 'target': 'kovalart-2'})

PLAY [Keepalived tasks] ********************************************************

TASK [Gathering Facts] *********************************************************
ok: [kovalart-1]
ok: [kovalart-2]

TASK [keepalived : Install keepalived] *****************************************
ok: [kovalart-2]
ok: [kovalart-1]

TASK [keepalived : Create keepalived_script user] ******************************
ok: [kovalart-2]
ok: [kovalart-1]

TASK [keepalived : Copy check script to keepalived_script user's home folder] ***
ok: [kovalart-1]
ok: [kovalart-2]

TASK [keepalived : Copy the Keepalived config] *********************************
ok: [kovalart-1]
ok: [kovalart-2]

TASK [keepalived : Start the service] ******************************************
ok: [kovalart-1] => (item=keepalived)
ok: [kovalart-2] => (item=keepalived)

TASK [keepalived : Download Keepalived Exporter] *******************************
ok: [kovalart-2]
ok: [kovalart-1]

TASK [keepalived : Extract Keepalived Exporter] ********************************
ok: [kovalart-1]
ok: [kovalart-2]

TASK [keepalived : Create systemd unit file] ***********************************
ok: [kovalart-1]
ok: [kovalart-2]

TASK [keepalived : Reload systemd] *********************************************
ok: [kovalart-2]
ok: [kovalart-1]

TASK [keepalived : Start and enable Keepalived Exporter service] ***************
ok: [kovalart-2]
ok: [kovalart-1]

PLAY RECAP *********************************************************************
kovalart-1                 : ok=75   changed=0    unreachable=0    failed=0    skipped=4    rescued=0    ignored=0   
kovalart-2                 : ok=75   changed=0    unreachable=0    failed=0    skipped=4    rescued=0    ignored=0   
kovalart-3                 : ok=75   changed=1    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   

+ ansible all -b -m reboot -a test_command=uptime
kovalart-3 | CHANGED => {
    "changed": true,
    "elapsed": 45,
    "rebooted": true
}
kovalart-2 | CHANGED => {
    "changed": true,
    "elapsed": 53,
    "rebooted": true
}
kovalart-1 | CHANGED => {
    "changed": true,
    "elapsed": 54,
    "rebooted": true
}
+ ansible-playbook infra.yaml --diff

PLAY [Initial setup] ***********************************************************

TASK [Gathering Facts] *********************************************************
ok: [kovalart-3]
ok: [kovalart-1]
ok: [kovalart-2]

TASK [init : Update APT cache] *************************************************
ok: [kovalart-1]
ok: [kovalart-3]
ok: [kovalart-2]

TASK [init : Install Prometheus nodes] *****************************************
ok: [kovalart-2]
ok: [kovalart-1]
ok: [kovalart-3]

TASK [init : Ensure the Node Exporters are started] ****************************
ok: [kovalart-1]
ok: [kovalart-3]
ok: [kovalart-2]

TASK [init : Ensure ca-certificates is installed with a specific version] ******
ok: [kovalart-2]
ok: [kovalart-1]
ok: [kovalart-3]

TASK [init : Install Rsyslog] **************************************************
ok: [kovalart-1]
ok: [kovalart-2]
ok: [kovalart-3]

TASK [init : Add the Rsyslog configuration for the Telegraf] *******************
ok: [kovalart-1]
ok: [kovalart-2]
ok: [kovalart-3]

TASK [init : Create backup user] ***********************************************
ok: [kovalart-1]
ok: [kovalart-3]
ok: [kovalart-2]

TASK [init : Ensure .ssh directory exists for backup user] *********************
ok: [kovalart-1]
ok: [kovalart-2]
ok: [kovalart-3]

TASK [init : Generate SSH keypair for backup user] *****************************
ok: [kovalart-2]
ok: [kovalart-1]
ok: [kovalart-3]

TASK [init : Add backup server SSH key to known hosts] *************************
ok: [kovalart-1]
ok: [kovalart-2]
ok: [kovalart-3]

TASK [init : Ensure /home/backup/restore directory is created] *****************
ok: [kovalart-1]
ok: [kovalart-2]
ok: [kovalart-3]

TASK [init : Ensure Duplicity is installed] ************************************
ok: [kovalart-1]
ok: [kovalart-2]
ok: [kovalart-3]
[WARNING]: Could not match supplied host pattern, ignoring: children

PLAY [DNS server tasks] ********************************************************

TASK [Gathering Facts] *********************************************************
ok: [kovalart-1]
ok: [kovalart-2]
ok: [kovalart-3]

TASK [bind : Install Bind9] ****************************************************
ok: [kovalart-1]
ok: [kovalart-2]
ok: [kovalart-3]

TASK [bind : Configure DNS forwarders] *****************************************
ok: [kovalart-3]
ok: [kovalart-1]
ok: [kovalart-2]

TASK [bind : Configure DNS] ****************************************************
ok: [kovalart-1]
ok: [kovalart-3]
ok: [kovalart-2]

TASK [bind : Configure Master Zone] ********************************************
skipping: [kovalart-1]
skipping: [kovalart-2]
ok: [kovalart-3]

TASK [bind : Configure Reverse Zone] *******************************************
skipping: [kovalart-1]
skipping: [kovalart-2]
ok: [kovalart-3]

TASK [bind : Run handlers] *****************************************************

TASK [bind : Ensure Bind9 service is running and enabled] **********************
ok: [kovalart-1]
ok: [kovalart-2]
ok: [kovalart-3]

TASK [bind : Install Bind exporter] ********************************************
ok: [kovalart-2]
ok: [kovalart-1]
ok: [kovalart-3]

TASK [bind : Create CNAME records for DNS instances] ***************************
ok: [kovalart-3] => (item={'service': 'ns-1', 'target': 'kovalart-1'})
ok: [kovalart-1] => (item={'service': 'ns-1', 'target': 'kovalart-1'})
ok: [kovalart-2] => (item={'service': 'ns-1', 'target': 'kovalart-1'})
ok: [kovalart-1] => (item={'service': 'ns-2', 'target': 'kovalart-2'})
ok: [kovalart-3] => (item={'service': 'ns-2', 'target': 'kovalart-2'})
ok: [kovalart-2] => (item={'service': 'ns-2', 'target': 'kovalart-2'})

PLAY [Resolv.conf task] ********************************************************

TASK [Gathering Facts] *********************************************************
ok: [kovalart-1]
ok: [kovalart-2]
ok: [kovalart-3]

TASK [resolv_dns : Shut down systemd-resolved] *********************************
changed: [kovalart-1]
changed: [kovalart-2]
changed: [kovalart-3]

TASK [resolv_dns : Change resolv.conf on both VMs] *****************************
ok: [kovalart-1]
ok: [kovalart-2]
ok: [kovalart-3]

PLAY [Database server] *********************************************************

TASK [Gathering Facts] *********************************************************
ok: [kovalart-1]
ok: [kovalart-2]

TASK [mysql : Install mysql] ***************************************************
ok: [kovalart-2]
ok: [kovalart-1]

TASK [mysql : copy the mysql config file and restart mysql server] *************
ok: [kovalart-1]
ok: [kovalart-2]

TASK [mysql : Start mysql] *****************************************************
ok: [kovalart-1]
ok: [kovalart-2]

TASK [mysql : Install required Python Library] *********************************
ok: [kovalart-1]
ok: [kovalart-2]

TASK [mysql : MySQL database] **************************************************
ok: [kovalart-1]
ok: [kovalart-2]

TASK [mysql : MySQL user] ******************************************************
ok: [kovalart-2]
ok: [kovalart-1]

TASK [mysql : Create MySQL exporter user] **************************************
ok: [kovalart-1]
ok: [kovalart-2]

TASK [mysql : Install Exporter] ************************************************
ok: [kovalart-2]
ok: [kovalart-1]

TASK [mysql : Update the MySQL exporter] ***************************************
ok: [kovalart-1]
ok: [kovalart-2]

TASK [mysql : Copy the config file] ********************************************
ok: [kovalart-2]
ok: [kovalart-1]

TASK [mysql : Start Mysql exporter] ********************************************
ok: [kovalart-1]
ok: [kovalart-2]

TASK [mysql : Ensure that mysql directory exists] ******************************
ok: [kovalart-2]
ok: [kovalart-1]

TASK [mysql : Create MySQL user named backup with required privileges] *********
ok: [kovalart-2]
ok: [kovalart-1]

TASK [mysql : Ensure /home/backup/.my.cnf file is created] *********************
ok: [kovalart-1]
ok: [kovalart-2]

TASK [mysql : Ensure user backup can create MySQL dumps without errors] ********
ok: [kovalart-1]
ok: [kovalart-2]

TASK [mysql : Fail if the dump command did not execute successfully] ***********
skipping: [kovalart-2]
skipping: [kovalart-1]

TASK [mysql : Schedule MySQL dumps with Cron] **********************************
ok: [kovalart-1]
ok: [kovalart-2]

TASK [mysql : Create MySQL user named backup with required privileges] *********
ok: [kovalart-2]
ok: [kovalart-1]

TASK [mysql : Read only mode for the Replica MySQL host] ***********************
ok: [kovalart-1]
ok: [kovalart-2]

TASK [mysql : Create CNAME records for MySQL instances] ************************
ok: [kovalart-1] => (item={'service': 'mysql-1', 'target': 'kovalart-1'})
ok: [kovalart-2] => (item={'service': 'mysql-1', 'target': 'kovalart-1'})
ok: [kovalart-1] => (item={'service': 'mysql-2', 'target': 'kovalart-2'})
ok: [kovalart-2] => (item={'service': 'mysql-2', 'target': 'kovalart-2'})

PLAY [Web server tasks] ********************************************************

TASK [Gathering Facts] *********************************************************
ok: [kovalart-3]

TASK [nginx : Ensure nginx is installed and in working state] ******************
ok: [kovalart-3]

TASK [nginx : Copy Nginx default config to sites-enabled] **********************
ok: [kovalart-3]

TASK [nginx : start nginx] *****************************************************
ok: [kovalart-3]

TASK [nginx : Install exporter] ************************************************
ok: [kovalart-3]

TASK [nginx : Pause for 10 seconds to start nginx exporter] ********************
Pausing for 10 seconds
(ctrl+C then 'C' = continue early, ctrl+C then 'A' = abort)
ok: [kovalart-3]

TASK [nginx : Run the nginx exporter] ******************************************
ok: [kovalart-3]

PLAY [Prometheus tasks] ********************************************************

TASK [Gathering Facts] *********************************************************
ok: [kovalart-3]

TASK [prometheus : Install Prometheus on Second VM] ****************************
ok: [kovalart-3]

TASK [prometheus : Copy Prometheus Configuration] ******************************
ok: [kovalart-3]

TASK [prometheus : Copy Prometheus service configuration] **********************
ok: [kovalart-3]

TASK [prometheus : Create CNAME record for prometheus] *************************
ok: [kovalart-3]

PLAY [Docker tasks] ************************************************************

TASK [Gathering Facts] *********************************************************
ok: [kovalart-1]
ok: [kovalart-2]
ok: [kovalart-3]

TASK [docker : Install Docker.io package] **************************************
ok: [kovalart-2]
ok: [kovalart-1]
ok: [kovalart-3]

TASK [docker : Install python3-docker package] *********************************
ok: [kovalart-1]
ok: [kovalart-2]
ok: [kovalart-3]

TASK [docker : Ensure Docker daemon is running and enabled] ********************
ok: [kovalart-1]
ok: [kovalart-2]
ok: [kovalart-3]

PLAY [Grafana Tasks] ***********************************************************

TASK [Gathering Facts] *********************************************************
ok: [kovalart-3]

TASK [grafana : Create Grafana directories] ************************************
ok: [kovalart-3] => (item=provisioning/dashboards)
ok: [kovalart-3] => (item=provisioning/datasources)

TASK [grafana : Copy the config] ***********************************************
ok: [kovalart-3]

TASK [grafana : Copy Grafana datasource] ***************************************
ok: [kovalart-3]

TASK [grafana : Copy Grafana dashboard configuration] **************************
ok: [kovalart-3]

TASK [grafana : Copy Grafana main dashboard] ***********************************
ok: [kovalart-3]

TASK [grafana : Syslog dashboard provisioning] *********************************
ok: [kovalart-3]

TASK [grafana : MySQL dashboard provisioning] **********************************
ok: [kovalart-3]

TASK [grafana : Pull Grafana Docker image] *************************************
ok: [kovalart-3]

TASK [grafana : Start Grafana container] ***************************************
ok: [kovalart-3]

TASK [grafana : Create CNAME record for Grafana] *******************************
ok: [kovalart-3]

PLAY [Agama tasks] *************************************************************

TASK [Gathering Facts] *********************************************************
ok: [kovalart-2]
ok: [kovalart-1]

TASK [agama : Agama directory] *************************************************
ok: [kovalart-1]
ok: [kovalart-2]

TASK [agama : Configure AGAMA application] *************************************
ok: [kovalart-2]
ok: [kovalart-1]

TASK [agama : Download agama.py] ***********************************************
ok: [kovalart-2]
ok: [kovalart-1]

TASK [agama : Download Dockerfile] *********************************************
ok: [kovalart-1]
ok: [kovalart-2]

TASK [agama : Build agama image] ***********************************************
ok: [kovalart-2]
ok: [kovalart-1]

TASK [agama : Create Agama Containers] *****************************************
ok: [kovalart-1] => (item=1)
ok: [kovalart-2] => (item=1)

TASK [agama : Gather information about all running containers] *****************
ok: [kovalart-2]
ok: [kovalart-1]

TASK [agama : Remove extra Agama Containers] ***********************************
skipping: [kovalart-2] => (item=agama1) 
skipping: [kovalart-1] => (item=agama1) 

TASK [agama : Create CNAME records for Agama instances] ************************
ok: [kovalart-1] => (item={'service': 'www-1', 'target': 'kovalart-1'})
ok: [kovalart-2] => (item={'service': 'www-1', 'target': 'kovalart-1'})
ok: [kovalart-2] => (item={'service': 'www-2', 'target': 'kovalart-2'})
ok: [kovalart-1] => (item={'service': 'www-2', 'target': 'kovalart-2'})

PLAY [Influxdb tasks] **********************************************************

TASK [Gathering Facts] *********************************************************
ok: [kovalart-3]

TASK [influxdb : Install influxdb] *********************************************
changed: [kovalart-3]

TASK [influxdb : Dpkg InfluxDB] ************************************************
ok: [kovalart-3]

TASK [influxdb : Change the config for Influxdb] *******************************
ok: [kovalart-3]

TASK [influxdb : Ensure InfluxDB is enabled and running] ***********************
ok: [kovalart-3]

TASK [influxdb : Download and install Telegraf] ********************************
changed: [kovalart-3]

TASK [influxdb : Install Telegraf] *********************************************
ok: [kovalart-3]

TASK [influxdb : Configure Telegraf for syslog input and InfluxDB output] ******
ok: [kovalart-3]

TASK [influxdb : Restart Telegraf service] *************************************
ok: [kovalart-3]

TASK [influxdb : Download InfluxDB Stats Exporter binary] **********************
ok: [kovalart-3]

TASK [influxdb : Create systemd service for InfluxDB Stats Exporter] ***********
ok: [kovalart-3]

TASK [influxdb : Ensure that influxdb directory exists] ************************
ok: [kovalart-3]

TASK [influxdb : Ensure user backup can create InfluxDB dumps without errors] ***
ok: [kovalart-3]

TASK [influxdb : Fail if the dump command did not execute successfully] ********
skipping: [kovalart-3]

TASK [influxdb : InfluxDB backup cron job] *************************************
ok: [kovalart-3]

TASK [influxdb : Create CNAME record for Influxdb] *****************************
ok: [kovalart-3]

TASK [pinger : Create "pinger" user] *******************************************
ok: [kovalart-3]

TASK [pinger : Install fping] **************************************************
ok: [kovalart-3]

TASK [pinger : Create a directory /etc/pinger] *********************************
ok: [kovalart-3]

TASK [pinger : Copy service to destination] ************************************
ok: [kovalart-3]

TASK [pinger : Copy Pinger service file] ***************************************
ok: [kovalart-3]

TASK [pinger : Copy Pinger.conf file] ******************************************
ok: [kovalart-3]

TASK [pinger : Restart daemon] *************************************************
ok: [kovalart-3]

TASK [pinger : Start pinger] ***************************************************
ok: [kovalart-3]

PLAY [Haproxy tasks] ***********************************************************

TASK [Gathering Facts] *********************************************************
ok: [kovalart-1]
ok: [kovalart-2]

TASK [haproxy : Install haproxy] ***********************************************
ok: [kovalart-1]
ok: [kovalart-2]

TASK [haproxy : Copy the Haproxy config] ***************************************
ok: [kovalart-1]
ok: [kovalart-2]

TASK [haproxy : Start the service] *********************************************
ok: [kovalart-2] => (item=haproxy)
ok: [kovalart-1] => (item=haproxy)

TASK [haproxy : Install prometheus-haproxy-exporter using APT] *****************
ok: [kovalart-2]
ok: [kovalart-1]

TASK [haproxy : Configure haproxy.scrape-uri in /etc/default/prometheus-haproxy-exporter] ***
ok: [kovalart-1]
ok: [kovalart-2]

TASK [haproxy : Start haproxy exporter] ****************************************
ok: [kovalart-2]
ok: [kovalart-1]

TASK [haproxy : Create CNAME records for HAproxy instances] ********************
ok: [kovalart-1] => (item={'service': 'lb-1', 'target': 'kovalart-1'})
ok: [kovalart-2] => (item={'service': 'lb-1', 'target': 'kovalart-1'})
ok: [kovalart-1] => (item={'service': 'lb-2', 'target': 'kovalart-2'})
ok: [kovalart-2] => (item={'service': 'lb-2', 'target': 'kovalart-2'})

PLAY [Keepalived tasks] ********************************************************

TASK [Gathering Facts] *********************************************************
ok: [kovalart-1]
ok: [kovalart-2]

TASK [keepalived : Install keepalived] *****************************************
ok: [kovalart-2]
ok: [kovalart-1]

TASK [keepalived : Create keepalived_script user] ******************************
ok: [kovalart-1]
ok: [kovalart-2]

TASK [keepalived : Copy check script to keepalived_script user's home folder] ***
ok: [kovalart-2]
ok: [kovalart-1]

TASK [keepalived : Copy the Keepalived config] *********************************
ok: [kovalart-1]
ok: [kovalart-2]

TASK [keepalived : Start the service] ******************************************
ok: [kovalart-1] => (item=keepalived)
ok: [kovalart-2] => (item=keepalived)

TASK [keepalived : Download Keepalived Exporter] *******************************
changed: [kovalart-1]
changed: [kovalart-2]

TASK [keepalived : Extract Keepalived Exporter] ********************************
ok: [kovalart-1]
ok: [kovalart-2]

TASK [keepalived : Create systemd unit file] ***********************************
ok: [kovalart-2]
ok: [kovalart-1]

TASK [keepalived : Reload systemd] *********************************************
ok: [kovalart-2]
ok: [kovalart-1]

TASK [keepalived : Start and enable Keepalived Exporter service] ***************
ok: [kovalart-1]
ok: [kovalart-2]

PLAY RECAP *********************************************************************
kovalart-1                 : ok=75   changed=2    unreachable=0    failed=0    skipped=4    rescued=0    ignored=0   
kovalart-2                 : ok=75   changed=2    unreachable=0    failed=0    skipped=4    rescued=0    ignored=0   
kovalart-3                 : ok=75   changed=3    unreachable=0    failed=0    skipped=1    rescued=0    ignored=0   

+ date
Mon Dec 18 04:38:29 AM EST 2023
