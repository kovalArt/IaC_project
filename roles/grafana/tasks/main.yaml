---
- name: Create Grafana directories
  file:
    path: "/opt/grafana/{{ item }}"
    state: directory
  loop:
    - provisioning/dashboards
    - provisioning/datasources

- name: Copy Grafana Configuration
  loop:
    - { src: "grafana.ini.j2", dest: "/opt/grafana/grafana.ini" }
    - { src: "datasource.yaml.j2", dest: "/opt/grafana/provisioning/datasources/default.yaml" }
    - { src: "default.yaml.j2", dest: "/opt/grafana/provisioning/dashboards/default.yaml" }
    - { src: "../files/main.json", dest: "/opt/grafana/provisioning/dashboards/default_dashboard.json" }
    - { src: "../files/syslog-dashboard.json", dest: "/opt/grafana/provisioning/dashboards/syslog_dashboard.json" }
    - { src: "../files/mysql.json", dest: "/opt/grafana/provisioning/dashboards/mysql_dashboard.json" }
  template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
  notify:
    - restart grafana

- name: Pull Grafana Docker image
  community.docker.docker_image:
    name: grafana/grafana
    source: pull

- name: Start Grafana container
  docker_container:
    name: grafana
    image: grafana/grafana
    state: started
    restart_policy: always
    ports: "{{ grafana_port }}:{{ grafana_docker_port }}"
    volumes: /opt/grafana:/etc/grafana

- name: Create CNAME record for Grafana
  community.general.nsupdate:
    key_name: "nsupdate.key"
    server: "{{ master_dns }}"
    key_algorithm: "hmac-sha256"
    key_secret: "{{ nsupdate_secret }}"
    zone: "{{ startup_name }}"
    state: present
    record: "grafana"
    type: "CNAME"
    value: "{{ grafana_host }}"

    

