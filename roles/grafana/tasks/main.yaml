---
- name: Create Grafana directories
  file:
    path: "/opt/grafana/{{ item }}"
    state: directory
  loop:
    - provisioning/dashboards
    - provisioning/datasources

- name: Copy the config
  template:
    src: ../templates/grafana.ini.j2
    dest: /opt/grafana/grafana.ini
  no_log: true
  notify:
    - stop grafana
    - start grafana

- name: Copy Grafana datasource
  template:
    src: datasource.yaml.j2
    dest: /opt/grafana/provisioning/datasources/default.yaml
  notify:
   - stop grafana
   - start grafana

- name: Copy Grafana main dashboard
  copy:
    src: ../files/main.json
    dest: /opt/grafana/provisioning/dashboards/default_dashboard.json
  notify:
   - stop grafana
   - start grafana

- name: Syslog dashboard provisioning
  copy:
    src: ../files/syslog-dashboard.json
    dest: /opt/grafana/provisioning/dashboards/syslog_dashboard.json
  notify:
   - stop grafana
   - start grafana

- name: MySQL dashboard provisioning
  copy:
    src: ../files/mysql.json
    dest: /opt/grafana/provisioning/dashboards/mysql_dashboard.json
  notify:
   - stop grafana
   - start grafana

- name: Pull Grafana Docker image
  community.docker.docker_image:
    name: grafana/grafana
    source: pull

- name: Start Grafana container
  docker_container:
    name: grafana
    image: grafana/grafana
    state: started
    restart_policy: always
    ports: "{{ grafana_port }}:3000"
    volumes: /opt/grafana:/etc/grafana

- name: Create CNAME record for Grafana
  community.general.nsupdate:
    key_name: "nsupdate.key"
    server: "{{ hostvars[inventory_hostname]['ansible_default_ipv4']['address'] }}"
    key_algorithm: "hmac-sha256"
    key_secret: "{{ nsupdate_secret }}"
    zone: "{{ startup_name }}"
    state: present
    record: "grafana"
    type: "CNAME"
    value: "kovalart-2"

    

