---
  - name: Install influxdb
    become: yes
    get_url:
      url: "https://dl.influxdata.com/influxdb/releases/influxdb_1.8.10_amd64.deb"
      dest: "/home/ubuntu/influxdb_1.8.10_amd64.deb"

  - name: Dpkg InfluxDB
    apt:
      deb: "/home/ubuntu/influxdb_1.8.10_amd64.deb"
      state: present

  - name: Change the config for Influxdb
    copy:
      src: ../files/influx.conf
      dest: /etc/influxdb/influxdb.conf
    notify: restart influxdb
    no_log: true

  - name: Ensure InfluxDB is enabled and running 
    service:
      name: influxdb 
      state: started
      enabled: true
  
  - name: Download Telegraf
    get_url:
      url: "https://dl.influxdata.com/telegraf/releases/telegraf_1.28.2-1_amd64.deb"
      dest: "/home/ubuntu/telegraf.deb"

  - name: Install Telegraf
    apt:
      deb: "/home/ubuntu/telegraf.deb"
      state: present

  - name: Configure Telegraf for syslog input and InfluxDB output
    copy:
      src: ../files/telegraf.conf
      dest: /etc/telegraf/telegraf.conf
    notify: restart telegraf
    no_log: true

  - name: Start Telegraf service
    service:
      name: telegraf
      state: started
      enabled: yes

  - name: Download InfluxDB Stats Exporter binary
    get_url:
      url: https://github.com/carlpett/influxdb_stats_exporter/releases/download/v0.1.1/influx_stats_exporter_linux_amd64
      dest: /usr/local/bin/influxdb_stats_exporter
      mode: 0755

  - name: Create systemd service for InfluxDB Stats Exporter
    copy:
      src: ../files/influxdb.service.conf
      dest: /etc/systemd/system/prometheus-influxdb-stats-exporter.service
      mode: 0644
    notify: restart influxdb-stats-exporter
    no_log: true

  - name: Start InfluxDB Stats Exporter
    service:
      name: "{{ item }}"
      state: started
      enabled: yes
    loop:
      - prometheus-influxdb-stats-exporter


# ======= BACKUP =======

  - name: Ensure that influxdb directory exists 
    file:
      path: /home/backup/influxdb
      state: directory 
      owner: backup 
      group: backup 
      mode: '0755'

  - name: Ensure user backup can create InfluxDB dumps without errors
    ansible.builtin.shell:
      cmd: "sudo -u backup influxd backup -portable /tmp"
    register: dump_result
    changed_when: "dump_result.rc != 0"

  - name: Fail if the dump command did not execute successfully
    ansible.builtin.fail:
      msg: "Error running influxd backup command. Check InfluxDB user privileges."
    when: dump_result.rc != 0

  - name: InfluxDB backup cron job
    template:
      src: influxdb_cron.j2
      dest: /etc/cron.d/influxdb-backup
    no_log: true

  - name: Create CNAME record for Influxdb
    community.general.nsupdate:
      key_name: "nsupdate.key"
      server: "{{ groups['dns_primary'][0] }}"
      key_algorithm: "hmac-sha256"
      key_secret: "{{ nsupdate_secret }}"
      zone: "{{ startup_name }}"
      state: present
      record: "influxdb"
      type: "CNAME"
      value: "{{ hostvars[groups['influxdb'][0]]['ansible_hostname'] }}"
    no_log: true
